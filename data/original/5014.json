{"url": "https://api.github.com/repos/datalad/datalad/issues/5014", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5014/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5014/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5014/events", "html_url": "https://github.com/datalad/datalad/issues/5014", "id": 718873146, "node_id": "MDU6SXNzdWU3MTg4NzMxNDY=", "number": 5014, "title": "FOI: Windows terminals don't do well with single quotes", "user": {"login": "adswa", "id": 29738718, "node_id": "MDQ6VXNlcjI5NzM4NzE4", "avatar_url": "https://avatars.githubusercontent.com/u/29738718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adswa", "html_url": "https://github.com/adswa", "followers_url": "https://api.github.com/users/adswa/followers", "following_url": "https://api.github.com/users/adswa/following{/other_user}", "gists_url": "https://api.github.com/users/adswa/gists{/gist_id}", "starred_url": "https://api.github.com/users/adswa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adswa/subscriptions", "organizations_url": "https://api.github.com/users/adswa/orgs", "repos_url": "https://api.github.com/users/adswa/repos", "events_url": "https://api.github.com/users/adswa/events{/privacy}", "received_events_url": "https://api.github.com/users/adswa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-10-11T16:30:11Z", "updated_at": "2020-10-13T05:33:01Z", "closed_at": "2020-10-13T05:33:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "On Windows 10, in an Anaconda prompt, using various commands, the use of single quotes around multi-word arguments instead of double quotes leads to confusing behavior.\r\n\r\n``datalad save -m 'more then one word'`` does not save the file:\r\n\r\n```\r\n(base) C:\\Users\\datalad\\testing>datalad create blabla\r\n[INFO] Creating a new annex repo at C:\\Users\\datalad\\testing\\blabla\r\n[INFO] Detected a filesystem without fifo support.\r\n[INFO] Disabling ssh connection caching.\r\n[INFO] Detected a crippled filesystem.\r\n[INFO] Scanning for unlocked files (this may take some time)\r\n[INFO] Entering an adjusted branch where files are unlocked as this filesystem does not support locked files.\r\n[INFO] Switched to branch 'adjusted/master(unlocked)'\r\ncreate(ok): C:\\Users\\datalad\\testing\\blabla (dataset)\r\n\r\n(base) C:\\Users\\datalad\\testing>cd blabla\r\n\r\n(base) C:\\Users\\datalad\\testing\\blabla>echo 12345 > file\r\n\r\n(base) C:\\Users\\datalad\\testing\\blabla>datalad save -m 'bla bla'\r\n\r\n(base) C:\\Users\\datalad\\testing\\blabla>git status\r\nOn branch adjusted/master(unlocked)\r\nUntracked files:\r\n  (use \"git add <file>...\" to include in what will be committed)\r\n        file\r\n\r\nnothing added to commit but untracked files present (use \"git add\" to track)\r\n\r\n(base) C:\\Users\\datalad\\testing\\blabla>datalad save -m 'bla'\r\nadd(ok): C:\\Users\\datalad\\testing\\blabla\\file (file)\r\nsave(ok): C:\\Users\\datalad\\testing\\blabla (dataset)\r\naction summary:\r\n  add (ok: 1)\r\n  save (ok: 1)\r\n```\r\n\r\n(I swear I once saw it staging the file, but I can't reproduce it)\r\n\r\nWorks fine with double quotes:\r\n\r\n```\r\n(base) C:\\Users\\datalad\\testing>datalad create blabla2\r\n[INFO] Creating a new annex repo at C:\\Users\\datalad\\testing\\blabla2\r\n[INFO] Detected a filesystem without fifo support.\r\n[INFO] Disabling ssh connection caching.\r\n[INFO] Detected a crippled filesystem.\r\n[INFO] Scanning for unlocked files (this may take some time)\r\n[INFO] Entering an adjusted branch where files are unlocked as this filesystem does not support locked files.\r\n[INFO] Switched to branch 'adjusted/master(unlocked)'\r\ncreate(ok): C:\\Users\\datalad\\testing\\blabla2 (dataset)\r\n\r\n(base) C:\\Users\\datalad\\testing>cd  blabla2\r\n\r\n(base) C:\\Users\\datalad\\testing\\blabla2>echo 12345678 > file\r\n\r\n(base) C:\\Users\\datalad\\testing\\blabla2>datalad save -m \"bla bla\"\r\nadd(ok): C:\\Users\\datalad\\testing\\blabla2\\file (file)\r\nsave(ok): C:\\Users\\datalad\\testing\\blabla2 (dataset)\r\naction summary:\r\n  add (ok: 1)\r\n  save (ok: 1)\r\n```\r\n\r\nIts not DataLad though, the same happens to git:\r\n\r\n```\r\n(base) C:\\Users\\datalad\\testing>git init withgit\r\nInitialized empty Git repository in C:/Users/datalad/testing/withgit/.git/\r\n\r\n(base) C:\\Users\\datalad\\testing>cd withgit\r\n(base) C:\\Users\\datalad\\testing\\withgit>echo 1234567 > file\r\n(base) C:\\Users\\datalad\\testing\\withgit>git add file\r\n(base) C:\\Users\\datalad\\testing\\withgit>git commit -m 'bla bla'\r\nerror: pathspec 'bla'' did not match any file(s) known to git\r\n(base) C:\\Users\\datalad\\testing\\withgit>git commit -m 'bla'\r\n[master (root-commit) 7ccf1d6] 'bla'\r\n 1 file changed, 1 insertion(+)\r\n create mode 100644 file\r\n```\r\n\r\nIn ``datalad download-url``, commit message and url are not correctly parsed when enclosing in single quotes, too:\r\n it treats the message as a url, and can not infer a scheme for the URL:\r\n\r\n```\r\n(base) C:\\Users\\datalad\\testing\\imagenett>datalad -l debug download-url --archive --message 'lets see' 'https://s3.amazonaws.com/fast-ai-imageclas/imagenette2-160.tgz'\r\n[DEBUG] Command line args 1st pass. Parsed: Namespace() Unparsed: ['download-url', '--archive', '--message', \"'lets\", \"see'\", \"'https://s3.amazonaws.com/fast-ai-imageclas/imagenette2-160.tgz'\"]\r\n[DEBUG] Discovering plugins\r\n[DEBUG] Building doc for <class 'datalad.core.local.status.Status'>\r\n[DEBUG] Building doc for <class 'datalad.core.local.save.Save'>\r\n[DEBUG] Building doc for <class 'datalad.interface.download_url.DownloadURL'>\r\n[DEBUG] Parsing known args among ['C:\\\\Users\\\\datalad\\\\miniconda3\\\\Scripts\\\\datalad', '-l', 'debug', 'download-url', '--archive', '--message', \"'lets\", \"see'\", \"'https://s3.amazonaws.com/fast-ai-imageclas/imagenette2-160.tgz'\"]\r\n[DEBUG] Determined class of decorated function: <class 'datalad.interface.download_url.DownloadURL'>\r\n[DEBUG] Failed to import requests_ftp, thus no ftp support: No module named 'requests_ftp' [http.py:<module>:52]\r\n[DEBUG] parseParameters: Given \"\", we split into []\r\n[DEBUG] parseParameters: Given \"credential: Credential, optional\r\n|   Provides necessary credential fields to be used by authenticator\r\n| authenticator: Authenticator, optional\r\n|   Authenticator to use for authentication.\", we split into [('credential', 'credential: Credential, optional\\n  Provides necessary credential fields to be used by authenticator'), ('authenticator', 'authenticator: Authenticator, optional\\n  Authenticator to use for authentication.')]\r\n[DEBUG] parseParameters: Given \"\", we split into []\r\n[DEBUG] parseParameters: Given \"credential: Credential, optional\r\n|   Provides necessary credential fields to be used by authenticator\r\n| authenticator: Authenticator, optional\r\n|   Authenticator to use for authentication.\", we split into [('credential', 'credential: Credential, optional\\n  Provides necessary credential fields to be used by authenticator'), ('authenticator', 'authenticator: Authenticator, optional\\n  Authenticator to use for authentication.')]\r\n[DEBUG] Resolved dataset for downloading urls: C:\\Users\\datalad\\testing\\imagenett\r\n[DEBUG] Reading files: ['c:\\\\users\\\\datalad\\\\repos\\\\datalad\\\\datalad\\\\downloaders\\\\configs\\\\crawdad.cfg', 'c:\\\\users\\\\datalad\\\\repos\\\\datalad\\\\datalad\\\\downloaders\\\\configs\\\\crcns.cfg', 'c:\\\\users\\\\datalad\\\\repos\\\\datalad\\\\datalad\\\\downloaders\\\\configs\\\\figshare.cfg', 'c:\\\\users\\\\datalad\\\\repos\\\\datalad\\\\datalad\\\\downloaders\\\\configs\\\\hcp.cfg', 'c:\\\\users\\\\datalad\\\\repos\\\\datalad\\\\datalad\\\\downloaders\\\\configs\\\\indi.cfg', 'c:\\\\users\\\\datalad\\\\repos\\\\datalad\\\\datalad\\\\downloaders\\\\configs\\\\kaggle.cfg', 'c:\\\\users\\\\datalad\\\\repos\\\\datalad\\\\datalad\\\\downloaders\\\\configs\\\\loris.cfg', 'c:\\\\users\\\\datalad\\\\repos\\\\datalad\\\\datalad\\\\downloaders\\\\configs\\\\nda.cfg', 'c:\\\\users\\\\datalad\\\\repos\\\\datalad\\\\datalad\\\\downloaders\\\\configs\\\\nitrc.cfg', 'c:\\\\users\\\\datalad\\\\repos\\\\datalad\\\\datalad\\\\downloaders\\\\configs\\\\openfmri.cfg', 'c:\\\\users\\\\datalad\\\\repos\\\\datalad\\\\datalad\\\\downloaders\\\\configs\\\\providers.cfg']\r\n[DEBUG] Assigning credentials into 19 providers\r\n[DEBUG] Initializing default provider for\r\n[DEBUG] No dedicated provider, returning default one for : Provider(authenticator=None, credential=None, name='', url_res=['://.*'])\r\ndownload_url(error): C:\\Users\\datalad\\testing\\imagenett\\ (file) [Do not know how to handle url see' for scheme . Known: dict_keys(['http', 'https', 'ftp', 's3']) [providers.py:_get_downloader_class:120]]\r\n[DEBUG] No dedicated provider, returning default one for : Provider(authenticator=None, credential=None, name='', url_res=['://.*'])\r\ndownload_url(error): C:\\Users\\datalad\\testing\\imagenett\\ (file) [Do not know how to handle url 'https://s3.amazonaws.com/fast-ai-imageclas/imagenette2-160.tgz' for scheme . Known: dict_keys(['http', 'https', 'ftp', 's3']) [providers.py:_get_downloader_class:120]]\r\naction summary:\r\n  download_url (error: 2)\r\n[DEBUG] could not perform all requested actions: Command did not complete successfully. 2 failed:\r\n[{'action': 'download_url',\r\n  'message': \"Do not know how to handle url see' for scheme . Known: \"\r\n             \"dict_keys(['http', 'https', 'ftp', 's3']) \"\r\n             '[providers.py:_get_downloader_class:120]',\r\n  'path': 'C:\\\\Users\\\\datalad\\\\testing\\\\imagenett\\\\',\r\n  'status': 'error',\r\n  'type': 'file'},\r\n {'action': 'download_url',\r\n  'message': 'Do not know how to handle url '\r\n             \"'https://s3.amazonaws.com/fast-ai-imageclas/imagenette2-160.tgz' \"\r\n             \"for scheme . Known: dict_keys(['http', 'https', 'ftp', 's3']) \"\r\n             '[providers.py:_get_downloader_class:120]',\r\n  'path': 'C:\\\\Users\\\\datalad\\\\testing\\\\imagenett\\\\',\r\n  'status': 'error',\r\n  'type': 'file'}] [utils.py:generator_func:467]\r\n```\r\n\r\nIt works with double quotes.\r\n\r\nI have only tried this on my two Windows computers, both within an anaconda prompt, I'm not sure whether there is anything special about the single quotes that I am using here, or the terminal.", "closed_by": {"login": "adswa", "id": 29738718, "node_id": "MDQ6VXNlcjI5NzM4NzE4", "avatar_url": "https://avatars.githubusercontent.com/u/29738718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adswa", "html_url": "https://github.com/adswa", "followers_url": "https://api.github.com/users/adswa/followers", "following_url": "https://api.github.com/users/adswa/following{/other_user}", "gists_url": "https://api.github.com/users/adswa/gists{/gist_id}", "starred_url": "https://api.github.com/users/adswa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adswa/subscriptions", "organizations_url": "https://api.github.com/users/adswa/orgs", "repos_url": "https://api.github.com/users/adswa/repos", "events_url": "https://api.github.com/users/adswa/events{/privacy}", "received_events_url": "https://api.github.com/users/adswa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5014/timeline", "performed_via_github_app": null}