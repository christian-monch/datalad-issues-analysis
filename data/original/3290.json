{"url": "https://api.github.com/repos/datalad/datalad/issues/3290", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/3290/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/3290/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/3290/events", "html_url": "https://github.com/datalad/datalad/issues/3290", "id": 429362669, "node_id": "MDU6SXNzdWU0MjkzNjI2Njk=", "number": 3290, "title": "wishlist: benchmark of core functionality in case of untracked files", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-04T16:04:38Z", "updated_at": "2019-04-04T16:04:38Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "came up as a result of review in #3288 \r\n\r\nI guess we need a benchmark which would operate in some \"dirty\" repo somewhat heavy on files, subdirectories and possibly submodules which are not yet tracked. And there we would benchmark `save` performance on tracked, and not yet tracked path(s).   \r\n\r\nLocal filesystem caching though would be an obstacle and unfortunately we would not be able to `echo` to `/proc/sys/vm/drop_caches` to flush. But we already do a small `sudo` evil in `test_ro_operations` (and skip if not possible), so may be we would be doomed to introduce something like that to this benchmark - otherwise it would always provide \"hot\" performance.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/3290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/3290/timeline", "performed_via_github_app": null}