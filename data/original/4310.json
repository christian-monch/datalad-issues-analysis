{"url": "https://api.github.com/repos/datalad/datalad/issues/4310", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4310/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4310/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4310/events", "html_url": "https://github.com/datalad/datalad/issues/4310", "id": 582723965, "node_id": "MDU6SXNzdWU1ODI3MjM5NjU=", "number": 4310, "title": "wishlist: run --adjusted=otherbranch (and sure thing rerun knowing how to handle it ;-))", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778592, "node_id": "MDU6TGFiZWw2Mzc3ODU5Mg==", "url": "https://api.github.com/repos/datalad/datalad/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-17T03:12:45Z", "updated_at": "2020-03-17T03:12:45Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "ha -- couldn't come up with a better name ;-)\r\nThis use case is actually really tightly relates to good old `datalad-crawler` setup of working with archives.  We have `incoming` branch which has pristine content from the web, and `incoming-processed` which \"merges\" from incoming, but where content is extracted and possibly cleaned up.  So merge strategy is not really a merge - but rather \"take content of incoming tree, dump it here, perform operation, commit merge (so we know where we came from in incoming-processed and incoming).\r\n\r\nAnd now I came to the exact same situation in another case.  Consider e.g. one branch containing \".mnc\" files whenever we want another branch with \"nii.gz\" files, so we want to run `conversion` command.  Running once is all ok, but how to do it repeatedly if original branch would get changes to those .mnc files?\r\nIn my use case -- it is simply different naming of the files between two branches (`dandi organize` command).  In each of those cases it is just a matter of running a command on the content of another commit, and committing it as a merge based on the previous state of this other branch (could be the same if it is initial commit where such run is performed).\r\nIf we have this, future possible RFing of datalad-crawler could have taken advantage of it as well.\r\n\r\nSo it does remind \"adjusted\" branches of git-annex! but with `datalad run` flavor to it ;-)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4310/timeline", "performed_via_github_app": null}