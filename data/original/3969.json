{"url": "https://api.github.com/repos/datalad/datalad/issues/3969", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/3969/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/3969/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/3969/events", "html_url": "https://github.com/datalad/datalad/issues/3969", "id": 543092692, "node_id": "MDU6SXNzdWU1NDMwOTI2OTI=", "number": 3969, "title": "Adjusted branches break \"tracking branch\" logic", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778590, "node_id": "MDU6TGFiZWw2Mzc3ODU5MA==", "url": "https://api.github.com/repos/datalad/datalad/labels/severity-normal", "name": "severity-normal", "color": "ff8888", "default": false, "description": "standard severity"}, {"id": 1757223715, "node_id": "MDU6TGFiZWwxNzU3MjIzNzE1", "url": "https://api.github.com/repos/datalad/datalad/labels/adjusted-branches", "name": "adjusted-branches", "color": "0052cc", "default": false, "description": "Issues caused by or affected adjusted branch operation"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-28T08:08:58Z", "updated_at": "2021-07-29T05:59:11Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "`get_tracking_branch()` is broken in windows for datasets cloned from a local source repo that is also in adjusted mode. This is also affecting `_get_tracking_source()` in the `clone()` code. `get_active_branch()` gives\r\n\r\n```\r\n'adjusted/master(unlocked)'\r\n```\r\n\r\nand this is the config:\r\n\r\n```\r\n[branch \"adjusted/master(unlocked)\"]\r\n\tremote = origin\r\n\tmerge = refs/heads/adjusted/master(unlocked)\r\n```\r\n\r\nThe culprit seems to be \r\n\r\n```\r\n>>> destds.repo.get_tracking_branch(corresponding=False)\r\n('origin', 'refs/heads/adjusted/master(unlocked)')\r\n>>> destds.repo.get_tracking_branch(corresponding=True)\r\n(None, None)\r\n```\r\n\r\nSo all is good for GitRepos, and this particular piece of logic in AnnexRepo is the breakage:\r\n\r\n```\r\n        return super(AnnexRepo, self).get_tracking_branch(\r\n                        branch=self.get_corresponding_branch(branch)\r\n                        if corresponding else branch)\r\n```\r\n\r\nIt specifically asks for the tracking branch of the corresponding branch (of which there is none.\r\n\r\nThere seems to be no easy way out. `corresponding=True` is the default, and there is no such parameter for the GitRepo method. With `corresponding=False`, `clone()` would be able to detect whether a dataset sibling was clones from a particular local path. At present and because of this issue, it cannot do this, which is not the case for non-adjusted repos.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/3969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/3969/timeline", "performed_via_github_app": null}