{"url": "https://api.github.com/repos/datalad/datalad/issues/1589", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/1589/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/1589/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/1589/events", "html_url": "https://github.com/datalad/datalad/pull/1589", "id": 236665623, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI2MTU3NzUy", "number": 1589, "title": "`metadata` command ", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/datalad/datalad/milestones/40", "html_url": "https://github.com/datalad/datalad/milestone/40", "labels_url": "https://api.github.com/repos/datalad/datalad/milestones/40/labels", "id": 2580589, "node_id": "MDk6TWlsZXN0b25lMjU4MDU4OQ==", "number": 40, "title": "Release 0.6.1", "description": "Fixups for what was not yet fixed and new bugs introduced in 0.6.0", "creator": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 24, "state": "closed", "created_at": "2017-06-13T14:32:11Z", "updated_at": "2017-09-08T13:31:00Z", "due_on": null, "closed_at": "2017-09-08T13:31:00Z"}, "comments": 2, "created_at": "2017-06-17T15:07:04Z", "updated_at": "2018-07-14T23:51:51Z", "closed_at": "2017-06-24T07:43:43Z", "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/1589", "html_url": "https://github.com/datalad/datalad/pull/1589", "diff_url": "https://github.com/datalad/datalad/pull/1589.diff", "patch_url": "https://github.com/datalad/datalad/pull/1589.patch"}, "body": "On the way to 1st class preferred content management we need a frontend for git annex' metadata (tagging). Here is comes. While being add it I also implemented native support for dataset-level metadata:\r\n\r\nChanges:\r\n\r\n- [x] make `AnnexRepo` getter/setter generators\r\n- [x] draft of a highlevel command to channel all of git-annex' file based metadata support\r\n- [x] uniform support for dataset-level metadata via the same interface and semantics as for file-level metadata\r\n- [x] dataset-level metadata is stored in JSON format (optimized for diffability) directly in Git\r\n- [x] support for key definitions: while this is not the same as linked data, it represents a minimalistic compromise between precise semantics, and compact representation with minimal performance impact\r\n- [x] somewhat useful custom result renderer for metadata\r\n- [x] usual multi-dataset handling\r\n\r\nMore details are in the docstring of the command.\r\n\r\nPossible TODOs (not necessarily in this PR):\r\n\r\n- [ ] add `--import-from` option that uses a selected metadata parser (from the existing set that we have) to extract metadata from a supported format and imports it into our own dataset-level metadata. This should be easy to implement by building a corresponding value for the `init` arg of this command from the parser results, hence only amending existing metadata. Actually the edit strategy could be selected as `init`, `add`, or `reset`.", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/1589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/1589/timeline", "performed_via_github_app": null}