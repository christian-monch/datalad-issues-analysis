{"url": "https://api.github.com/repos/datalad/datalad/issues/3162", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/3162/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/3162/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/3162/events", "html_url": "https://github.com/datalad/datalad/issues/3162", "id": 409936043, "node_id": "MDU6SXNzdWU0MDk5MzYwNDM=", "number": 3162, "title": "run: multistage mode of operation", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2767259861, "node_id": "MDU6TGFiZWwyNzY3MjU5ODYx", "url": "https://api.github.com/repos/datalad/datalad/labels/cmd-run/rerun", "name": "cmd-run/rerun", "color": "FEF2C0", "default": false, "description": "Issues about the favorite command of ReproPeople"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-13T18:14:50Z", "updated_at": "2021-02-24T00:00:24Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I think with `reproman run` or without it would be nice to be able to do something like \r\n`datalad run --input ... --output ... --stages=prepare,exec sbatch --array 0-100  script.sbatch`\r\nso it would do everything needed (`prepare` - get/unlock; may be worth separate even more?), and `exec` (choose word different from `run`), but not even try to save since that is a batch job and no relevant changes would be present upon sbatch completion.  I also do not want to make it into some wrapper which would stay there waiting for that queued job to complete. I want manually, whenever it is done, do `datalad run --stages=save` which would pick up from the spot it left.\r\nThe initial implementation could be minimal, just storing some `.git/DATALAD_RUN` file with e.g. the json record upon initial execution, to be later reused in every stage, and later saved in a commit. `datalad run` without --stages could whine/crash if it runs into such record.\r\nEven without guarding for which states were actually already executed, allowing to hurt yourself,  it would open up a number of usecases for `datalad run`.\r\n\r\nIdeally, of cause, the final json record should have some list of stages which were executed in separate `run` invocations, and we would need to be able to pass e.g. `exit_status` to the `save` stage.\r\n\r\nWhat do you think @kyleam or may be there is already some way to do it? e.g. may be at least exposing `inject` parameter of `run_command` then, I guess, I could rerun original command in full twice (2nd time with `--inject`?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/3162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/3162/timeline", "performed_via_github_app": null}