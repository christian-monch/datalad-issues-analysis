{"url": "https://api.github.com/repos/datalad/datalad/issues/4919", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4919/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4919/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4919/events", "html_url": "https://github.com/datalad/datalad/issues/4919", "id": 700568534, "node_id": "MDU6SXNzdWU3MDA1Njg1MzQ=", "number": 4919, "title": "ConfigManager.get() not aligned with `git config <var>` behavior", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778590, "node_id": "MDU6TGFiZWw2Mzc3ODU5MA==", "url": "https://api.github.com/repos/datalad/datalad/labels/severity-normal", "name": "severity-normal", "color": "ff8888", "default": false, "description": "standard severity"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-09-13T13:17:58Z", "updated_at": "2020-09-18T03:55:12Z", "closed_at": "2020-09-18T03:55:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Problem: A dataset has two (identical) pushurls configured (for no good reason).\r\n\r\n```\r\n% cat /ds/hcp/super/HCP1200/108121/MNINonLinear/.git/config \r\n...\r\n[remote \"origin\"]\r\n        url = http://store.datalad.org/ceb/604be-2baf-11ea-ae67-002590496000\r\n        fetch = +refs/heads/*:refs/remotes/origin/*\r\n        annex-ignore = true\r\n        pushurl = falkor.dartmouth.edu:/srv/store.datalad.org/www/ceb/604be-2baf-11ea-ae67-002590496000\r\n        pushurl = falkor.dartmouth.edu:/srv/store.datalad.org/www/ceb/604be-2baf-11ea-ae67-002590496000\r\n...\r\n```\r\n\r\nHowever, Git is unimpaired by that, because it reports the last values by default, whereas our `get()` always reports all values:\r\n\r\n```\r\n% git -C /ds/hcp/super/HCP1200/108121/MNINonLinear config remote.origin.pushurl \r\nfalkor.dartmouth.edu:/srv/store.datalad.org/www/ceb/604be-2baf-11ea-ae67-002590496000\r\n```\r\n\r\nI cannot show that, because it crashes DataLad:\r\n\r\n```\r\n% python -c 'from datalad.api import Dataset; Dataset(\"/ds/hcp/super/HCP1200/108121/MNINonLinear\").config'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/mih/code/datalad/datalad/distribution/dataset.py\", line 343, in config\r\n    repo = self.repo\r\n  File \"/home/mih/code/datalad/datalad/distribution/dataset.py\", line 289, in repo\r\n    self._repo = repo_from_path(self._path)\r\n  File \"/home/mih/code/datalad/datalad/core/local/repo.py\", line 61, in repo_from_path\r\n    repo = cls(path, create=False, **kw)\r\n  File \"/home/mih/code/datalad/datalad/support/repo.py\", line 151, in __call__\r\n    instance = type.__call__(cls, *new_args, **new_kwargs)\r\n  File \"/home/mih/code/datalad/datalad/support/annexrepo.py\", line 260, in __init__\r\n    self._set_shared_connection(r, url)\r\n  File \"/home/mih/code/datalad/datalad/support/annexrepo.py\", line 428, in _set_shared_connection\r\n    if is_ssh(url):\r\n  File \"/home/mih/code/datalad/datalad/support/network.py\", line 923, in is_ssh\r\n    _ri = RI(ri) if not isinstance(ri, RI) else ri\r\n  File \"/home/mih/code/datalad/datalad/support/network.py\", line 419, in __new__\r\n    cls = _guess_ri_cls(ri)\r\n  File \"/home/mih/code/datalad/datalad/support/network.py\", line 329, in _guess_ri_cls\r\n    if is_windows_path(ri):\r\n  File \"/home/mih/code/datalad/datalad/support/network.py\", line 72, in is_windows_path\r\n    win_split = win_splitdrive(path)\r\n  File \"/home/mih/venvs/datalad/lib/python3.7/ntpath.py\", line 141, in splitdrive\r\n    p = os.fspath(p)\r\nTypeError: expected str, bytes or os.PathLike object, not tuple\r\n```\r\n\r\n`not tuple` is because both values are reported in a tuple.\r\n\r\nInvestigating why SSH-related code needs to run in this context is another side issue that like also has performance impact.\r\n\r\nI think `ConfigManager` should offer a way to make client-code not worry about single or multiple values coming out, when only a single one is expected and only a single one can be handled.", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4919/timeline", "performed_via_github_app": null}