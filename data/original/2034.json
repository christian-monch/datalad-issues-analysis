{"url": "https://api.github.com/repos/datalad/datalad/issues/2034", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/2034/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/2034/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/2034/events", "html_url": "https://github.com/datalad/datalad/issues/2034", "id": 282547060, "node_id": "MDU6SXNzdWUyODI1NDcwNjA=", "number": 2034, "title": "Looking for a compact ruleset for constructing metadata keys", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-15T21:02:57Z", "updated_at": "2018-02-10T09:43:48Z", "closed_at": "2018-02-10T09:43:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "ATM they are based on gut feeling, but we need something better. In general we don't have to care much, because we can assign proper definitions to each key. However, those definitions are for users with lots of time and for machines. Any casual use will rely on human-compatibility of the metadata keys, in order to be able to construct meaningful search queries without having to memorize a giant dictionary.\r\n\r\nOne tricky case is the association of information about a \"distant\" property of data. We only work with files and dataset, hence anything that is not directly a property of these entities is \"distant\". Example: the age of a participant a brain scan (the file) was made from.\r\n\r\nATM we use something like 'bids:age(years)'. However, the information that this is the participant's age is hidden in the term definition of 'bids:age(years)'.\r\n\r\nWe could start using something like: 'bids:participant#age(years)'. Where the `#` indicates \"a property of\" and `participant` would be a defined entity. Not sure about the choice of the delimiter, though. Also git-annex is picky about valid characters for metadata keys.\r\n\r\nI am aware that we will not be able to map entire graphs onto such names, but AFAICS we would only need one level to enable many use cases and still be able to put things into a plain table for `search` later on.\r\n\r\nAlternatively, we could explore storage of arbitrarily nested data structures in the aggregated metadata, and move the naming logic into the search index generation.\r\n\r\nNow that I wrote that, it seems to be the obvious choice... @yarikoptic ", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/2034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/2034/timeline", "performed_via_github_app": null}