{"url": "https://api.github.com/repos/datalad/datalad/issues/4472", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4472/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4472/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4472/events", "html_url": "https://github.com/datalad/datalad/issues/4472", "id": 610201752, "node_id": "MDU6SXNzdWU2MTAyMDE3NTI=", "number": 4472, "title": "ENH: take advantage of annex.commitmessage", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390153891, "node_id": "MDU6TGFiZWwzOTAxNTM4OTE=", "url": "https://api.github.com/repos/datalad/datalad/labels/UX", "name": "UX", "color": "0052cc", "default": false, "description": "user experience"}, {"id": 736433505, "node_id": "MDU6TGFiZWw3MzY0MzM1MDU=", "url": "https://api.github.com/repos/datalad/datalad/labels/severity-wishlist", "name": "severity-wishlist", "color": "ffeeee", "default": false, "description": "feature request, or bugs that are very difficult to fix due to design issues"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-30T16:13:18Z", "updated_at": "2020-11-10T16:58:25Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "[support for custom commit messages to git-annex branch](https://git-annex.branchable.com/todo/be_able_to_specify_custom_commit_message_for_git-annex_branch_commit/) was implemented awhile back.  Could be done (didn't try yet ;-)) via configuration variable `annex.commitmessage`. Not that I am looking into git-annex branch often, but times did come when I wanted to have an idea what command I ran actually introduced the \"update\", so had to resort to `git log --stat git-annex` to get an idea.\r\n\r\nTricky case could be the batched processes, or execution with `alwayscommit=False`.  If I get it right, then a single commit would be created for multiple possible different operations, and thus providing anything but \"update\" could be misleading.\r\n\r\nBut if it is a result of some trivial operation (unbatched get without alwayscommit=False) -- it would be nice to have a commit message like \"update [get 10 files]\" or alike. Could also come handy may be to annotate git-annex branch commits with tags for internal use, see an idea within https://github.com/datalad/datalad-metalad/issues/45 .", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4472/timeline", "performed_via_github_app": null}