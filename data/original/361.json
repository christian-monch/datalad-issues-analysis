{"url": "https://api.github.com/repos/datalad/datalad/issues/361", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/361/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/361/events", "html_url": "https://github.com/datalad/datalad/issues/361", "id": 136724701, "node_id": "MDU6SXNzdWUxMzY3MjQ3MDE=", "number": 361, "title": "Helper to automate creation of Debian data packages for existing hybrid code/data software project repos", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778592, "node_id": "MDU6TGFiZWw2Mzc3ODU5Mg==", "url": "https://api.github.com/repos/datalad/datalad/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-26T15:18:25Z", "updated_at": "2016-02-26T16:33:02Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This is not directly concerned with goals of the DataLad project but I think this issue tracker would be the most appropriate and most probably should be implemented within datalad (or as some kind of plugin...).  I want to outline the idea and seek your feedback on how to improve it or botcher it.\n\nOur use-case example is http://github.com/neurodebian/freesurfer (atm ~64MB .git/objects after repacking) -- upstream provides multi-GB git/annex repo with data and some pre-built libraries intermixed with source code.  autotools used to 'install' data, which entails also extracting from archives and copying (so annex links are dereferenced) everything under installation path.\n\nWith the support of the content from archives, and eventual helpers for git-annex based debian packages, datalad can provide a really nice helper to facilitate creation of debian packages through following steps:\n- Register original annex as 'git' special remote\n- Given a \"source\" git-annex, go through it and in a dedicated branch (`incoming-processed`? ;) ) add content of all found annexed archives.  \n- Publish 'enhanced' annex ANNEX somewhere (e.g. github) without data but now with datalad supported archive URLs so any installable data file could be fetched through annex from original upstream (or our clone somewhere) git/annex\n- Do normal installation procedure for the project and then\n  a. initiate in the installed \"root\" directory an annex which would either be new or a clone (without files checked out) of one from previous build and having ANNEX as a remote.  Actually may be just a branch (again checked out without files) within the same ANNEX thus we could easily reuse it and not breed git/annexes\n  b.  traverse the installed tree, while under specified paths/filename patterns, based on the checksum matching the used annex backends find files which are available under annex and \"annex add\" them\n  c.  move annexed files into a separate (e.g. -data) package\n\nConcern with above is in the case when multiple packages are desired (-data, -data-nonfree, -doc) which then should ideally reuse the same git/annex.  May be then there could be an -data package which would provide the annex to overlay but without instruction to fetch any load (besides may be some common).  Then separate packages (-data-nonfree, ...) would depend on it and only do additional fetching of necessary files in their debhelper scripts, thus not really shipping any data.  This way we can provide any necessary level of granularity while keeping only a single git/annex to be installed and small debian packages\n\n@hanke -- I would be really eager to hear your opinion on this ;)\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/361/timeline", "performed_via_github_app": null}