{"url": "https://api.github.com/repos/datalad/datalad/issues/486", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/486/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/486/events", "html_url": "https://github.com/datalad/datalad/issues/486", "id": 157375186, "node_id": "MDU6SXNzdWUxNTczNzUxODY=", "number": 486, "title": "Support installation from ZENODO", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778592, "node_id": "MDU6TGFiZWw2Mzc3ODU5Mg==", "url": "https://api.github.com/repos/datalad/datalad/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-29T08:18:56Z", "updated_at": "2019-11-06T15:01:41Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Got this idea from a reviewer comment. Starting from a ZENODO DOI for a GitHub dataset repo it is non-trival to obtain the actual dataset for a user -- the ZENODO download (ZIP file) does not contain a full Git repo, but only the content checked into Git. Check this for an example:\n\nhttp://dx.doi.org/10.5281/zenodo.48421\n\nHowever, we should be able to support this quite easily. ZENODO lists the tag/release a DOI corresponds to. We only need to resolve the address of the repo from this URL, clone/install it, and subsequently check out the corresponding commit.\n\nTaking a step back, we may want to enhance the API to install a particular branch/tag/commit of a repo. If we support that, adding the ZENODO DOI support is rather simple.\n\nTaking a further step back: Maybe we want to add support for custom resolvers. `datalad-resolver-zenodo` could be one implementation of a plugin that, given a URL, returns the \"clone URL\" plus a commit-ish to check out.\n\nNot quite sure yet how this could look wrt the top-level API. Maybe it would be all magic. We could \"take a look\" at any source URL for dataset installation, and run it through all available plugins to check whether they are willing to deal with it (so have some sort if validation mode).\n\nOr no magic at all and we add a `--resolve <service>` option, where `service` would be ZENODO and the plugin would be called to convert the source URL (which would be a DOI and not a URL).\n\nI like the last one better, but it somewhat contradicts the concept of a DOI that should just resolve to the real thing, without additional parameters.\n\nWhat do you think?\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/486/timeline", "performed_via_github_app": null}