{"url": "https://api.github.com/repos/datalad/datalad/issues/2862", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/2862/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/2862/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/2862/events", "html_url": "https://github.com/datalad/datalad/issues/2862", "id": 362702545, "node_id": "MDU6SXNzdWUzNjI3MDI1NDU=", "number": 2862, "title": "\"add\" vs \"save\" and unlocked files in v6", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-09-21T17:06:32Z", "updated_at": "2020-02-25T16:06:46Z", "closed_at": "2020-02-25T16:06:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### What is the problem?\r\n\r\nI guess it all depends on either we might want to treat the ability of committing \"unlocked state\" into git/git-annex as a pointer file (when file is unlocked, and you do `git commit file` or `git add; git commit`, also depending on .gitattributes config) as a \"feature\" we should use/embrace or try to avoid.  \r\nSo far IMHO in all use cases I would prefer to commit the actual git annex symlink into git, even if file was unlocked.  And may be in some cases leave it unlocked in the tree for further changes.  I really see no point of committing a pointer file really.  What do you think?\r\n\r\nAnd that is what we are getting (committing the annex symlink) if I do `datalad add unlocked_modified` (which internally likely does `git annex add` to make it happen).\r\nBut we are committing the pointer file if I do just `datalad save`, and annex symlink if I specify the file `datalad save unlocked_modified`.\r\n\r\nOverall this dichotomy between annex symlinks and pointer files could cause the next level of confusion for regular users.", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/2862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/2862/timeline", "performed_via_github_app": null}