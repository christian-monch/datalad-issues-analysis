{"url": "https://api.github.com/repos/datalad/datalad/issues/4401", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4401/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4401/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4401/events", "html_url": "https://github.com/datalad/datalad/issues/4401", "id": 599400783, "node_id": "MDU6SXNzdWU1OTk0MDA3ODM=", "number": 4401, "title": "Concurrency handling, even a little", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390153891, "node_id": "MDU6TGFiZWwzOTAxNTM4OTE=", "url": "https://api.github.com/repos/datalad/datalad/labels/UX", "name": "UX", "color": "0052cc", "default": false, "description": "user experience"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-14T08:46:04Z", "updated_at": "2020-11-10T17:00:49Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "When multiple datalad activities target a single dataset things can fail quickly and seemingly at random. I think we should invest (minimal) effort to not impose this on users completely. Example of a creating a subdataset while something else is modifying a dataset:\r\n\r\n```\r\n[INFO   ] Creating a new annex repo at /tmp/top/a36 \r\n[INFO   ] Scanning for unlocked files (this may take some time) \r\nCommandError: 'git commit -m '[DATALAD] Recorded changes' --' failed with exitcode 128 under /tmp/top\r\nfatal: Unable to create '/tmp/top/.git/index.lock': File exists.\r\n\r\nAnother git process seems to be running in this repository, e.g.\r\nan editor opened by 'git commit'. Please make sure all processes\r\nare terminated then try again. If it still fails, a git process\r\nmay have crashed in this repository earlier:\r\nremove the file manually to continue.\r\n```\r\n\r\nThere is no reason to fail at the commit stage. Either fail at the very beginning, or place our own lock for write operations that coordinate some level of concurrent access. E.g. when `save()` starts and sees a lock it could simply wait until it can acquire the lock and only then perform its dataset state assessment.\r\n\r\nI believe that if we implement a meaningful concurrency protection for the core commands `save()` (first and foremost), `create()`, and `run()`, we would already get a long way.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4401/timeline", "performed_via_github_app": null}