{"url": "https://api.github.com/repos/datalad/datalad/issues/4765", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4765/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4765/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4765/events", "html_url": "https://github.com/datalad/datalad/issues/4765", "id": 664785874, "node_id": "MDU6SXNzdWU2NjQ3ODU4NzQ=", "number": 4765, "title": "rerun: add ability to rerun into a \"new\" dataset to facilitate rerun on dataset hierarchies", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778592, "node_id": "MDU6TGFiZWw2Mzc3ODU5Mg==", "url": "https://api.github.com/repos/datalad/datalad/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": ""}, {"id": 2767259861, "node_id": "MDU6TGFiZWwyNzY3MjU5ODYx", "url": "https://api.github.com/repos/datalad/datalad/labels/cmd-run/rerun", "name": "cmd-run/rerun", "color": "FEF2C0", "default": false, "description": "Issues about the favorite command of ReproPeople"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-23T21:48:17Z", "updated_at": "2021-03-08T16:05:04Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "As @kyleam has reminded during the call, one of the outstanding issues with `rerun` is inability to do anything about changing the state of subdatasets upon rerun.  The major stumbling point is inability to record/recall states (https://github.com/datalad/datalad/issues/1424) of dataset(s) hierarchy: the issue was identified awhile back, discussed a number of times, but its implementation IIRC wasn't even attempted since logistics would be quite complicated, especially since (unlike `git`) we install submodules `.git/` (instead of establishing a link to some centralized `.git/modules` in some super-dataset). \r\n\r\n**The overall idea**: add an option to `rerun`, such as `--sibling-path PATH`, which would in a nutshell be:\r\n\r\n- install \"reran\" dataset at the `since` version into that new PATH (original dataset would become origin, all commits are accessible)\r\n  - the only TODO is to implement generic \"install at version X\"  (see #1810) which is currently supported only for RIA remotes  (implemented in #4022)\r\n- carry out rerun in that \"new\" dataset \r\n  - the only TODO as far as I see is the ability to implement recursive `rerun` where changes in the submodule hexsha within its parent repository should be tracked as well regarding the diff etc`*`, `**`.  In a nutshell it should just translate to the series of recursive `rerun` calls within subdatasets.\r\n\r\n`*` I feel like we had mentioning of this in some issue/PR but failed to search it up\r\n\r\n`**` Needed only if subdataset had a diff for a commit in its super dataset which had no RUNCMD record, and contained some commits with RUNCMD record (so needs independent rerun) or it had participated in some `rerun` before.  So in some cases we don't even need to rerun recursively, but just `update` subdataset to the new state.\r\n\r\nUnless I am not seeing some additional steps/aspects, implementing those two \"steps\" should be sufficient to make `rerun` usable with YODA style dataset hierarchies, while avoiding need for a more complicated \"in-place\" #1424. Resultant \"new\" dataset (hierarchy) could then be interrogated with `datalad diff [-r]` regarding differences to the state of its \"origin\" to verify reproducibility etc.   Regular `rerun` invocation could just error out with a message to use this new mode of operation if it detects any change within subdataset as part of the protocol to rerun.\r\n\r\nSugarings to add on top:\r\n\r\n- `--wreckless=mode` option to be applied for any (sub)dataset found installed in the original location  (some subdatasets might need to be installed from the original location, thus would require non-wreckless handling) (this could be really useful! we could introduce it first as a configuration item and if there is  demand - add an option)\r\n- option to add \"new\" dataset as a sibling to the current dataset or relevant (the ones \"touched\" by `rerun`) hierarchy of subdatasets (although largely not necessary IMHO)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4765/timeline", "performed_via_github_app": null}