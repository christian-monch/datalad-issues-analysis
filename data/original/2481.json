{"url": "https://api.github.com/repos/datalad/datalad/issues/2481", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/2481/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/2481/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/2481/events", "html_url": "https://github.com/datalad/datalad/issues/2481", "id": 321298547, "node_id": "MDU6SXNzdWUzMjEyOTg1NDc=", "number": 2481, "title": "Default result format is inaccessible via 'datalad -f default ...'", "user": {"login": "kyleam", "id": 1297788, "node_id": "MDQ6VXNlcjEyOTc3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleam", "html_url": "https://github.com/kyleam", "followers_url": "https://api.github.com/users/kyleam/followers", "following_url": "https://api.github.com/users/kyleam/following{/other_user}", "gists_url": "https://api.github.com/users/kyleam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleam/subscriptions", "organizations_url": "https://api.github.com/users/kyleam/orgs", "repos_url": "https://api.github.com/users/kyleam/repos", "events_url": "https://api.github.com/users/kyleam/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-08T18:34:09Z", "updated_at": "2021-03-09T17:01:45Z", "closed_at": "2021-03-09T17:01:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If a command sets a custom `result_renderer`, I don't see a way to get the non-custom format. Looking at `datalad --help`, I'd expect `-f default` to always give me this format.\r\n\r\n    [...]\r\n      -f {default,json,json_pp,tailored,'<template>'}, --output-format {default,json,json_pp,tailored,'<template>'}\r\n                            select format for returned command results. 'default'\r\n                            give one line per result reporting action, status,\r\n                            path and an optional message;\r\n    [...]\r\n\r\nHowever, \"default\" instead uses whatever is specified by the class's `result_renderer`.\r\n\r\nThis is because we ignore `common_output_format` if it is \"default\":\r\n\r\n<https://github.com/datalad/datalad/blob/43e37edc6f00b6edf250f1edc0116b9bd62f3f87/datalad/interface/base.py#L403-L405>\r\n\r\nSo I'd say that the problem is that we're conflating the default renderer for a command and the \"default\" output format.  Perhaps we should give the output format a name other than \"default\", so that `-f default` means \"use the command's default renderer\" and `-f <other name>` means \"use the format described in the help message above\".\r\n\r\nThoughts?\r\n\r\n---\r\n\r\nHere's an example of what I'm talking about.\r\n\r\n```python\r\nfrom datalad.interface.base import Interface\r\nfrom datalad.interface.base import build_doc\r\nfrom datalad.interface.results import get_status_dict\r\n\r\n\r\n@build_doc\r\nclass Foo(Interface):\r\n    from datalad.distribution.dataset import EnsureDataset\r\n    from datalad.distribution.dataset import datasetmethod\r\n    from datalad.interface.utils import eval_results\r\n    from datalad.support.constraints import EnsureNone\r\n    from datalad.support.param import Parameter\r\n\r\n    result_renderer = \"json_pp\"\r\n\r\n    _params_ = dict(\r\n        dataset=Parameter(\r\n            args=(\"-d\", \"--dataset\"),\r\n            doc=\"\"\"\"dataset to foo.\"\"\",\r\n            constraints=EnsureDataset() | EnsureNone()),\r\n    )\r\n\r\n    @staticmethod\r\n    @eval_results\r\n    def __call__(dataset=None):\r\n        yield get_status_dict(\"foo\",\r\n                              message=\"did foo\",\r\n                              type=\"dataset\",\r\n                              path=dataset.path if dataset else \"nowhere\",\r\n                              status=\"ok\")\r\n\r\n\r\n__datalad_plugin__ = Foo\r\n```\r\n\r\n```shell\r\n% datalad foo\r\n{\r\n  \"action\": \"foo\",\r\n  \"path\": \"nowhere\",\r\n  \"status\": \"ok\",\r\n  \"type\": \"dataset\"\r\n}\r\n\r\n% datalad -f json foo\r\n{\"action\": \"foo\", \"path\": \"nowhere\", \"status\": \"ok\", \"type\": \"dataset\"}\r\n\r\n% datalad -f default foo\r\n{\r\n  \"action\": \"foo\",\r\n  \"path\": \"nowhere\",\r\n  \"status\": \"ok\",\r\n  \"type\": \"dataset\"\r\n}\r\n```\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/2481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/2481/timeline", "performed_via_github_app": null}