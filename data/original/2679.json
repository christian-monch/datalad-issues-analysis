{"url": "https://api.github.com/repos/datalad/datalad/issues/2679", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/2679/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/2679/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/2679/events", "html_url": "https://github.com/datalad/datalad/pull/2679", "id": 336718138, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4MTA0ODM1", "number": 2679, "title": "RF: report relative paths by default (configurable, 'datalad.runtime.report-pathstyle')", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390153891, "node_id": "MDU6TGFiZWwzOTAxNTM4OTE=", "url": "https://api.github.com/repos/datalad/datalad/labels/UX", "name": "UX", "color": "0052cc", "default": false, "description": "user experience"}, {"id": 1453907298, "node_id": "MDU6TGFiZWwxNDUzOTA3Mjk4", "url": "https://api.github.com/repos/datalad/datalad/labels/stale-PR-closed-without-merge", "name": "stale-PR-closed-without-merge", "color": "ffffff", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-28T17:48:25Z", "updated_at": "2019-07-17T05:43:20Z", "closed_at": "2019-07-17T05:43:19Z", "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/2679", "html_url": "https://github.com/datalad/datalad/pull/2679", "diff_url": "https://github.com/datalad/datalad/pull/2679.diff", "patch_url": "https://github.com/datalad/datalad/pull/2679.patch"}, "body": "I do appreciate the fact that we can have wide terminals now, but working with datalad deep within some hierarchy floods the screen with full paths, causing unpleasant wraps etc.  So I took a first attempt at trying to report relpaths by default to seek your feedback.  E.g. now it would report\r\n```shell\r\n(git-annex)hopa:~/datalad/openfmri/ds000001[master]sub-01\r\n$> datalad get anat/\r\nget(ok): anat/sub-01_inplaneT2.nii.gz (file) [from web...]\r\nget(ok): anat/sub-01_T1w.nii.gz (file) [from web...]\r\nget(ok): anat (directory)\r\n```\r\ninstead of \r\n```shell\r\n$> datalad get anat/                                                                                         \r\nget(ok): /home/yoh/datalad/openfmri/ds000001/sub-01/anat/sub-01_inplaneT2.nii.gz (file) [from web...]\r\nget(ok): /home/yoh/datalad/openfmri/ds000001/sub-01/anat/sub-01_T1w.nii.gz (file) [from web...]\r\nget(ok): /home/yoh/datalad/openfmri/ds000001/sub-01/anat (directory)\r\n```\r\nbut I've not yet taken any precautions against cases where I run datalad commands outside providing full paths and thus leading to horrendous\r\n```shell\r\nhopa:/tmp\r\n$> datalad get /home/yoh/datalad/openfmri/ds000001/sub-01/anat\r\nget(ok): ../home/yoh/datalad/openfmri/ds000001/sub-01/anat/sub-01_inplaneT2.nii.gz (file) [from web...]\r\nget(ok): ../home/yoh/datalad/openfmri/ds000001/sub-01/anat/sub-01_T1w.nii.gz (file) [from web...]\r\nget(ok): ../home/yoh/datalad/openfmri/ds000001/sub-01/anat (directory)\r\n```\r\nThis is just a first trial to bring discussion back\r\n\r\nIMHO ultimately/ideally it should report path inline with the specification in the original request, but for many commands it seems that `orig_request` path is not provided for \"subpaths\" -- could we retain the last one seen and act from it? I don't think so since those seems to come out of order (here is with the printout of `res` structures):\r\n```shell\r\n$> datalad get /home/yoh/datalad/openfmri/ds000001/sub-0{1,2}/anat\r\n{'status': '', 'orig_request': '/home/yoh/datalad/openfmri/ds000001/sub-01/anat', 'parentds': '/home/yoh/datalad/openfmri/ds000001', 'action': 'get', 'path': '/home/yoh/datalad/openfmri/ds000001/sub-01/anat', 'logger': <logging.Logger object at 0x7f7c42750f50>, 'type': 'directory', 'raw_input': True}\r\n{'status': '', 'orig_request': '/home/yoh/datalad/openfmri/ds000001/sub-02/anat', 'parentds': '/home/yoh/datalad/openfmri/ds000001', 'action': 'get', 'path': '/home/yoh/datalad/openfmri/ds000001/sub-02/anat', 'logger': <logging.Logger object at 0x7f7c42750f50>, 'type': 'directory', 'raw_input': True}\r\n{'status': 'notneeded', 'action': 'get', 'path': u'/home/yoh/datalad/openfmri/ds000001/sub-01/anat', 'logger': <logging.Logger object at 0x7f7c427502d0>, 'type': 'directory', 'message': ('nothing to get from %s', u'/home/yoh/datalad/openfmri/ds000001/sub-01/anat')}\r\nget(notneeded): ../home/yoh/datalad/openfmri/ds000001/sub-01/anat (directory) [nothing to get from /home/yoh/datalad/openfmri/ds000001/sub-01/anat]\r\n{'status': 'notneeded', 'action': 'get', 'path': u'/home/yoh/datalad/openfmri/ds000001/sub-02/anat', 'logger': <logging.Logger object at 0x7f7c427502d0>, 'type': 'directory', 'message': ('nothing to get from %s', u'/home/yoh/datalad/openfmri/ds000001/sub-02/anat')}\r\nget(notneeded): ../home/yoh/datalad/openfmri/ds000001/sub-02/anat (directory) [nothing to get from /home/yoh/datalad/openfmri/ds000001/sub-02/anat]\r\n```\r\nbut may be we could retain full list of orig_request and deduce the common base? e.g. if any is full path -- go with full paths; otherwise relative, unless the path is not under any of the ones within `orig_request`ed?\r\n\r\njust food for thought (like we do not have enough ;-) )\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/2679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/2679/timeline", "performed_via_github_app": null}