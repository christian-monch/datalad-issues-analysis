{"url": "https://api.github.com/repos/datalad/datalad/issues/4410", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4410/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4410/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4410/events", "html_url": "https://github.com/datalad/datalad/issues/4410", "id": 601763455, "node_id": "MDU6SXNzdWU2MDE3NjM0NTU=", "number": 4410, "title": "ORA remote over HTTP", "user": {"login": "bpoldrack", "id": 10498301, "node_id": "MDQ6VXNlcjEwNDk4MzAx", "avatar_url": "https://avatars.githubusercontent.com/u/10498301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpoldrack", "html_url": "https://github.com/bpoldrack", "followers_url": "https://api.github.com/users/bpoldrack/followers", "following_url": "https://api.github.com/users/bpoldrack/following{/other_user}", "gists_url": "https://api.github.com/users/bpoldrack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpoldrack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpoldrack/subscriptions", "organizations_url": "https://api.github.com/users/bpoldrack/orgs", "repos_url": "https://api.github.com/users/bpoldrack/repos", "events_url": "https://api.github.com/users/bpoldrack/events{/privacy}", "received_events_url": "https://api.github.com/users/bpoldrack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-04-17T07:28:33Z", "updated_at": "2020-06-02T05:33:55Z", "closed_at": "2020-06-02T05:33:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In https://github.com/datalad/datalad/pull/4203/commits/e5cba2b8a797e31e3591006f611c945cc075aba6 I started implementing a feature for `clone`, that would try to reconfigure an ORA remote with the `ria+` URL we cloned from if autoenabling failed for the URL stored with the special remote. For proof-of-concept I started with HTTP to see that and how we would retrieve the required info from the store. (Commit will be amended soon with the real thing ;-) )\r\n\r\nHowever, while I'm doing the actual implementation and proper test for SSH and FILE URLs, HTTP actually is a special case. A special remote is a local thing, while access to an archive at the remote end over HTTP would require something to run at the store's end for extraction and delivery. ORA special remote would only work over HTTP if it is not using an archive. However, just enabling the git remote is an alternative for consumption only as the structure of annex/objects depends on RIA layout\r\nversion. There's currently dirhashmixed and dirhashlower while the repo itself is a bare repo. It can deliver both kinds of annex keys (simultaneously), but it would write dirhashlower regardless of any ria-layout-version.\r\nSo, currently we can't enable anything really, since no HTTP is implemented in ORA remote yet and we risk messing up the layout via pushes by enabling the git remote (given annex can write to it at all, of course). We could of course double-check ria-layout-version the same way we do check config and enable git remote whenever layout indicates that we are using dirhashlower, but that's half a solution only.\r\n\r\nConclusion: We probably need a proper HTTP implementation in ORA remote. Meanwhile we can try to just enable the git remote if autoenable failed and we cloned via HTTP in order to retrieve keys not \"hidden\" in an archive. (How do we double check, that we can't write?) Agree, @mih?\r\nQuestion remains, whether we want some server command to be ran on the store's end for archive access over HTTP.\r\n\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4410/timeline", "performed_via_github_app": null}