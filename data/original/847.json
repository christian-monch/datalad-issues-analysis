{"url": "https://api.github.com/repos/datalad/datalad/issues/847", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/847/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/847/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/847/events", "html_url": "https://github.com/datalad/datalad/pull/847", "id": 177588733, "node_id": "MDExOlB1bGxSZXF1ZXN0ODU2Nzg5NjA=", "number": 847, "title": "RF API: more human friendly commands and --help", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/datalad/datalad/milestones/26", "html_url": "https://github.com/datalad/datalad/milestone/26", "labels_url": "https://api.github.com/repos/datalad/datalad/milestones/26/labels", "id": 1847924, "node_id": "MDk6TWlsZXN0b25lMTg0NzkyNA==", "number": 26, "title": "Release 0.3", "description": "Various fixes and enhancements as result after OHBM quick agreements", "creator": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 49, "state": "closed", "created_at": "2016-06-24T23:58:23Z", "updated_at": "2016-09-23T16:45:11Z", "due_on": null, "closed_at": "2016-09-23T16:45:11Z"}, "comments": 13, "created_at": "2016-09-17T16:25:51Z", "updated_at": "2018-07-14T08:59:52Z", "closed_at": "2016-09-20T04:43:31Z", "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/847", "html_url": "https://github.com/datalad/datalad/pull/847", "diff_url": "https://github.com/datalad/datalad/pull/847.diff", "patch_url": "https://github.com/datalad/datalad/pull/847.patch"}, "body": "commit msgs are descriptive of the changes, but major ones are \n-  RF: search[-_]datasets -> search\n-  RF: aggregate[-_]metadata -> aggregate\n\nI still wonder what could we do about `create-publication-target-sshwebserver` ?  It is way-too-long-too-ugly.  Possible renames\n- `publish-init` Although I am thinking to absorb that within `crawl`, there is atm `crawl-init` so would be \"in line\".  Other targets, besides sshwebserver when comes (github?) could be done through options.  We already need/will have one \"--publish-webface\" or smth like that which changes what we expect from that remote publication target\n- `create-remote` (edit: don't like it now due to collision with git remote) or `create-sibling` - considering from perspective that this command is indeed a `create` but of a \"remote\" kind and which adds a sibling (way to publish)\n- (edit 2) may be just `create-sshwebserver` and eventually add  an option to deploy an entire beast (some basic webserver, e.g. Python ;)) via  e.g. with docker ;) ?  So if someone has a spare box online without webserver, we could make it serve data without them configuring anything\n\nAnother stylistic change I might like to see but didn't check if it would not anyhow reflect in braking man or web pages is to go from e.g.\n\n```\n  - create:  Create a new dataset from scratch\n  - install:  Install a dataset component or entire dataset(s)\n  - add:  Add files/directories to an existing dataset\n```\n\nto\n\n```\n  create                Create a new dataset from scratch\n  install               Install a dataset component or entire dataset(s)\n  add                   Add files/directories to an existing dataset\n```\n\nwhich IMHO looks better and inline with `git --help` output.  But the main obstacle is again that  `create-publication-target-sshwebserver` and tid bit too long `modify-subdataset-urls`\n\nedit 3:  `search`:\n- made it do string search by default (`--regex` to do regular expression **search**)\n- chose **search** over match since imho it is a more common desire and easily could be converted to match by prefixing with '^'\n- allow for multiple \"match\" strings to be specified -- all must match somewhere within dataset fields\n- (edit 4): `--report-matched` to report only those fields which were matched.  Also serves as \"union\" with those \"attributes\" which requested explicitly with `--report` if any.\n- `--report ''` to say that I want not attributes/fields to be reported, just the location\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/847/timeline", "performed_via_github_app": null}