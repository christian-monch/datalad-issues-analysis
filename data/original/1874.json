{"url": "https://api.github.com/repos/datalad/datalad/issues/1874", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/1874/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/1874/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/1874/events", "html_url": "https://github.com/datalad/datalad/issues/1874", "id": 263133863, "node_id": "MDU6SXNzdWUyNjMxMzM4NjM=", "number": 1874, "title": "a simple create is way too slow if invoked within a \"rich\" hierarchy", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 289240596, "node_id": "MDU6TGFiZWwyODkyNDA1OTY=", "url": "https://api.github.com/repos/datalad/datalad/labels/performance", "name": "performance", "color": "f4b2d8", "default": false, "description": "Improve performance of an existing feature"}, {"id": 390153891, "node_id": "MDU6TGFiZWwzOTAxNTM4OTE=", "url": "https://api.github.com/repos/datalad/datalad/labels/UX", "name": "UX", "color": "0052cc", "default": false, "description": "user experience"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-10-05T13:54:08Z", "updated_at": "2019-03-20T15:39:24Z", "closed_at": "2019-03-20T15:39:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### What is the problem?\r\n\r\nwhatever should take a second top, takes a minute (or even two).  Thus for 1000 datasets, I will need to wait about 16-32  hours just to get them created :-(\r\n\r\n#### What steps will reproduce the problem?\r\ntake some good hierarchy of directories/files (in my case a tree inbox/year/date/accession/study with bunch of DICOMs) and create a hierarchy of datasets at each of those levels, using `datalad create -d inbox $PWD/inbox/year/date/accession/study` (or at any level above) command.  I guess for sorting the paths or smth datalad does 'git diff' or 'status' which takes awhile... or may be something else. dunno yet\r\n\r\nHere is a complete script\r\n```bash\r\n#!/bin/bash\r\n\r\nset -eu\r\n\r\n# helper since we blow if there is already a dataset there\r\nfunction createds() {\r\n p=\"$1\"\r\n [ -e \"$p/.datalad\" ] || \\\r\n   datalad create -d inbox --force --no-annex $PWD/$p\r\n}\r\n\r\ndatalad create --force --no-annex inbox;\r\nfor yds in inbox/*; do   # year\r\n  createds $yds;\r\n  for mds in $yds/*; do   # month\r\n      createds $mds;\r\n      for dds in $mds/*; do   # day\r\n         createds $dds;\r\n         for ads in $dds/*; do   # accession\r\n             [ -e \"$ads/.datalad\" ] || datalad create -d inbox --force  $PWD/$ads;\r\n             # finally add data\r\n             datalad add -d $ads -m \"adding all the data\" $PWD/$ads/*;\r\n             # tune up configuration per @mih recommendation\r\n             git -C $ads config --file .datalad/config --replace-all metadata.nativetype dicom\r\n             git -C $ads config --file .datalad/config --replace-all metadata.aggregate-content-datalad-core no\r\n             git -C $ads config --file .datalad/config --replace-all metadata.store-aggregate-content no\r\n             # ATM can't do create with enh-metadata option, so we will do in two stages\r\n             # datalad aggregate-metadata -d $ads\r\n         done;\r\n      done\r\n   done\r\ndone\r\n```\r\n#### What version of DataLad are you using (run `datalad --version`)? On what operating system (consider running `datalad plugin wtf`)?\r\n\r\n0.9.1 atm\r\n\r\nedit 1:\r\nyeap:\r\n```\r\n2017-10-05 13:56:58,437 [DEBUG  ] Committing via direct call of git: ['git', 'commit', '-m', '[DATALAD] new dataset']\r\n2017-10-05 13:56:58,438 [DEBUG  ] Running: ['git', '-c', 'receive.autogc=0', '-c', 'gc.auto=0', 'commit', '-m', '[DATALAD] new dataset', '--', '.datalad/.gitattributes', '.datalad/config']\r\n2017-10-05 13:56:58,482 [DEBUG  ] Running: ['git', '-c', 'receive.autogc=0', '-c', 'gc.auto=0', 'show', '--no-patch', '--format=%H', '--']\r\n2017-10-05 13:56:58,510 [DEBUG  ] Determined class of decorated function: <class 'datalad.distribution.add.Add'>\r\n2017-10-05 13:56:58,511 [DEBUG  ] Running: ['git', '-c', 'receive.autogc=0', '-c', 'gc.auto=0', 'show', '--no-patch', '--format=%H', '--']\r\n2017-10-05 13:56:58,539 [DEBUG  ] Determined class of decorated function: <class 'datalad.interface.annotate_paths.AnnotatePaths'>\r\n2017-10-05 13:56:58,540 [DEBUG  ] Determined class of decorated function: <class 'datalad.interface.diff.Diff'>\r\n2017-10-05 13:56:58,541 [DEBUG  ] Determined class of decorated function: <class 'datalad.interface.annotate_paths.AnnotatePaths'>\r\n2017-10-05 13:56:58,542 [DEBUG  ] Running: ['git', '--work-tree=.', 'diff', '--raw', '-z', '--ignore-submodules=none', '--abbrev=40', 'HEAD', '--']\r\n2017-10-05 13:56:58,615 [DEBUG  ] Running: ['git', '--work-tree=.', 'status', '--porcelain', '-z', '--ignore-submodules=all', '--untracked=all']\r\n..... LONG WAIT....\r\n2017-10-05 13:58:28,628 [DEBUG  ] Determined class of decorated function: <class 'datalad.interface.diff.Diff'>\r\n... some other stuff which takes seconds\r\n```\r\n\r\nand apparently I cannot provide multiple paths to the single `create` call :-/\r\n```\r\n(dev) [yoh@rolando test]$ DATALAD_LOG_TIMESTAMP=yes datalad -l debug create -d inbox --no-annex --force /mnt/DICOM/test/inbox/2016/09/*\r\n2017-10-05 14:00:36,218 [ERROR  ] unknown arguments: ['/mnt/DICOM/test/inbox/2016/09/03', '/mnt/DICOM/test/inbox/2016/09/07', '/mnt/DICOM/test/inbox/2016/09/08', '/mnt/DICOM/test/inbox/2016/09/09', '/mnt/DICOM/test/inbox/2016/09/12', '/mnt/DICOM/test/inbox/2016/09/13', '/mnt/DICOM/test/inbox/2016/09/14', '/mnt/DICOM/test/inbox/2016/09/19', '/mnt/DICOM/test/inbox/2016/09/22', '/mnt/DICOM/test/inbox/2016/09/26']\r\n```\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/1874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/1874/timeline", "performed_via_github_app": null}