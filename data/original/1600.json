{"url": "https://api.github.com/repos/datalad/datalad/issues/1600", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/1600/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/1600/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/1600/events", "html_url": "https://github.com/datalad/datalad/issues/1600", "id": 237746414, "node_id": "MDU6SXNzdWUyMzc3NDY0MTQ=", "number": 1600, "title": "How much would it take to have no (semipermanent) GitPython Repo instances anymore?", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778594, "node_id": "MDU6TGFiZWw2Mzc3ODU5NA==", "url": "https://api.github.com/repos/datalad/datalad/labels/question", "name": "question", "color": "fbca04", "default": true, "description": "Issue asks a question rather than reporting a problem"}, {"id": 526935563, "node_id": "MDU6TGFiZWw1MjY5MzU1NjM=", "url": "https://api.github.com/repos/datalad/datalad/labels/feedback-desired", "name": "feedback-desired", "color": "fbca04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/datalad/datalad/milestones/42", "html_url": "https://github.com/datalad/datalad/milestone/42", "labels_url": "https://api.github.com/repos/datalad/datalad/milestones/42/labels", "id": 2599965, "node_id": "MDk6TWlsZXN0b25lMjU5OTk2NQ==", "number": 42, "title": "Constrain use of GitPython API to Repo classes", "description": "", "creator": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2017-06-23T05:05:29Z", "updated_at": "2018-01-16T22:42:26Z", "due_on": null, "closed_at": "2018-01-16T22:42:26Z"}, "comments": 2, "created_at": "2017-06-22T06:43:35Z", "updated_at": "2017-08-29T08:12:03Z", "closed_at": "2017-08-29T08:12:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "GitPython self-describes as \"leaky\", not suitable for long running processes. Despite that we have repeatedly RF'ed our code to _increase_ the lifetime of GitPython `Repo` instances.\r\n\r\nI would like to assess how much it would take to minimize the usage of these instances. Please contribute your concerns and insights!\r\n\r\n### Interim conclusion:\r\n\r\nIt seems viable to remove *ANY* usage of GitPython API outside outside our own Repo classes.\r\n\r\nMoreover, with lazy loading of GitPython Repo instances in-place, our own repo classes should try hard not to access `self.repo` as much as possible.\r\n\r\n### Usage of GitPython API (please help complete):\r\n\r\n- `crawler` uses GitPython API to manage commits and tags, and all kinds of other things\r\n- `crawler` tests use it for `diff`s\r\n- `remove` to locate submodules (gone with #1604)\r\n- `update` tests to query tags (gone in #1602)\r\n- `save` to ask for the lastest commit shasum (gone with #1605)\r\n- ~~`aggregate` to add a file to git~~  [false positive]\r\n- `Dataset` to get the gitdir path (gone in #1606), and to checkout a commit (rarely used, if ever)\r\n- ~~`get` to update submodules~~ [false positive]\r\n- `publish` to diff against the latest commit, check remote branch existance (gone in #1544)\r\n\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/1600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/1600/timeline", "performed_via_github_app": null}