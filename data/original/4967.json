{"url": "https://api.github.com/repos/datalad/datalad/issues/4967", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4967/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4967/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4967/events", "html_url": "https://github.com/datalad/datalad/issues/4967", "id": 709320621, "node_id": "MDU6SXNzdWU3MDkzMjA2MjE=", "number": 4967, "title": "save: Modifications remain after 'git mv' of annex file", "user": {"login": "kyleam", "id": 1297788, "node_id": "MDQ6VXNlcjEyOTc3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleam", "html_url": "https://github.com/kyleam", "followers_url": "https://api.github.com/users/kyleam/followers", "following_url": "https://api.github.com/users/kyleam/following{/other_user}", "gists_url": "https://api.github.com/users/kyleam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleam/subscriptions", "organizations_url": "https://api.github.com/users/kyleam/orgs", "repos_url": "https://api.github.com/users/kyleam/repos", "events_url": "https://api.github.com/users/kyleam/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2767271225, "node_id": "MDU6TGFiZWwyNzY3MjcxMjI1", "url": "https://api.github.com/repos/datalad/datalad/labels/cmd-save", "name": "cmd-save", "color": "FEF2C0", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-09-25T22:25:13Z", "updated_at": "2021-04-26T16:18:33Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a follow-up to gh-3686.  As @loj reported over there, there's an unresolved aspect of that issue.  If a symbolic link is moved with `git mv` and the depth of the link changes, `save` commits the staged changes as is (i.e., no adjustment in the link path) and then git-annex fixes up the path afterwards, leaving the dataset dirty and requiring a second `save` call.  Here's the failing test case linked to from that issue:\r\n\r\n```diff\r\ndiff --git a/datalad/core/local/tests/test_save.py b/datalad/core/local/tests/test_save.py\r\nindex 08b706b857..7384ab0ee7 100644\r\n--- a/datalad/core/local/tests/test_save.py\r\n+++ b/datalad/core/local/tests/test_save.py\r\n@@ -11,6 +11,7 @@\r\n import os\r\n import os.path as op\r\n \r\n+from datalad.cmd import Runner\r\n from datalad.utils import (\r\n     assure_list,\r\n     Path,\r\n@@ -834,3 +835,17 @@ def test_save_dotfiles():\r\n     for git in [True, False, None]:\r\n         for save_path in [None, \"nodot-subdir\"]:\r\n             yield check_save_dotfiles, git, save_path\r\n+\r\n+\r\n+@with_tree({\"subdir\": {\"foo\": \"foocontent\"}})\r\n+def test_save_git_mv_fixup(path):\r\n+    ds = Dataset(path).create(force=True)\r\n+    ds.save()\r\n+    assert_repo_status(ds.path)\r\n+    ds.repo.call_git([\"mv\", op.join(\"subdir\", \"foo\"), \"foo\"])\r\n+    ds.save()\r\n+    # Was link adjusted properly?  (gh-3686)\r\n+    eq_(Runner(cwd=ds.path).run([\"cat\", \"foo\"])[0],\r\n+        \"foocontent\")\r\n+    # FIXME: But only the deletion was saved.\r\n+    assert_repo_status(ds.path)\r\n```\r\n\r\n<details>\r\n<summary>output</summary>\r\n\r\n```\r\n======================================================================\r\nFAIL: datalad.core.local.tests.test_save.test_save_git_mv_fixup\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/kyle/src/python/venvs/datalad/lib/python3.7/site-packages/nose/case.py\", line 198, in runTest\r\n    self.test(*self.arg)\r\n  File \"/home/kyle/src/python/datalad/datalad/tests/utils.py\", line 554, in _wrap_with_tree\r\n    return t(*(arg + (d,)), **kw)\r\n  File \"/home/kyle/src/python/datalad/datalad/core/local/tests/test_save.py\", line 851, in test_save_git_mv_fixup\r\n    assert_repo_status(ds.path)\r\n  File \"/home/kyle/src/python/datalad/datalad/tests/utils.py\", line 1658, in assert_repo_status\r\n    % (state, state_files, oktobefound))\r\nAssertionError: unexpected content of state \"modified\": [PosixPath('/tmp/datalad_temp_tree_test_save_git_mv_fixupvj1ers51/foo')] != []\r\n```\r\n\r\n</details>\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4967/timeline", "performed_via_github_app": null}