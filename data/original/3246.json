{"url": "https://api.github.com/repos/datalad/datalad/issues/3246", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/3246/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/3246/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/3246/events", "html_url": "https://github.com/datalad/datalad/issues/3246", "id": 422568688, "node_id": "MDU6SXNzdWU0MjI1Njg2ODg=", "number": 3246, "title": "Enable `save()` to pass down options to low-level functions", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-28T10:49:49Z", "updated_at": "2020-01-10T07:26:26Z", "closed_at": "2020-01-10T07:26:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We need at least `--jobs`, but others could be useful too (backend?)\r\n\r\n`Repo.save()` already exposes `**kwargs` and filters which args get passed on to which function call, hence there is very little to modify in low-level code. It mostly needs a clean approach in `rev-status` that makes things more flexible, without blowing up the API.\r\n\r\nFor `--jobs` I am wondering if that shouldn't be a core datalad option. We already have `--pbs-runner` at the top-level. \r\n\r\nIn the low-level API we offer `jobs` options for: `add`, `get`, `add_urls`, `drop`\r\n\r\nIn the high-level API it is: `add`, `get`, `install`, `publish`\r\n\r\nThis is already inconsistent, and maybe a general `--jobs` could make it more simple to implement better support for parallelization.\r\n\r\nOne minimalistic approach would be to have a global `--jobs` just set a property in a shim class singleton that client code ask for `get_njobs()`. For now it would return a number, but later we could RF this into full manager of worker processes.\r\n\r\n@yarikoptic What do you think? Shall I go for a top-level `--jobs`, or stay with the current scheme and have a custom solution for each command?", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/3246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/3246/timeline", "performed_via_github_app": null}