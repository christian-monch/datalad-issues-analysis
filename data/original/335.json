{"url": "https://api.github.com/repos/datalad/datalad/issues/335", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/335/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/335/events", "html_url": "https://github.com/datalad/datalad/issues/335", "id": 126606931, "node_id": "MDU6SXNzdWUxMjY2MDY5MzE=", "number": 335, "title": "Publish to github with specialremote for data access", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 227904225, "node_id": "MDU6TGFiZWwyMjc5MDQyMjU=", "url": "https://api.github.com/repos/datalad/datalad/labels/documentation", "name": "documentation", "color": "cfd3d7", "default": true, "description": "Changes only affect the documentation"}, {"id": 440544386, "node_id": "MDU6TGFiZWw0NDA1NDQzODY=", "url": "https://api.github.com/repos/datalad/datalad/labels/fix-implemented", "name": "fix-implemented", "color": "0e8a16", "default": false, "description": "A fix is available, but has not been merged or released, yet."}], "state": "closed", "locked": false, "assignee": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/datalad/datalad/milestones/22", "html_url": "https://github.com/datalad/datalad/milestone/22", "labels_url": "https://api.github.com/repos/datalad/datalad/milestones/22/labels", "id": 1482873, "node_id": "MDk6TWlsZXN0b25lMTQ4Mjg3Mw==", "number": 22, "title": "Publication (tracking)", "description": "This milestone is being abused by Michael for his education. It collects issues regarding the publication of collections and handles.", "creator": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 18, "state": "closed", "created_at": "2016-01-04T17:02:49Z", "updated_at": "2017-02-10T13:06:38Z", "due_on": null, "closed_at": "2017-02-10T13:06:38Z"}, "comments": 9, "created_at": "2016-01-14T08:49:12Z", "updated_at": "2017-02-09T12:24:59Z", "closed_at": "2017-02-09T12:24:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here is the protocol of setting up a fairly convenient state to aid public data consumption. This protocol assumes that you only push to a server that shall host the data, and do not access the local machine from the server (as this will often not be possible).\n\nStart with regular local annex repo.\n\n```\ngit init\ngit annex init \"thebeginning\"\ngit annex add .\ngit commit\n```\n\nOn the remote server create new Git repo. We use a non-bare repo. Using a bare repo is possible and makes some of the steps below unnecessary. However, having a work tree on the server allows for additional use cases (browsing, etc.)\n\n```\n# --shared all is likely what you want, but double-check before running\ngit init --shared=all\n# with modern Git the next is unnecessary and can be replaced with the line afterwards\n#git checkout -b ignore\ngit config receive.denyCurrentBranch updateInstead\nmv .git/hooks/post-update.sample .git/hooks/post-update\ngit update-server-info\n```\n\nOn the local machine add the new remote. Do it twice, once for push access via SSH, and once for anonymous pull access via HTTP. And push the content.\n\n```\ngit remote add httpdata HTTPURL/.git\ngit remote add sshdata SSHURL\ngit push sshdata git-annex\ngit push sshdata master\n```\n\nNow go back to the remote, and init the annex.\n\n```\n# with the modern Git setup the following is not required\n#git checkout master\ngit annex init \"public data\"\n```\n\nNow the remote repo can be enabled as a special remote on the client-side. Once done, sync the state with the remote.\n\n```\ngit annex initremote datasrc type=git location=HTTPURL/.git autoenable=true\n# at this point the http remote is no longer needed\ngit remote remove httpdata\ngit fetch sshdata\ngit annex merge\n```\n\nNow the whole thing can be pushed to github. Create a repo on github, and add it as a remote to the local repo. Then push\n\n```\ngit push github master\ngit push github git-annex\n```\n\nAt this point, anybody can clone from github and get a local annex repo with an automatically enabled special remote.\n\n```\ngit clone https://github.com/SOMETHING mine\ngit annex init\n```\n\nAt this point the `datasrc` did not receive any files yet, hence none can be annex-get.  The necessary workflow is as follows. In the original repo do:\n\n```\ngit annex copy SOMEFILE --to sshdata\ngit push github git-annex\n```\n\nThis is sufficient to make a file available and the availability known. In the anonymously cloned repo now do:\n\n```\ngit pull\ngit annex get SOMEFILE\n```\n\nand it will be downloaded via HTTP from `datasrc`.\n\nThe above is verified and works. The rest is anticipation and extrapolation:\n\nFurther workflow for maintaining `sshdata`:\n\n```\ngit annex sync sshdata\n```\n\nFurther workflow for publishing to github\n\n```\ngit push github git-annex\ngit push github master\n```\n\nIn a collaborative scenario where the gihub repo can be modified from elsewhere, git annex sync would be a better fit.\n\nFurther workflow for any anonymous clone:\n\n```\ngit pull\n```\n\nThe latter cannot use annex sync, because it would want to push to github without sufficient permissions.\n", "closed_by": {"login": "bpoldrack", "id": 10498301, "node_id": "MDQ6VXNlcjEwNDk4MzAx", "avatar_url": "https://avatars.githubusercontent.com/u/10498301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpoldrack", "html_url": "https://github.com/bpoldrack", "followers_url": "https://api.github.com/users/bpoldrack/followers", "following_url": "https://api.github.com/users/bpoldrack/following{/other_user}", "gists_url": "https://api.github.com/users/bpoldrack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpoldrack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpoldrack/subscriptions", "organizations_url": "https://api.github.com/users/bpoldrack/orgs", "repos_url": "https://api.github.com/users/bpoldrack/repos", "events_url": "https://api.github.com/users/bpoldrack/events{/privacy}", "received_events_url": "https://api.github.com/users/bpoldrack/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/335/timeline", "performed_via_github_app": null}