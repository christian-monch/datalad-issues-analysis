{"url": "https://api.github.com/repos/datalad/datalad/issues/2436", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/2436/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/2436/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/2436/events", "html_url": "https://github.com/datalad/datalad/issues/2436", "id": 316595890, "node_id": "MDU6SXNzdWUzMTY1OTU4OTA=", "number": 2436, "title": "GitPython cannot find Windows Git in PATH", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 188141023, "node_id": "MDU6TGFiZWwxODgxNDEwMjM=", "url": "https://api.github.com/repos/datalad/datalad/labels/platform-windows", "name": "platform-windows", "color": "0052cc", "default": false, "description": "Issue concerned with Windows"}, {"id": 440544386, "node_id": "MDU6TGFiZWw0NDA1NDQzODY=", "url": "https://api.github.com/repos/datalad/datalad/labels/fix-implemented", "name": "fix-implemented", "color": "0e8a16", "default": false, "description": "A fix is available, but has not been merged or released, yet."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-22T17:10:12Z", "updated_at": "2018-04-25T16:29:50Z", "closed_at": "2018-04-25T16:29:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Excerpt from https://ci.appveyor.com/project/mih/datalad/build/1.0.13\r\n\r\nBoth `git` and `git annex` invocation work immediately before the call to `datalad wtf`, but GitPython complains that there is no Git in the PATH. This issue could be related to #1566, but here we have no bash that could take the blame....\r\n\r\n```\r\ncd __testhome__\r\n[00:02:28] git version\r\n[00:02:28] git version 2.16.2.windows.1\r\n[00:02:28] git annex version\r\n[00:02:28] git-annex version: 6.20180409-gfb0780266\r\n[00:02:28] build flags: Assistant Webapp Pairing S3(multipartupload)(storageclasses) WebDAV ConcurrentOutput TorrentParser Feeds Testsuite\r\n[00:02:28] dependency versions: aws-0.17.1 bloomfilter-2.0.1.0 cryptonite-0.23 DAV-1.3.1 feed-0.3.12.0 ghc-8.0.2 http-client-0.5.7.1 persistent-sqlite-2.6.2 torrent-10000.1.1 uuid-1.3.13 yesod-1.4.5\r\n[00:02:28] key/value backends: SHA256E SHA256 SHA512E SHA512 SHA224E SHA224 SHA384E SHA384 SHA3_256E SHA3_256 SHA3_512E SHA3_512 SHA3_224E SHA3_224 SHA3_384E SHA3_384 SKEIN256E SKEIN256 SKEIN512E SKEIN512 BLAKE2B256E BLAKE2B256 BLAKE2B512E BLAKE2B512 BLAKE2B160E BLAKE2B160 BLAKE2B224E BLAKE2B224 BLAKE2B384E BLAKE2B384 BLAKE2S256E BLAKE2S256 BLAKE2S160E BLAKE2S160 BLAKE2S224E BLAKE2S224 BLAKE2SP256E BLAKE2SP256 BLAKE2SP224E BLAKE2SP224 SHA1E SHA1 MD5E MD5 WORM URL\r\n[00:02:28] remote types: git gcrypt p2p S3 bup directory rsync web bittorrent webdav adb tahoe glacier ddar hook external\r\n[00:02:28] local repository version: unknown\r\n[00:02:28] supported repository versions: 3 5 6\r\n[00:02:28] upgrade supported from repository versions: 2 3 4 5\r\n[00:02:28] operating system: mingw32 i386\r\n[00:02:28] datalad wtf\r\n[00:02:30] Traceback (most recent call last):\r\n[00:02:30]   File \"C:\\Miniconda35\\envs\\test-environment\\Scripts\\datalad-script.py\", line 11, in <module>\r\n[00:02:30]     load_entry_point('datalad', 'console_scripts', 'datalad')()\r\n[00:02:30]   File \"c:\\projects\\datalad\\datalad\\cmdline\\main.py\", line 326, in main\r\n[00:02:30]     parser = setup_parser(args or sys.argv)\r\n[00:02:30]   File \"c:\\projects\\datalad\\datalad\\cmdline\\main.py\", line 79, in setup_parser\r\n[00:02:30]     from ..interface.base import dedent_docstring, get_interface_groups, \\\r\n[00:02:30]   File \"c:\\projects\\datalad\\datalad\\interface\\base.py\", line 27, in <module>\r\n[00:02:30]     from datalad.interface.common_opts import eval_params\r\n[00:02:30]   File \"c:\\projects\\datalad\\datalad\\interface\\common_opts.py\", line 15, in <module>\r\n[00:02:30]     from datalad.interface.results import known_result_xfms\r\n[00:02:30]   File \"c:\\projects\\datalad\\datalad\\interface\\results.py\", line 27, in <module>\r\n[00:02:30]     from datalad.distribution.dataset import Dataset\r\n[00:02:30]   File \"c:\\projects\\datalad\\datalad\\distribution\\dataset.py\", line 30, in <module>\r\n[00:02:30]     from datalad.support.annexrepo import AnnexRepo\r\n[00:02:30]   File \"c:\\projects\\datalad\\datalad\\support\\annexrepo.py\", line 43, in <module>\r\n[00:02:30]     from git import InvalidGitRepositoryError\r\n[00:02:30]   File \"C:\\Miniconda35\\envs\\test-environment\\lib\\site-packages\\git\\__init__.py\", line 82, in <module>\r\n[00:02:30]     refresh()\r\n[00:02:30]   File \"C:\\Miniconda35\\envs\\test-environment\\lib\\site-packages\\git\\__init__.py\", line 73, in refresh\r\n[00:02:30]     if not Git.refresh(path=path):\r\n[00:02:30]   File \"C:\\Miniconda35\\envs\\test-environment\\lib\\site-packages\\git\\cmd.py\", line 292, in refresh\r\n[00:02:30]     raise ImportError(err)\r\n[00:02:30] ImportError: Bad git executable.\r\n[00:02:30] The git executable must be specified in one of the following ways:\r\n[00:02:30]     - be included in your $PATH\r\n[00:02:30]     - be set via $GIT_PYTHON_GIT_EXECUTABLE\r\n[00:02:30]     - explicitly set via git.refresh()\r\n[00:02:30] \r\n[00:02:30] All git commands will error until this is rectified.\r\n[00:02:30] \r\n[00:02:30] This initial warning can be silenced or aggravated in the future by setting the\r\n[00:02:30] $GIT_PYTHON_REFRESH environment variable. Use one of the following values:\r\n[00:02:30]     - quiet|q|silence|s|none|n|0: for no warning or exception\r\n[00:02:30]     - warn|w|warning|1: for a printed warning\r\n[00:02:30]     - error|e|raise|r|2: for a raised exception\r\n[00:02:30] \r\n[00:02:30] Example:\r\n[00:02:30]     export GIT_PYTHON_REFRESH=quiet\r\n[00:02:30] \r\n[00:02:30] Command exited with code 1\r\n```", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/2436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/2436/timeline", "performed_via_github_app": null}