{"url": "https://api.github.com/repos/datalad/datalad/issues/1350", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/1350/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/1350/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/1350/events", "html_url": "https://github.com/datalad/datalad/pull/1350", "id": 210888504, "node_id": "MDExOlB1bGxSZXF1ZXN0MTA4NDAyOTU4", "number": 1350, "title": "Return value revolution", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 526935563, "node_id": "MDU6TGFiZWw1MjY5MzU1NjM=", "url": "https://api.github.com/repos/datalad/datalad/labels/feedback-desired", "name": "feedback-desired", "color": "fbca04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-02-28T19:58:49Z", "updated_at": "2017-03-21T18:43:22Z", "closed_at": "2017-03-19T19:43:21Z", "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/1350", "html_url": "https://github.com/datalad/datalad/pull/1350", "diff_url": "https://github.com/datalad/datalad/pull/1350.diff", "patch_url": "https://github.com/datalad/datalad/pull/1350.patch"}, "body": "Basic idea: commands `yield` report dictionaries. And wrapper act upon this information in whatever desired way.\r\n\r\nSits on top of #1348. Present tail of the procedure is in #1409 \r\n\r\nChange summary:\r\n\r\n- [x] global command line switch to select output format\r\n- [x] line-based 'json' output format (like git-annex)\r\n- [x] 'simple' output format for \"STATUS: PATH\" lines, where PATH is relative whenever a reference dataset is available\r\n- [x] supported commands return generators that are actually executed in main.py\r\n- [x] centralized error detection that guarantees an exception if any error occured\r\n- [x] BF: `update` did not fail on unavailable paths as argument\r\n- [x] customize exception generation to be less dumb\r\n- [x] centralize logging by shipping messages in the status dicts (actually: message template, variable, logger instance or func)\r\n- [x] reimplement forced 'cmdline' rendering of API_ function with the new facilities to get rid of these shadow functions\r\n- [x] convert actual return value nature on a by-call basis. Standard should be json dict sequence/generator.\r\n- [x] provide `return_value` helper module with:\r\n      - function to give a default dict\r\n      - function to convert git-annex json record into our own structure\r\n- [x] implement new constraint to test whether a dict has a key with a certain value \r\n- [x] implement general command line options to filter results by `type` and by `status` (using new constraint above)\r\n- [x] implement new general kwarg for all commands to accept a filter function for results (to fit a passed (compound) constraint) (name: `filter_results`)\r\n- [x] implement new general kwarg for all commands to switch return values from generator to sequence (spec: `return_type`, `{'generator', 'list', 'item-or-list'}`)\r\n- [x] implement flexible transformation of return values from result dicts to other types (like Datasets)\r\n- [x] implement general `--on-failure` switch (fixes #819)\r\n- [x] new test helpers: `assert_status`, `assert_message`, `assert_in_results`, `assert_not_in_results`, `assert_result_count`, `assert_fields_equal`\r\n- [x] #1380 support for result summaries\r\n \r\nCommands converted:\r\n\r\n- [x] create (possibly TODO: report addition to a superdataset)\r\n- [ ] install -- RF'ed to remove redundant code; split core functionality into a `clone` command (fully converted); high-level condition checking in `install` itself still needs conversion\r\n- [x] get\r\n- [ ] add (complicated due to the old-school recursion in helper functions, needs substantial RF)\r\n- [ ] publish (seems straightforward)\r\n- [x] uninstall (needs additional RF, PY2 version of Ben's class detector cannot deal with more than one class per module)\r\n- [x] drop (needs additional RF, PY2 version of Ben's class detector cannot deal with more than one class per module)\r\n- [x] remove (needs additional RF, PY2 version of Ben's class detector cannot deal with more than one class per module)\r\n- [x] update (cmd itself is done, but needs to pass though results from `get`)\r\n- [ ] create-sibling (seems doable, unclear if RF needed to pass `add-sibling` results through)\r\n- [ ] create-sibling-github (doable)\r\n- [ ] add-sibling (maybe better wait till after general RF; convoluted already)\r\n- [ ] rewrite-urls (does not seem to be used anywhere -> low priority; but otherwise simple)\r\n- [x] unlock\r\n- [x] save\r\n- [ ] export (seems doable, but also rather useless)\r\n- search (will not be attempted, waiting for metadata RF)\r\n- aggregate-metadata (will not be attempted, waiting for metadata RF)\r\n- test (not needed)\r\n- crawl, crawl-init (no idea if it is feasible to attempt this, better be done by Yarik, also crawl-init about to be gone #1155)\r\n- ls (will not be attempted, does not fit paradigm as of now, but could become relevant after RF)\r\n- [x] clean (looks straightforward)\r\n- [ ] add-archive-content\r\n- [ ] download-url (seems straightforward, custom stop_on_failure needs to be RF'ed away)\r\n- [ ] create-test-dataset\r\n- sshrun (out of scope, needs to stay as it is)\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/1350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/1350/timeline", "performed_via_github_app": null}