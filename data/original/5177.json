{"url": "https://api.github.com/repos/datalad/datalad/issues/5177", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5177/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5177/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5177/events", "html_url": "https://github.com/datalad/datalad/issues/5177", "id": 747431068, "node_id": "MDU6SXNzdWU3NDc0MzEwNjg=", "number": 5177, "title": "*Repo._save_add() code duplication", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-11-20T11:54:38Z", "updated_at": "2020-11-20T12:18:05Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Both methods have this code\r\n\r\n```py\r\nyield get_status_dict(\r\n   action=r.get('command', 'add'),\r\n   refds=self.pathobj,\r\n   type='file',\r\n   path=(self.pathobj / ut.PurePosixPath(r['file']))\r\n   if 'file' in r else None,\r\n   status='ok' if r.get('success', None) else 'error',\r\n   key=r.get('key', None),\r\n   message='\\n'.join(r['error-messages'])\r\n   if 'error-messages' in r else None,\r\n   logger=lgr)\r\n```\r\n\r\nThere is only `GitRepo.save_()` as effective caller, which in turn is only used by the `save()` command.\r\n\r\nGiven #5048 and the pending/slow discussion on the nature of the Repo API vs the high-level API, we could consider to RF this and move the entire result formatting for compatibility with the high-level API out of the Repo methods.\r\n\r\nOther cases of result preparation code can be found.  The question is, if this changes to get closer to the underlying tools wrapped, you should the result records look like? Only relative paths?\r\n\r\nFor now the best action seems to be to use `annexjson2result()` instead.\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5177/timeline", "performed_via_github_app": null}