{"url": "https://api.github.com/repos/datalad/datalad/issues/3292", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/3292/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/3292/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/3292/events", "html_url": "https://github.com/datalad/datalad/issues/3292", "id": 429469073, "node_id": "MDU6SXNzdWU0Mjk0NjkwNzM=", "number": 3292, "title": "Should get_content_info() report on all paths when paths=[]?", "user": {"login": "kyleam", "id": 1297788, "node_id": "MDQ6VXNlcjEyOTc3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleam", "html_url": "https://github.com/kyleam", "followers_url": "https://api.github.com/users/kyleam/followers", "following_url": "https://api.github.com/users/kyleam/following{/other_user}", "gists_url": "https://api.github.com/users/kyleam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleam/subscriptions", "organizations_url": "https://api.github.com/users/kyleam/orgs", "repos_url": "https://api.github.com/users/kyleam/repos", "events_url": "https://api.github.com/users/kyleam/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-04T20:29:18Z", "updated_at": "2021-05-25T07:01:47Z", "closed_at": "2021-05-25T07:01:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[ This is a dedicated issue for something that came up in gh-3288. ]\r\n\r\nWhen GitRepo.get_content_info() receives a false-y value for path, it reports on all paths:\r\n\r\n```python\r\nimport tempfile\r\nfrom datalad.support.gitrepo import GitRepo\r\n\r\ngr = GitRepo(tempfile.mkdtemp())\r\ngr.pathobj.joinpath(\"foo\").write_text(\"\")\r\nprint(gr.get_content_info(paths=[]))\r\nprint(gr.get_content_info(paths=None))\r\n# OrderedDict([(PosixPath('/tmp/tmpjc9ayqpp/foo'), {'gitshasum': None, 'type': 'file'})])\r\n# OrderedDict([(PosixPath('/tmp/tmpjc9ayqpp/foo'), {'gitshasum': None, 'type': 'file'})])\r\n```\r\n\r\nIn the context of gh-3288, the source of the bug had something along the lines of\r\n\r\n```\r\n.get_content_info(paths=[<some filtering list comprehension>], ...)\r\n```\r\n\r\nWhen the comprehension returns a non-empty list, get_content_info() restricted its results as intended.  When the comprehension came up empty, all paths were returned, leading to incorrect behavior.  So, with the current behavior, callers need to guard against the empty list case if they really want to restrict results to the paths in the list.\r\n\r\nShould we adjust get_content_info() to treat only `path=None` (rather than any false value) as the special \"report on all paths\" case?\r\n\r\nIn gh-3288, both @yarikoptic and I were in favor of the change.  The only motivation I could come up with for the current behavior was\r\n\r\n> My guess is that the command line is the main place where it could be convenient because the path argument comes in as a list when the user doesn't explicitly provide paths. But I haven't traced the code to see if anything actually relies on that.", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/3292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/3292/timeline", "performed_via_github_app": null}