{"url": "https://api.github.com/repos/datalad/datalad/issues/4090", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4090/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4090/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4090/events", "html_url": "https://github.com/datalad/datalad/issues/4090", "id": 555330980, "node_id": "MDU6SXNzdWU1NTUzMzA5ODA=", "number": 4090, "title": "migrate to pytest or nose2", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2020-01-27T02:36:07Z", "updated_at": "2020-03-03T05:01:09Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "#### What is the problem?\r\n\r\nAccording to @effigies issue https://github.com/nipy/nibabel/issues/864 we might soon experience fallout of nose.  So, sooner or later we will need to migrate from it to pytest (or some other helper/runner if there is any, but unlikely pure unittest2 or alike). \r\n\r\n# pytest\r\n\r\nI guess it will be our choice.  I personally have love/hate relationship with pytest.  IIRC major obstacles will be\r\n- parametric tests.   pytest dropped support for nose-style generator-based parametric tests awhile back, so we will need to convert any parametric test like that to be implemented \"pytest-way\"\r\n- decorators-vs-fixtures. Some of our decorators pass positional args into the tests. I would need to recall details on what we encountered in reproman, but I believe pytest would consider positional args as fixtures. So we would need to convert them to keyword args to avoid that or in some places convert our decorators into proper pytest fixtures.\r\n- as we start using more of straight `assert` calls, instead of our (nose) helpers like `assert_smth`, we might need to provide pytest with ways to to be totally \"pytest-ified\" (later) we might like to provide our custom assertion failure handlers: https://docs.pytest.org/en/latest/assert.html#defining-your-own-explanation-for-failed-assertions  ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4090/timeline", "performed_via_github_app": null}