{"url": "https://api.github.com/repos/datalad/datalad/issues/5951", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5951/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5951/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5951/events", "html_url": "https://github.com/datalad/datalad/issues/5951", "id": 986884898, "node_id": "MDU6SXNzdWU5ODY4ODQ4OTg=", "number": 5951, "title": "Hint the user if pushed dataset(s) has subdatasets which would not be reachable", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390153891, "node_id": "MDU6TGFiZWwzOTAxNTM4OTE=", "url": "https://api.github.com/repos/datalad/datalad/labels/UX", "name": "UX", "color": "0052cc", "default": false, "description": "user experience"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-02T15:33:29Z", "updated_at": "2021-09-02T17:07:50Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Follow up to fresh #5950 , orthogonal so filed separately.\r\n\r\nUsers might be pushing/publishing super-datasets to remotes (such as public github etc), while `.gitmodules` might contain relative (or absolute) local paths are `url`s, thus possibly making those published datasets not able to `get|install` subdatasets if cloned.\r\n\r\nI think the only way is to provide \"sensing\" for any newly (in that push diff for the branch) added/modified submodule url is \"reachable\" by going through all candidates (as if we were to `clone` it) and seeing if any of them is \"legit\".\r\n- such sensing to be done only if remote is not local (its URL not a path)\r\n- ATM we rely on actual `git clone` to \"tell\" us if clone from URL succeeds.  So we cannot just easily \"sense\" arbitrary URL, and would need some kind of `git clone` invocation (could be lightweighted with `--depth 1 --no-tags` etc, but AFAIK there is no \"dry run\" mode) \r\n- Although sounds like an overkill, I think it might be useful for UX, but obviously needs to be optional (IMHO opt-out, not opt-in).\r\n- Since `push` (unlike deprecated `publish`) does not create subdatasets on remote, there is no chicken/egg issue here while publishing hierarchies, and sensing could be done right whenever corresponding dataset is pushed\r\n\r\nedit 1: alternative could be to do at `create-sibling*` and `siblings add` time, and  then it would be for a specific type of a sibling to possibly hint  (we just would provide a centralized helpers/logic to handle them). Since in some cases though siblings might be created \"manually\" and just `add`ed (but also people could just `git remote add`) - it would not be as \"thorough\" as doing originally though of sensing. ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5951/timeline", "performed_via_github_app": null}