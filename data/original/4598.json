{"url": "https://api.github.com/repos/datalad/datalad/issues/4598", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4598/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4598/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4598/events", "html_url": "https://github.com/datalad/datalad/issues/4598", "id": 627756914, "node_id": "MDU6SXNzdWU2Mjc3NTY5MTQ=", "number": 4598, "title": "embrace pathlib fully in .core?", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778592, "node_id": "MDU6TGFiZWw2Mzc3ODU5Mg==", "url": "https://api.github.com/repos/datalad/datalad/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": ""}, {"id": 545918236, "node_id": "MDU6TGFiZWw1NDU5MTgyMzY=", "url": "https://api.github.com/repos/datalad/datalad/labels/DX", "name": "DX", "color": "0052cc", "default": false, "description": "developer experience"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-30T15:26:54Z", "updated_at": "2020-05-30T15:26:54Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently I see 19 uses in code\r\n```\r\n$> git grep -e '\\<op[j.]' -- datalad/core | grep -v test_ | nl\r\n     1\tdatalad/core/distributed/clone.py:                config_content = op.read_file(cfg_path)\r\n     2\tdatalad/core/distributed/clone.py:                config_content = op.read_file(cfg_path)\r\n     3\tdatalad/core/local/create.py:            op.normpath(op.join(str(path), os.pardir)))\r\n     4\tdatalad/core/local/create.py:        if op.isdir(tbds.path) and listdir(tbds.path) != [] and not force:\r\n     5\tdatalad/core/local/create.py:                [op.join('.datalad', i[0]) for i in attrs_cfg])\r\n     6\tdatalad/core/local/create.py:                        op.join('.datalad', p), {}).get(k, None) == v:\r\n     7\tdatalad/core/local/create.py:                    attrfile=op.join('.datalad', '.gitattributes'))\r\n     8\tdatalad/core/local/diff.py:                orig_path.endswith(op.sep) or resolved_path == ds.pathobj\r\n     9\tdatalad/core/local/run.py:from os.path import join as opj\r\n    10\tdatalad/core/local/run.py:        rel_pwd = op.curdir\r\n    11\tdatalad/core/local/run.py:        return [d for d in map(op.dirname, gpaths.expand(refresh=True))\r\n    12\tdatalad/core/local/run.py:        if op.exists(path) or op.lexists(path):\r\n    13\tdatalad/core/local/run.py:        pwd = normpath(opj(dataset.path, rel_pwd))\r\n    14\tdatalad/core/local/run.py:        record_dir = ds.config.get('datalad.run.record-directory', default=op.join('.datalad', 'runinfo'))\r\n    15\tdatalad/core/local/run.py:        record_path = op.join(ds_path, record_dir, record_id)\r\n    16\tdatalad/core/local/run.py:        if not op.lexists(record_path):\r\n    17\tdatalad/core/local/run.py:            msg_path = relpath(opj(str(repo.dot_git), \"COMMIT_EDITMSG\"))\r\n    18\tdatalad/core/local/status.py:                            not (orig_path.endswith(op.sep) or\r\n    19\tdatalad/core/local/status.py:                        super_root = get_dataset_root(op.dirname(root))\r\n```\r\nand about 159 in tests.  I think it would be beneficial to get `core` fully pathlib driven.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4598/timeline", "performed_via_github_app": null}