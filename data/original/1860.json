{"url": "https://api.github.com/repos/datalad/datalad/issues/1860", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/1860/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/1860/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/1860/events", "html_url": "https://github.com/datalad/datalad/issues/1860", "id": 261229421, "node_id": "MDU6SXNzdWUyNjEyMjk0MjE=", "number": 1860, "title": "How to unlock in V6?", "user": {"login": "bpoldrack", "id": 10498301, "node_id": "MDQ6VXNlcjEwNDk4MzAx", "avatar_url": "https://avatars.githubusercontent.com/u/10498301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpoldrack", "html_url": "https://github.com/bpoldrack", "followers_url": "https://api.github.com/users/bpoldrack/followers", "following_url": "https://api.github.com/users/bpoldrack/following{/other_user}", "gists_url": "https://api.github.com/users/bpoldrack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpoldrack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpoldrack/subscriptions", "organizations_url": "https://api.github.com/users/bpoldrack/orgs", "repos_url": "https://api.github.com/users/bpoldrack/repos", "events_url": "https://api.github.com/users/bpoldrack/events{/privacy}", "received_events_url": "https://api.github.com/users/bpoldrack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-28T08:11:03Z", "updated_at": "2019-09-20T11:00:04Z", "closed_at": "2019-09-20T11:00:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In PR #1845 I'm currently overhauling `datalad unlock` in order to have proper result reporting in direct and indirect mode. Looking into V6 raises a question though:\r\n\r\nIn V5 you can't unlock a file the content of which isn't present. Therefore it's now yielding an \"impossible\". This makes sense, since editing unknown content is obviously troublesome.\r\nIn V6 however you can unlock a file without having its content and overwrite it with new content. If you unlock such a file in V6, what you get is a \"pointer file\" (one line containing the link target). As mentioned, replacing it entirely works just fine. But: In opposition to an unlocked file in V5 the content you'd see if you open that file isn't the actual content of that file. In addition those pointer files seem to be interpreted by reading that first line no matter what comes next, leading to the effect that you lose your possible modification of that file if you appended something to the unlocked file. In that case committing will silently throw away those changes.\r\n\r\nNow: What do we do if `unlock` is called on files without content in V6? We probably should indeed unlock, since that is what annex does. But should we file a warning or at least an info message? What about python API: Is there a reasonable way to indicate, that we can't rely on the assumption that the content of an unlocked file actually is its content? Or do we just need to make sure we simply don't assume this anywhere?\r\n\r\nAny thoughts on that matter, @mih , @yarikoptic ?\r\n\r\nEdit:\r\nBTW in V6 we also need to throw away the assumption that committing re-locks the file!\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/1860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/1860/timeline", "performed_via_github_app": null}