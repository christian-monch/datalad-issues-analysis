{"url": "https://api.github.com/repos/datalad/datalad/issues/4383", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4383/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4383/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4383/events", "html_url": "https://github.com/datalad/datalad/pull/4383", "id": 596100972, "node_id": "MDExOlB1bGxSZXF1ZXN0NDAwNDU5NTY5", "number": 4383, "title": "BF+RF: remove code duplication of (ensure_|anything2)bool and make more consistent with git", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1453907298, "node_id": "MDU6TGFiZWwxNDUzOTA3Mjk4", "url": "https://api.github.com/repos/datalad/datalad/labels/stale-PR-closed-without-merge", "name": "stale-PR-closed-without-merge", "color": "ffffff", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-07T19:31:32Z", "updated_at": "2020-10-25T05:49:45Z", "closed_at": "2020-10-25T05:49:32Z", "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/4383", "html_url": "https://github.com/datalad/datalad/pull/4383", "diff_url": "https://github.com/datalad/datalad/pull/4383.diff", "patch_url": "https://github.com/datalad/datalad/pull/4383.patch"}, "body": "This is \"inspired\" by [a recent annex issue discussion](https://git-annex.branchable.com/bugs/does_not_understand___34__yes__34___as_boolean_true_value_for_autoenable/?updated#comment-df028d791f7220741cf9837462618043), where I detected that we were not inline with git-config handling of strings containing negative integers as `True`.  Then I realized that we have two implementations intended for the same thing, which we use pretty much similarly in different points. `ensure_bool` is used in\r\n```python\r\n$> git grep sure_bool | grep -v test_\r\ndatalad/core/distributed/clone.py:    assure_bool,\r\ndatalad/core/distributed/clone.py:            sr_autoenable = assure_bool(sr_autoenable)\r\n```\r\nand by `datalad-crawler` for handling crawler configuration settings.  `anything2bool` - by datalad.config.  So - both are used for the same purpose but (still) behave slightly different\r\n\r\n<details>\r\n<summary>comparison of ensure_bool (anything2bool was ok besides negative int) with git-config before this PR</summary> \r\n\r\n```shell\r\n$> for v in true yes 1 y 200 '' ' ' false no n 0 -1 0.00 0.1 string 1.0; do echo -n \"$v=\"; git -c \"sec.blah=$v\" config --bool sec.blah; python -c \"from datalad.utils import ensure_bool; print(ensure_bool('$v'))\" ; echo; done\r\ntrue=true\r\nTrue\r\n\r\nyes=true\r\nTrue\r\n\r\n1=true\r\nTrue\r\n\r\ny=fatal: bad numeric config value 'y' for 'sec.blah': invalid unit\r\nTrue\r\n\r\n200=true\r\nTrue\r\n\r\n=false\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 781, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %r as a boolean\" % s)\r\nValueError: Do not know how to treat '' as a boolean\r\n\r\n =fatal: bad numeric config value ' ' for 'sec.blah': invalid unit\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 781, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %r as a boolean\" % s)\r\nValueError: Do not know how to treat ' ' as a boolean\r\n\r\nfalse=false\r\nFalse\r\n\r\nno=false\r\nFalse\r\n\r\nn=fatal: bad numeric config value 'n' for 'sec.blah': invalid unit\r\nFalse\r\n\r\n0=false\r\nFalse\r\n\r\n-1=true\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 781, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %r as a boolean\" % s)\r\nValueError: Do not know how to treat '-1' as a boolean\r\n\r\n0.00=fatal: bad numeric config value '0.00' for 'sec.blah': invalid unit\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 781, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %r as a boolean\" % s)\r\nValueError: Do not know how to treat '0.00' as a boolean\r\n\r\n0.1=fatal: bad numeric config value '0.1' for 'sec.blah': invalid unit\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 781, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %r as a boolean\" % s)\r\nValueError: Do not know how to treat '0.1' as a boolean\r\n\r\nstring=fatal: bad numeric config value 'string' for 'sec.blah': invalid unit\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 781, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %r as a boolean\" % s)\r\nValueError: Do not know how to treat 'string' as a boolean\r\n\r\n1.0=fatal: bad numeric config value '1.0' for 'sec.blah': invalid unit\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 781, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %r as a boolean\" % s)\r\nValueError: Do not know how to treat '1.0' as a boolean\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>comparison of anythin2bool with git-config on typical values after this PR</summary> \r\n\r\n```shell\r\n$> for v in true yes 1 y 200 '' ' ' false no n 0 -1 0.00 0.1 string 1.0; do echo -n \"$v=\"; git -c \"sec.blah=$v\" config --bool sec.blah; python -c \"from datalad.config import anything2bool; print(anything2bool('$v'))\" ; echo; done           \r\ntrue=true\r\nTrue\r\n\r\nyes=true\r\nTrue\r\n\r\n1=true\r\nTrue\r\n\r\ny=fatal: bad numeric config value 'y' for 'sec.blah': invalid unit\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/config.py\", line 125, in anything2bool\r\n    return ensure_bool(val, short=False)\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 792, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %s as a boolean\" % repr(s))\r\nValueError: Do not know how to treat 'y' as a boolean\r\n\r\n200=true\r\nTrue\r\n\r\n=false\r\nFalse\r\n\r\n =fatal: bad numeric config value ' ' for 'sec.blah': invalid unit\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/config.py\", line 125, in anything2bool\r\n    return ensure_bool(val, short=False)\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 792, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %s as a boolean\" % repr(s))\r\nValueError: Do not know how to treat ' ' as a boolean\r\n\r\nfalse=false\r\nFalse\r\n\r\nno=false\r\nFalse\r\n\r\nn=fatal: bad numeric config value 'n' for 'sec.blah': invalid unit\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/config.py\", line 125, in anything2bool\r\n    return ensure_bool(val, short=False)\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 792, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %s as a boolean\" % repr(s))\r\nValueError: Do not know how to treat 'n' as a boolean\r\n\r\n0=false\r\nFalse\r\n\r\n-1=true\r\nTrue\r\n\r\n0.00=fatal: bad numeric config value '0.00' for 'sec.blah': invalid unit\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/config.py\", line 125, in anything2bool\r\n    return ensure_bool(val, short=False)\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 792, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %s as a boolean\" % repr(s))\r\nValueError: Do not know how to treat '0.00' as a boolean\r\n\r\n0.1=fatal: bad numeric config value '0.1' for 'sec.blah': invalid unit\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/config.py\", line 125, in anything2bool\r\n    return ensure_bool(val, short=False)\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 792, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %s as a boolean\" % repr(s))\r\nValueError: Do not know how to treat '0.1' as a boolean\r\n\r\nstring=fatal: bad numeric config value 'string' for 'sec.blah': invalid unit\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/config.py\", line 125, in anything2bool\r\n    return ensure_bool(val, short=False)\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 792, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %s as a boolean\" % repr(s))\r\nValueError: Do not know how to treat 'string' as a boolean\r\n\r\n1.0=fatal: bad numeric config value '1.0' for 'sec.blah': invalid unit\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/config.py\", line 125, in anything2bool\r\n    return ensure_bool(val, short=False)\r\n  File \"/home/yoh/proj/datalad/datalad-maint/datalad/utils.py\", line 792, in ensure_bool\r\n    raise ValueError(\"Do not know how to treat %s as a boolean\" % repr(s))\r\nValueError: Do not know how to treat '1.0' as a boolean\r\n\r\n```\r\n</details>\r\n\r\n- [ ] decide if I should just make `short=False` or remove altogether, thus requiring users to say full \"yes\".  If I run into any stored configuration in the crawler, it should be an easy fix.  So I am leaning towards that\r\n\r\nFWIW, this PR is nohow helps #2628 but would change exception type from TypeError to ValueError.", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4383/timeline", "performed_via_github_app": null}