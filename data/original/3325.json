{"url": "https://api.github.com/repos/datalad/datalad/issues/3325", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/3325/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/3325/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/3325/events", "html_url": "https://github.com/datalad/datalad/pull/3325", "id": 432787622, "node_id": "MDExOlB1bGxSZXF1ZXN0MjcwMTg3NTA0", "number": 3325, "title": "BF: status: Provide special treatment of \".\" path", "user": {"login": "kyleam", "id": 1297788, "node_id": "MDQ6VXNlcjEyOTc3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleam", "html_url": "https://github.com/kyleam", "followers_url": "https://api.github.com/users/kyleam/followers", "following_url": "https://api.github.com/users/kyleam/following{/other_user}", "gists_url": "https://api.github.com/users/kyleam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleam/subscriptions", "organizations_url": "https://api.github.com/users/kyleam/orgs", "repos_url": "https://api.github.com/users/kyleam/repos", "events_url": "https://api.github.com/users/kyleam/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-04-13T00:26:18Z", "updated_at": "2019-04-13T19:00:23Z", "closed_at": "2019-04-13T18:57:18Z", "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/3325", "html_url": "https://github.com/datalad/datalad/pull/3325", "diff_url": "https://github.com/datalad/datalad/pull/3325.diff", "patch_url": "https://github.com/datalad/datalad/pull/3325.patch"}, "body": "```\r\nWhen status receives \".\" as the path, rev_resolve_path() resolves the\r\npath to the dataset (either to the one explicitly provided as an\r\nargument or to the one inferred from the current directory).  So,\r\nusing \".\" means we get the reference dataset as the path.\r\n\r\nIf a call includes an explicitly specified dataset _and_ \".\" as a path\r\nargument, whether the call succeeds or fails depends on whether the\r\nspecified dataset is a subdataset.  When the reference dataset isn't a\r\nsubdataset, status queries within the dataset.  When it is a\r\nsubdataset, the call fails with a message saying the subdataset is not\r\nunderneath itself:\r\n\r\n  $ datalad status -d. .\r\n  [ERROR ] dataset containing given paths is not underneath the\r\n  reference dataset [...]\r\n\r\nEven though the desired behavior could be achieved by dropping \".\" as\r\na path argument, let's make using \".\" as the path argument work\r\nbecause\r\n\r\n  * it is consistent with the non-subdataset case, and it won't be\r\n    obvious to a caller why it works in one case but not the other\r\n\r\n  * based on the use of \".\" as a path argument in other places in\r\n    datalad, it's be reasonable for a caller to expect, say,\r\n    subds.status(\".\") to work\r\n\r\nAs shown by the added run test, this fixes a regression where calling\r\n'datalad run' failed from within a subdataset, which was introduced by\r\neba3ccfd6 (BF: run: Save results with rev-save, 2019-03-18) because\r\nthe call to rev_save() retained the path=\".\" that is necessary for the\r\nadd() call.\r\n```\r\n\r\n---\r\n\r\nI decided to make this change in `status()` because I couldn't think of a reason why the current behavior is preferable, but we could of course put the kludge in `run()` with something like\r\n\r\n```diff\r\ndiff --git a/datalad/interface/run.py b/datalad/interface/run.py\r\nindex d23247c00..473e734a8 100644\r\n--- a/datalad/interface/run.py\r\n+++ b/datalad/interface/run.py\r\n@@ -394,7 +394,7 @@ def _execute_command(command, pwd, expected_exit=None):\r\n def _save_outputs(ds, to_save, msg):\r\n     \"\"\"Helper to save results after command execution is completed\"\"\"\r\n     return Save.__call__(\r\n-        to_save,\r\n+        None if to_save == \".\" else to_save,\r\n         dataset=ds.path,\r\n         recursive=True,\r\n         message=msg,\r\n```\r\n\r\n(We could even drop the custom `saver` parameter in `run.run_command()`, and move to an inline `ds.rev_save()` call because `saver` only existed for -revolution's rev-run.)\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/3325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/3325/timeline", "performed_via_github_app": null}