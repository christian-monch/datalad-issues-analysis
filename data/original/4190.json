{"url": "https://api.github.com/repos/datalad/datalad/issues/4190", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4190/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4190/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4190/events", "html_url": "https://github.com/datalad/datalad/issues/4190", "id": 570359166, "node_id": "MDU6SXNzdWU1NzAzNTkxNjY=", "number": 4190, "title": "Investigate PermissionError: [WinError 32] (pending annex --batched process)", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-25T07:11:45Z", "updated_at": "2020-02-25T09:16:50Z", "closed_at": "2020-02-25T09:16:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This has been showing up in the windows GitHub CI tests for a while\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\hostedtoolcache\\windows\\Python\\3.7.6\\x64\\lib\\site-packages\\nose\\case.py\", line 198, in runTest\r\n    self.test(*self.arg)\r\n  File \"C:\\hostedtoolcache\\windows\\Python\\3.7.6\\x64\\lib\\site-packages\\datalad\\tests\\utils.py\", line 589, in newfunc\r\n    rmtemp(d)\r\n  File \"C:\\hostedtoolcache\\windows\\Python\\3.7.6\\x64\\lib\\site-packages\\datalad\\utils.py\", line 521, in rmtemp\r\n    rmtree(f, *args, **kwargs)\r\n  File \"C:\\hostedtoolcache\\windows\\Python\\3.7.6\\x64\\lib\\site-packages\\datalad\\utils.py\", line 434, in rmtree\r\n    _rmtree(path, *args, **kwargs)\r\n  File \"C:\\hostedtoolcache\\windows\\Python\\3.7.6\\x64\\lib\\site-packages\\datalad\\utils.py\", line 1882, in wrapped\r\n    return f(*args, **kwargs)\r\n  File \"C:\\hostedtoolcache\\windows\\Python\\3.7.6\\x64\\lib\\site-packages\\datalad\\utils.py\", line 1922, in _rmtree\r\n    return shutil.rmtree(*args, **kwargs)\r\n  File \"C:\\hostedtoolcache\\windows\\Python\\3.7.6\\x64\\lib\\shutil.py\", line 516, in rmtree\r\n    return _rmtree_unsafe(path, onerror)\r\n  File \"C:\\hostedtoolcache\\windows\\Python\\3.7.6\\x64\\lib\\shutil.py\", line 404, in _rmtree_unsafe\r\n    onerror(os.rmdir, path, sys.exc_info())\r\n  File \"C:\\hostedtoolcache\\windows\\Python\\3.7.6\\x64\\lib\\shutil.py\", line 402, in _rmtree_unsafe\r\n    os.rmdir(path)\r\nPermissionError: [WinError 32] The process cannot access the file because it is being used by another process: 'C:\\\\Users\\\\RUNNER~1\\\\AppData\\\\Local\\\\Temp\\\\datalad_temp_tree_2d6un7dp'\r\n```\r\n\r\nI can reproduce it on a real windows box, and on my linux laptop -- not every time, but frequently. There is a `git-annex` process that is holding on to a directory with a dataset.\r\n\r\n```\r\n% DATALAD_ASSERT_NO_OPEN_FILES=pdb TMPDIR=\"/var/tmp/sym link\" python -m nose -v -s datalad.support.tests.test_annexrepo:test_find_batch_equivalence\r\ndatalad.support.tests.test_annexrepo.test_find_batch_equivalence ... > /home/mih/hacking/datalad/git/datalad/utils.py(501)assert_no_open_files()\r\n(Pdb) files\r\n{'/tmp/datalad_temp_tree_test_find_batch_equivalencexdy08zhp': psutil.Process(pid=613123, name='git-annex', started='07:35:52')}\r\n(Pdb) print(list(files.values())[0].cmdline())\r\n['/usr/bin/git-annex', 'find', '--json', '--json-error-messages', '--batch']\r\n```\r\n\r\nThe batched annex processed seems to originate from a call to `AnnexRepo.find(batch=True)`, which is called twice in this test.\r\n\r\nIf I disable these two calls, which serve no other purpose than testing their output, the issue is gone:\r\n\r\n```diff\r\n--- a/datalad/support/tests/test_annexrepo.py\r\n+++ b/datalad/support/tests/test_annexrepo.py\r\n@@ -517,11 +517,11 @@ def test_find_batch_equivalence(path):\r\n     query = [\"not-there\"] + files\r\n     expected = {f: f for f in files}\r\n     expected.update({\"not-there\": \"\"})\r\n-    eq_(expected, ar.find(query, batch=True))\r\n+    #eq_(expected, ar.find(query, batch=True))\r\n     eq_(expected, ar.find(query))\r\n     # If we give a subdirectory, we split that output.\r\n     eq_(set(ar.find([\"subdir\"])[\"subdir\"]), {\"subdir/d\", \"subdir/e\"})\r\n-    eq_(ar.find([\"subdir\"]), ar.find([\"subdir\"], batch=True))\r\n+    #eq_(ar.find([\"subdir\"]), ar.find([\"subdir\"], batch=True))\r\n \r\n \r\n @with_tempfile(mkdir=True)\r\n```\r\n\r\nThe Q is now, whose responsibility is the cleanup of such processes? `AnnexRepo.__del__` has the closing of batch processes in place. However, the destructor seems to be called to late, sometimes:\r\n\r\n```\r\n% DATALAD_ASSERT_NO_OPEN_FILES=pdb TMPDIR=\"/var/tmp/sym link\" python -m nose -v -s datalad.support.tests.test_annexrepo:test_find_batch_equivalence\r\ndatalad.support.tests.test_annexrepo.test_find_batch_equivalence ...\r\n> /home/mih/hacking/datalad/git/datalad/utils.py(501)assert_no_open_files()\r\n-> pass\r\n(Pdb) c\r\nok\r\n__DEL__\r\n```\r\n\r\nNotice how the assert fails before the first line in `__del__` prints the message.", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4190/timeline", "performed_via_github_app": null}