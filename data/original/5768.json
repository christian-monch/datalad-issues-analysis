{"url": "https://api.github.com/repos/datalad/datalad/issues/5768", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5768/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5768/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5768/events", "html_url": "https://github.com/datalad/datalad/issues/5768", "id": 932316959, "node_id": "MDU6SXNzdWU5MzIzMTY5NTk=", "number": 5768, "title": "datalad work in script but do not work in jupyter notebook due underlying asyncio event loop", "user": {"login": "samuelgarcia", "id": 815627, "node_id": "MDQ6VXNlcjgxNTYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/815627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelgarcia", "html_url": "https://github.com/samuelgarcia", "followers_url": "https://api.github.com/users/samuelgarcia/followers", "following_url": "https://api.github.com/users/samuelgarcia/following{/other_user}", "gists_url": "https://api.github.com/users/samuelgarcia/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelgarcia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelgarcia/subscriptions", "organizations_url": "https://api.github.com/users/samuelgarcia/orgs", "repos_url": "https://api.github.com/users/samuelgarcia/repos", "events_url": "https://api.github.com/users/samuelgarcia/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelgarcia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-06-29T07:37:12Z", "updated_at": "2021-06-29T09:52:46Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi datalad team,\r\n\r\nSorry if this is already fixed somewhere I could not find it.\r\n\r\nA simple `import datalad` in jupyter trigger an error but not in a script.\r\nThe underlying asyncio loop seams to be the problem.\r\n\r\n\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-1-2677c3f1f0d7> in <module>\r\n----> 1 import datalad\r\n\r\n~/.virtualenvs/py38/lib/python3.8/site-packages/datalad/__init__.py in <module>\r\n     46 \r\n     47 from .config import ConfigManager\r\n---> 48 cfg = ConfigManager()\r\n     49 \r\n     50 from .log import lgr\r\n\r\n~/.virtualenvs/py38/lib/python3.8/site-packages/datalad/config.py in __init__(self, dataset, overrides, source)\r\n    344             self._runner = GitWitlessRunner(**run_kwargs)\r\n    345 \r\n--> 346         self.reload(force=True)\r\n    347 \r\n    348         if not ConfigManager._checked_git_identity:\r\n\r\n~/.virtualenvs/py38/lib/python3.8/site-packages/datalad/config.py in reload(self, force)\r\n    397         while to_run:\r\n    398             store_id, runargs = to_run.popitem()\r\n--> 399             self._stores[store_id] = self._reload(runargs)\r\n    400 \r\n    401         # always update the merged representation, even if we did not reload\r\n\r\n~/.virtualenvs/py38/lib/python3.8/site-packages/datalad/config.py in _reload(self, run_args)\r\n    425     def _reload(self, run_args):\r\n    426         # query git-config\r\n--> 427         stdout, stderr = self._run(\r\n    428             run_args,\r\n    429             protocol=StdOutErrCapture,\r\n\r\n~/.virtualenvs/py38/lib/python3.8/site-packages/datalad/config.py in _run(self, args, where, reload, **kwargs)\r\n    787         if '-l' in args:\r\n    788             # we are just reading, no need to reload, no need to lock\r\n--> 789             out = self._runner.run(self._config_cmd + args, **kwargs)\r\n    790             return out['stdout'], out['stderr']\r\n    791 \r\n\r\n~/.virtualenvs/py38/lib/python3.8/site-packages/datalad/cmd.py in run(self, cmd, protocol, stdin, cwd, env, **kwargs)\r\n    377             lgr.debug('Async run:\\n cwd=%s\\n cmd=%s', cwd, cmd)\r\n    378             # include the subprocess manager in the asyncio event loop\r\n--> 379             results = event_loop.run_until_complete(\r\n    380                 run_async_cmd(\r\n    381                     event_loop,\r\n\r\n/usr/lib/python3.8/asyncio/base_events.py in run_until_complete(self, future)\r\n    590         \"\"\"\r\n    591         self._check_closed()\r\n--> 592         self._check_running()\r\n    593 \r\n    594         new_task = not futures.isfuture(future)\r\n\r\n/usr/lib/python3.8/asyncio/base_events.py in _check_running(self)\r\n    552             raise RuntimeError('This event loop is already running')\r\n    553         if events._get_running_loop() is not None:\r\n--> 554             raise RuntimeError(\r\n    555                 'Cannot run the event loop while another loop is running')\r\n    556 \r\n\r\nRuntimeError: Cannot run the event loop while another loop is running\r\n```", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5768/timeline", "performed_via_github_app": null}