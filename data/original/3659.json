{"url": "https://api.github.com/repos/datalad/datalad/issues/3659", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/3659/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/3659/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/3659/events", "html_url": "https://github.com/datalad/datalad/pull/3659", "id": 491789535, "node_id": "MDExOlB1bGxSZXF1ZXN0MzE2MDg5MDk4", "number": 3659, "title": "Attempt to establish benchmarks across a set of different types of \"heavy\" datasets", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1453907298, "node_id": "MDU6TGFiZWwxNDUzOTA3Mjk4", "url": "https://api.github.com/repos/datalad/datalad/labels/stale-PR-closed-without-merge", "name": "stale-PR-closed-without-merge", "color": "ffffff", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-10T16:54:37Z", "updated_at": "2019-09-24T20:12:37Z", "closed_at": "2019-09-24T20:12:37Z", "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/3659", "html_url": "https://github.com/datalad/datalad/pull/3659", "diff_url": "https://github.com/datalad/datalad/pull/3659.diff", "patch_url": "https://github.com/datalad/datalad/pull/3659.patch"}, "body": "A semi-failed attempt to introduce benchmarking of common operations across a collection of datasets.\r\nWith this approach I thought to take advantage of multiple inheritance and mix in different datasets and states while then mix-ing in also corresponding benchmarks.\r\n\r\nIt is ugly and probably not the way to go because\r\n\r\n- `setup_cache` taking care about creating a tarball with a dataset instance is identified by asv simply by location in the code -- leads to fragile need to replicate `setup_cache` in each subclass: https://github.com/airspeed-velocity/asv/issues/880\r\n- we cannot make asv  to ignore a to be mixed in (like `TypicalOps` here) class defining benchmarks, so it would try running them and fail\r\n\r\nSince then I discovered that there are ways to \"parametrize\" benchmarks: https://asv.readthedocs.io/en/stable/writing_benchmarks.html#parameterized-benchmarks .  So similarly to what we do in `@with_testrepos` I guess we just need to establish some \"lazy\" benchmark datasets generator, and then tests classes would be parametrized with the name of the dataset to use, and ask `self.datasets[name]` to get it in the `setup`, possibly eliminating the need for `setup_cache`.  We would just need to track them and remove `atexit`.  Really close to what we already do in `@with_testrepos`\r\n\r\nSo submitting this PR as a draft and not intended to be merged", "closed_by": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/3659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/3659/timeline", "performed_via_github_app": null}