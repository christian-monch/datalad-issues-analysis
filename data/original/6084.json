{"url": "https://api.github.com/repos/datalad/datalad/issues/6084", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/6084/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/6084/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/6084/events", "html_url": "https://github.com/datalad/datalad/issues/6084", "id": 1027393004, "node_id": "I_kwDOANZqws49PMXs", "number": 6084, "title": "Status/Diff performance boost (for large-N datasets)", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 289240596, "node_id": "MDU6TGFiZWwyODkyNDA1OTY=", "url": "https://api.github.com/repos/datalad/datalad/labels/performance", "name": "performance", "color": "f4b2d8", "default": false, "description": "Improve performance of an existing feature"}, {"id": 390153891, "node_id": "MDU6TGFiZWwzOTAxNTM4OTE=", "url": "https://api.github.com/repos/datalad/datalad/labels/UX", "name": "UX", "color": "0052cc", "default": false, "description": "user experience"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-10-15T12:27:40Z", "updated_at": "2021-10-15T13:18:49Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I am hunting for performance. With #6034 in mind, the default mode of `status(report_filetype='eval')` (leading to `eval_file_type=True` in `GitRepo.diffstatus()` and friends is a HUGE slowdown in large dataset (many files). For a `status()` is will resolve ANY symlink (i.e. all annexed files) on the file system (on call each), and for a `diff()` it will use a batched `git cat-file`.\r\n\r\nThis is doing the correct thing by default (well #6034), but has to be turned off for any performance critical functinality.\r\n\r\nDemo setup\r\n\r\n```\r\n% datalad create fast\r\n% cd fast\r\n% echo ingit > ingit\r\n% datalad save ingit --to-git\r\n% echo inannex > inannex\r\n% datalad save inannex\r\n% ln -s ingit somelink\r\n% datalad save\r\n```\r\n\r\n```\r\nIn [3]: ds.repo.diffstatus('HEAD', None, eval_file_type=False, paths=['inannex', 'ingit', 'somelink'])\r\nOut[3]: \r\nOrderedDict([(PosixPath('/tmp/fast/inannex'),\r\n              {'type': 'symlink',\r\n               'gitshasum': '33cc8c5f11621d19c212ebf4ff8b45b3fc4169a9',\r\n               'prev_gitshasum': '33cc8c5f11621d19c212ebf4ff8b45b3fc4169a9',\r\n               'state': 'clean'}),\r\n             (PosixPath('/tmp/fast/ingit'),\r\n              {'type': 'file',\r\n               'gitshasum': '4ede24e7074a994ff45e1bf0e04eb7fda254052f',\r\n               'bytesize': 6,\r\n               'prev_gitshasum': '4ede24e7074a994ff45e1bf0e04eb7fda254052f',\r\n               'state': 'clean'}),\r\n             (PosixPath('/tmp/fast/somelink'),\r\n              {'type': 'symlink',\r\n               'gitshasum': 'ec28779b36c1a65a3fb8ca1b1cad32c8b1f0fd45',\r\n               'prev_gitshasum': 'ec28779b36c1a65a3fb8ca1b1cad32c8b1f0fd45',\r\n               'state': 'clean'})])\r\nIn [4]: ds.repo.diffstatus('HEAD', None, eval_file_type=True, paths=['inannex', 'ingit', 'somelink'])\r\nOut[4]: \r\nOrderedDict([(PosixPath('/tmp/fast/inannex'),\r\n              {'type': 'file',\r\n               'gitshasum': '33cc8c5f11621d19c212ebf4ff8b45b3fc4169a9',\r\n               'bytesize': 108,\r\n               'prev_gitshasum': '33cc8c5f11621d19c212ebf4ff8b45b3fc4169a9',\r\n               'state': 'clean'}),\r\n             (PosixPath('/tmp/fast/ingit'),\r\n              {'type': 'file',\r\n               'gitshasum': '4ede24e7074a994ff45e1bf0e04eb7fda254052f',\r\n               'bytesize': 6,\r\n               'prev_gitshasum': '4ede24e7074a994ff45e1bf0e04eb7fda254052f',\r\n               'state': 'clean'}),\r\n             (PosixPath('/tmp/fast/somelink'),\r\n              {'type': 'symlink',\r\n               'gitshasum': 'ec28779b36c1a65a3fb8ca1b1cad32c8b1f0fd45',\r\n               'prev_gitshasum': 'ec28779b36c1a65a3fb8ca1b1cad32c8b1f0fd45',\r\n               'state': 'clean'})])\r\n```\r\n\r\nObservations...\r\n\r\nThis is ALL implemented in `GitRepo`. But in a `GitRepo`, any symlink can only ever be a symlink. So at least for GitRepos `eval_file_type=False` should be the default!\r\n\r\n`AnnexRepo` has `get_content_annexinfo()`, which amends `GitRepo.get_content_info()`. Here is the output, when called with `eval_file_type=False`.\r\n\r\n```\r\nIn [5]: ds.repo.get_content_annexinfo(ref='HEAD', eval_file_type=False, paths=['inannex', 'ingit', 'somelink'])\r\nOut[5]: \r\nOrderedDict([(PosixPath('/tmp/fast/inannex'),\r\n              {'gitshasum': '33cc8c5f11621d19c212ebf4ff8b45b3fc4169a9',\r\n               'type': 'symlink',\r\n               'bytesize': 8,\r\n               'mtime': 'unknown',\r\n               'keyname': 'cbbf0b3ea8bdc75af54954b62fa3479c',\r\n               'backend': 'MD5E',\r\n               'key': 'MD5E-s8--cbbf0b3ea8bdc75af54954b62fa3479c',\r\n               'humansize': '8 B',\r\n               'error-messages': [],\r\n               'hashdirmixed': 'mv/f8/',\r\n               'hashdirlower': 'f08/350/'}),\r\n             (PosixPath('/tmp/fast/ingit'),\r\n              {'gitshasum': '4ede24e7074a994ff45e1bf0e04eb7fda254052f',\r\n               'type': 'file',\r\n               'bytesize': 6}),\r\n             (PosixPath('/tmp/fast/somelink'),\r\n              {'gitshasum': 'ec28779b36c1a65a3fb8ca1b1cad32c8b1f0fd45',\r\n               'type': 'symlink'})])\r\n```\r\n\r\nPlenty if information to distinguish symlinks and annexed files!\r\n\r\n\r\nI propose:\r\n\r\n1. Rip out filetype evaluation from `GitRepo` entirely.\r\n2. Adjust `status()` and `diff()` to run the functionality removed from `GitRepo` exclusive for `AnnexRepo` when requested.\r\n3. When `--annex` is requested anyways, do not perform this extra evaluation on the filesystem, but inspect the git-annex report to adjust the type info before reporting.\r\n\r\nFor large N-files datasets this should provide a massive speed-up!\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/6084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/6084/timeline", "performed_via_github_app": null}