{"url": "https://api.github.com/repos/datalad/datalad/issues/4585", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4585/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4585/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4585/events", "html_url": "https://github.com/datalad/datalad/issues/4585", "id": 626583603, "node_id": "MDU6SXNzdWU2MjY1ODM2MDM=", "number": 4585, "title": "Let's establish a roadmap toward 1.0 release?", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-28T15:01:06Z", "updated_at": "2021-05-04T13:31:57Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I think it would benefit us if we kick out 1.0 some time soon (e.g. this year) with some guarantees (so truly follow semver upon those components API changes) of API.  As touched upon in recent call, I would say we could restrict guarantees to the `datalad.core` and `datalad.coreapi` (and only at the top level, i.e. not propagating to `.repo` etc which comes from `.support`). \r\nATM I think `coreapi` is too \"bloated\"\r\n\r\n```shell\r\n$> python -c 'import datalad.coreapi as dlcore; print([x for x in dir(dlcore) if not x.startswith(\"_\")])'\r\n['Dataset', 'add_archive_content', 'aggregate_metadata', 'annotate_paths', 'clean', 'clone', 'copy_file', 'create', 'create_sibling', 'create_sibling_github', 'create_sibling_gitlab', 'create_sibling_ria', 'create_test_dataset', 'diff', 'download_url', 'drop', 'export_archive_ora', 'extract_metadata', 'get', 'install', 'ls', 'metadata', 'publish', 'push', 'remove', 'rerun', 'run', 'run_procedure', 'save', 'search', 'siblings', 'sshrun', 'status', 'subdatasets', 'test', 'uninstall', 'unlock', 'update', 'wtf']\r\n```\r\ne.g. all the metadata related functionality (`search` included) should not be there since I expect it to be sooner than later superseded by metalad (approach). Also depending on `publish/push` interactions etc, `publish` might be gone (or not), and similarly `install`.  I still think that we by 1.0 might come up with a solution to avoid breeding `_flavor` commands (i.e. of `create_sibling` family). \r\n\r\nBy then we also establish a policy that no new modules/interfaces are added directly  to `.core` while being developed, unless they are released in some MAJOR.MINOR release for a while; and only then moved to `.core` to announce that indeed their API stabilized.\r\n\r\nTo orchestrate 1.0 release effort I have initiated [\"Release 1.0\"](https://github.com/datalad/datalad/projects/11#card-39084742) project, while milestones could still be used to annotate any specific issue/pr for \"minor\" `0.` releases they would actually appear in.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4585/timeline", "performed_via_github_app": null}