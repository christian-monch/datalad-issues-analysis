{"url": "https://api.github.com/repos/datalad/datalad/issues/2947", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/2947/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/2947/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/2947/events", "html_url": "https://github.com/datalad/datalad/issues/2947", "id": 373642295, "node_id": "MDU6SXNzdWUzNzM2NDIyOTU=", "number": 2947, "title": "make `run-procedure` carry a `datalad run` record?", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-24T19:30:48Z", "updated_at": "2018-10-25T13:11:09Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "#### What is the problem?\r\nMight be relevant to the fresh #2945 discussion. Unlike `containers-run` and `run` itself, `run-procedure` is not `datalad run` aware, ie ATM it doesn't establish git commit record allowing for rerun that procedure or to discover what options it might have taken.  So I think it would make sense to make `run-procedure` to become just yet another frontend for `datalad run`, which would prepare actual invocation of the procedure for `run`.\r\nHaving said that, and given that `containers-run` is pretty much also an execution of a configured command (which happens to use containers), may be there is a way/need to unify them somehow?", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/2947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/2947/timeline", "performed_via_github_app": null}