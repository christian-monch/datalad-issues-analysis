{"url": "https://api.github.com/repos/datalad/datalad/issues/4771", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4771/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4771/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4771/events", "html_url": "https://github.com/datalad/datalad/issues/4771", "id": 666436520, "node_id": "MDU6SXNzdWU2NjY0MzY1MjA=", "number": 4771, "title": "Idea (failing so far): Do all necessary for ssh tests hostnames setup within our `setup_package` fixture", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-27T16:48:16Z", "updated_at": "2020-07-27T16:48:16Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "continuation from https://github.com/datalad/datalad/pull/4762#issuecomment-664504230\r\n\r\n#### What is the problem?\r\n\r\nTo run ssh tests we need to tune `/etc/hosts` to setup the `datalad-test` hostname... With #4762 it would become required for all ssh tests.  In some cases I will not have such ability even if ssh is installed and I can `ssh localhost`.\r\n\r\nWith this apsect (local boxes and all CIs with /etc/hosts and/or `.ssh/config` tune ups) in mind it hit me: did we ever try to just establish `~/.ssh/config` within our custom `$HOME` we use for testing? \r\n If we didn't and there is no show stopper (although looks like there is - see below), then an ultimate solution, which would avoid any box/CI \"manual\" configuration (of /etc/hosts and ssh) would be:\r\n- add datalad configuration items `datalad.tests.ssh_hosts.datalad_test` and `datalad.tests.ssh_hosts.datalad_test2` which would both default to `localhost:22` \r\n- in https://github.com/datalad/datalad/blob/master/datalad/__init__.py#L128 establish `~/.ssh/config` with `Host` entries for each of those `datalad-test`s (there is some `if` where we reuse GIT_HOME but I think it is purely for debian pkg building where we do not run any ssh tests anyways)\r\n- in those few tests were exact knowledge of the port is desired, it could be parsed out from config (e.g. via SSHRI) if use of `ssh -G` seems like a heavier thing to do.\r\n\r\nThen it should work as is for any local testing (even if we add more named hosts there) and for CI we would need to just provide that CIs custom configuration through the exports of two environment variables without additional helpers. \r\n\r\nBut then I decided to give it a quick try to fail.\r\n\r\n<details>\r\n<summary>Q&D patch for the fixture</summary> \r\n\r\n```shell\r\n$> git diff\r\ndiff --git a/datalad/__init__.py b/datalad/__init__.py\r\nindex 4504aace0..da15dc41d 100644\r\n--- a/datalad/__init__.py\r\n+++ b/datalad/__init__.py\r\n@@ -120,11 +120,19 @@ def setup_package():\r\n             os.environ['HOME'] = new_home\r\n         if not os.path.exists(new_home):\r\n             os.makedirs(new_home)\r\n+            os.makedirs(os.path.join(new_home, '.ssh'))\r\n         with open(os.path.join(new_home, '.gitconfig'), 'w') as f:\r\n             f.write(\"\"\"\\\r\n [user]\r\n        name = DataLad Tester\r\n        email = test@example.com\r\n+\"\"\")\r\n+        with open(os.path.join(new_home, '.ssh', 'config'), 'w') as f:\r\n+                f.write(\"\"\"\\\r\n+Host datalad-test\r\n+    Port 22\r\n+    Hostname localhost\r\n+    StrictHostKeyChecking no\r\n \"\"\")\r\n         _TEMP_PATHS_GENERATED.append(new_home)\r\n ```\r\n</details>\r\n\r\nfailure `#1`: for some reason `ssh` simply ignores `HOME` and still tries to go for `/home/yoh/.ssh/`:\r\n\r\n```ssh\r\n$> SSH_TTY= SSH_AUTH_SOCK= SSH_CLIENT= SSH_CONNECTION= SSH_AGENT_PID= USER=blah HOME=/home/yoh/.tmp/datalad_temp_zj4pfl0z ssh -v -v datalad-test\r\nOpenSSH_8.1p1 Debian-5, OpenSSL 1.1.1g  21 Apr 2020\r\ndebug1: Reading configuration data /home/yoh/.ssh/config\r\ndebug1: /home/yoh/.ssh/config line 337: Applying options for *\r\ndebug1: Reading configuration data /etc/ssh/ssh_config\r\ndebug1: /etc/ssh/ssh_config line 19: Applying options for *\r\ndebug1: Control socket \"/home/yoh/.ssh/controls/yoh@datalad-test:22\" does not exist\r\ndebug2: resolving \"datalad-test\" port 22\r\nssh: Could not resolve hostname datalad-test: Name or service not known\r\n\r\n$> cat /home/yoh/.tmp/datalad_temp_zj4pfl0z/.ssh/config\r\nHost datalad-test\r\n    Port 222\r\n    Hostname localhost\r\n    StrictHostKeyChecking no\r\n```\r\nso it seems that internally `ssh` does not care about `$HOME` at all! (note: `$HOME` is *nix specific for ssh, according to https://github.com/PowerShell/Win32-OpenSSH/issues/1146 on windows there is `%userprofile%` but that one might be readonly, heh heh -- failure `#2`)\r\n\r\nSo may be this idea is no go, unless someone sees some way", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4771/timeline", "performed_via_github_app": null}