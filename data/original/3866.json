{"url": "https://api.github.com/repos/datalad/datalad/issues/3866", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/3866/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/3866/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/3866/events", "html_url": "https://github.com/datalad/datalad/issues/3866", "id": 522081797, "node_id": "MDU6SXNzdWU1MjIwODE3OTc=", "number": 3866, "title": "Convenience command to list recorded run commits", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-13T09:48:10Z", "updated_at": "2019-11-20T18:10:15Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "It can be cumbersome to figure out what to tell `rerun` to rerun. The best approach that I can see is to use tags for relevant commits that need to be re-rerun (frequently). But tags can be a bit viral, so maybe we should have a convenience command that lists run records with the (abbrv) commits shas\r\n\r\nAlso, when we tackle https://github.com/datalad/datalad/issues/3370 such a command would give us an abstraction layer to hide behind, when commit message content markup conventions.\r\n\r\nI think all needed functionality is already in `rerun --report`, we just need to expose it for querying, i.e.\r\n\r\n- allow convenient \"since commit 1\" query\r\n- (a result renderer) that is optimized for commit selection\r\n- (optionally) expose the recorded command for copy&paste, such that we can easily pick a recorded command, tweak its parameters manually and then run the modified command. IOW be able to compose a full `datalad run` command line with inputs, outputs and all.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/3866/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/3866/timeline", "performed_via_github_app": null}