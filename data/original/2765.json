{"url": "https://api.github.com/repos/datalad/datalad/issues/2765", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/2765/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/2765/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/2765/events", "html_url": "https://github.com/datalad/datalad/issues/2765", "id": 349766403, "node_id": "MDU6SXNzdWUzNDk3NjY0MDM=", "number": 2765, "title": "Make a standard mode of data management operation work across all scenarios", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-11T21:54:17Z", "updated_at": "2018-10-28T17:40:35Z", "closed_at": "2018-10-28T17:40:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I want to see the following working, regardless of whether one is running on Linux, Windows, on a USB stick or wherever:\r\n\r\n1. create a dataset (support for an arbitrary number of arbitrarily nested subdatasets)\r\n2. apply a default configuration for annex largefiles (via .gitattributes)\r\n    - default: everything goes into annex\r\n    - dedicated exceptions are explicitly declared (e.g. all of `code/` has largefiles=nothing) upfront\r\n    - support for a finite number of standard/domain-specific scenarios\r\n3. any invocation of `run` on such a dataset leaves a clean dataset behind (assuming it started clean)\r\n4. any manual manipulation of dataset content can be recorded with a single command, that restores the dataset to a clean state (the alternative to (3) for anything that (for whatever reasons) cannot be done through `run` (no user should be bothered with the difference of untracked/staged/typechange/whatever it should just make it clean according to configuration).\r\n\r\nEssentially, this is implementing a \"clean dataset\" paradigm, where users do not have to know about or distinguish between `commit/save` and `add`, but instead split processing into some steps, and everything else is done by datalad.\r\n\r\nI think such a mode of operation should be explained and advertised in the documentation as THE way to do things for anyone who has no preferences (or expert ambitions). Everything beyond this can require a deeper knowledge  about Git and annex, but the above should work flawless and robust without any of that.\r\n\r\nThe commands involved should have a clean (preferably minimal) API that requires minimal reading to understand it in *full*. ANY further tweaking, edge case support or geek-stuff should be implemented elsewhere. The involved commands should be promoted as the (e.g.) \"convenience data management API\". The set would include:\r\n\r\n- the equivalent of minimalistic `create`\r\n- `run`\r\n- a command that saves everything under all circumstances according to a predefined configuration (not runtime options)\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/2765/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/2765/timeline", "performed_via_github_app": null}