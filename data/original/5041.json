{"url": "https://api.github.com/repos/datalad/datalad/issues/5041", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5041/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5041/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5041/events", "html_url": "https://github.com/datalad/datalad/issues/5041", "id": 721920350, "node_id": "MDU6SXNzdWU3MjE5MjAzNTA=", "number": 5041, "title": "ConsumerProducer: backfill/smarter depchecker", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 289240596, "node_id": "MDU6TGFiZWwyODkyNDA1OTY=", "url": "https://api.github.com/repos/datalad/datalad/labels/performance", "name": "performance", "color": "f4b2d8", "default": false, "description": "Improve performance of an existing feature"}, {"id": 379953235, "node_id": "MDU6TGFiZWwzNzk5NTMyMzU=", "url": "https://api.github.com/repos/datalad/datalad/labels/do-in-parallel", "name": "do-in-parallel", "color": "ffda63", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-10-15T02:28:17Z", "updated_at": "2020-10-15T02:28:17Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Implementation in https://github.com/datalad/datalad/pull/5022 relies on producer to provide entries in the desired order (bottom-up or top-down), and uses depchecker only as a \"wait until all previous necessary are done\".  Original code also relies on entries to be sorted, thus often there is an explicit `sorted` used after e.g. `status` call. Ideally, we should remove `sorted` and have producers just \"strive\" to provide entries \"largely\" in desired order, but do allow for some \"out of order\" entries.\r\nThen\r\n- ConsumerProducer should have a \"back-fill\" list of jobs to work on\r\n- not just have `bool`  depchecker on all futures but rather a bool function per \"args\" (so per future)\r\n  - assign to futures detected dependents (to be added to backfill), so we could reconsider jobs in backfill when a future with known dependents (in backfill) complets\r\n  - those in \"backfill\" also should have a list of dependencies (within backfill) so we consider only those without dependencies\r\n    - when we add job to backfill, depchecker would need to traverse those in backfill and possibly add new backfilled entry as as a dependency\r\n    - when we take a job from backfill to execute, we do not remove it from any job in backfill, but transfer the list of dependents into the \"future\"'s item, so when it completes - we do above\r\n\r\nIf I got it right -- this should allow for \"producers\" to remain generators, while we would efficiently feed new jobs from backfill which have no dependencies.  Deadlocks  shouldn't happen if logic is correct, but we can add checks (e.g. if both producer and consumer queues are empty but we still have some in backfill)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5041/timeline", "performed_via_github_app": null}