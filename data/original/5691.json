{"url": "https://api.github.com/repos/datalad/datalad/issues/5691", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5691/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5691/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5691/events", "html_url": "https://github.com/datalad/datalad/pull/5691", "id": 898041511, "node_id": "MDExOlB1bGxSZXF1ZXN0NjQ5OTYyNTQz", "number": 5691, "title": "Introduce datalad.log.exc and disable exception logging by default", "user": {"login": "bpoldrack", "id": 10498301, "node_id": "MDQ6VXNlcjEwNDk4MzAx", "avatar_url": "https://avatars.githubusercontent.com/u/10498301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpoldrack", "html_url": "https://github.com/bpoldrack", "followers_url": "https://api.github.com/users/bpoldrack/followers", "following_url": "https://api.github.com/users/bpoldrack/following{/other_user}", "gists_url": "https://api.github.com/users/bpoldrack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpoldrack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpoldrack/subscriptions", "organizations_url": "https://api.github.com/users/bpoldrack/orgs", "repos_url": "https://api.github.com/users/bpoldrack/repos", "events_url": "https://api.github.com/users/bpoldrack/events{/privacy}", "received_events_url": "https://api.github.com/users/bpoldrack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2021-05-21T13:24:44Z", "updated_at": "2021-06-21T20:40:45Z", "closed_at": "2021-06-21T20:40:39Z", "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/5691", "html_url": "https://github.com/datalad/datalad/pull/5691", "diff_url": "https://github.com/datalad/datalad/pull/5691.diff", "patch_url": "https://github.com/datalad/datalad/pull/5691.patch"}, "body": "This is originally motivated by wanting to close #4478. So, there's a config `datalad.log.exc` now, that controls whether exceptions are \"rendered\" in log messages (and it's off by default).\r\n\r\nHowever, once at it, I took the occasion to somewhat address our exception handling in general. When we catch and report on an exception, we pretty much always would use `exc_str` (or now `CapturedException`), providing an opportunity to let that also do the clean up of stack frame references and thereby somewhat enforcing it. Hence, decided against the proposed approach in the issue to extend the to-be-logged exception and pass it on, but introduced a class that represents the textual information about it (and its traceback) without any stack references. Remember: circular references. Furthermore, since @yarikoptic introduced result reporting on exceptions as well (using `exc_str`, too), there's more to be done with that class - thinking of have a central place to enhance a result record with (possibly several) fields about an exception, so that a renderer can decide what parts to make use of. Also: we can have python's standard output of an exception traceback, too - might be useful for a better \"debug mode\". But all that should be a follow-up. Here I only address the logging directly and turn `exc_str` into a \"dummy\". Last remark: In the issue the idea was to have the config be handled by the log formatter. That makes sense, but isn't that straightforward really. There can be different formatters including stdlib ones, that still should be able to deal with an object passed to a log record. That's why it needs a `__str__` anyway. We also use the standard formatter class with `swallow_log` and all the log output testing. So, moving behavior control to `ColorFormatter` (or several formatters?) should be aimed for, I think, but that implies some more reworking of log testing (and we do that a lot with way too precise matches IMO).\r\n\r\nRemaining question from my POV: If exception logging is disabled, should it really be an empty string? From a UX standpoint, I think even an exception name can be confusing (see example in original issue - no exc info needed whatsoever), but with most(?) our current messages there's probably a `:` or `()` remaining that way. I'd argue that we should rewrite those messages, so that they make sense either way. If they don't it's probably not yet a good message anyway. WDYT, @datalad/developers?\r\n\r\n- Closes #4478", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5691/timeline", "performed_via_github_app": null}