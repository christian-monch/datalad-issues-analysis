{"url": "https://api.github.com/repos/datalad/datalad/issues/4962", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4962/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4962/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4962/events", "html_url": "https://github.com/datalad/datalad/issues/4962", "id": 708744448, "node_id": "MDU6SXNzdWU3MDg3NDQ0NDg=", "number": 4962, "title": "Separate extractor results from internal structures", "user": {"login": "christian-monch", "id": 17925232, "node_id": "MDQ6VXNlcjE3OTI1MjMy", "avatar_url": "https://avatars.githubusercontent.com/u/17925232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christian-monch", "html_url": "https://github.com/christian-monch", "followers_url": "https://api.github.com/users/christian-monch/followers", "following_url": "https://api.github.com/users/christian-monch/following{/other_user}", "gists_url": "https://api.github.com/users/christian-monch/gists{/gist_id}", "starred_url": "https://api.github.com/users/christian-monch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christian-monch/subscriptions", "organizations_url": "https://api.github.com/users/christian-monch/orgs", "repos_url": "https://api.github.com/users/christian-monch/repos", "events_url": "https://api.github.com/users/christian-monch/events{/privacy}", "received_events_url": "https://api.github.com/users/christian-monch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-09-25T08:17:30Z", "updated_at": "2020-09-25T08:17:30Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Datalad uses an internal structure, i.e. a dictionary to pass information about metadata, for example in the _meta2doc and _mk_schema-methods of Search-classes. This dictionary contains a number of administrative keys, which are used by the datalad core code, i.e. code in datalad.metadata. These keys are:\r\n\r\n- path\r\n- type\r\n- datalad_unique_content_properties\r\n- parentds\r\n\r\nIn addition this dictionary will contains keys with the name of installed metadata extractors. The way to discriminate between them is to either:\r\n- Know all names that are administrative (needs to be updated, when the set of administrative names changes)\r\n- Identify all keys with a dictionary value as metadata format names, unless the key is `datalad_unique_content_properties` (needs to be updated when this configuration changes)\r\n\r\nIt is easy to see, that this logic is brittle. The code has to be updated when the names change, the metadata extractors names should not be the same as the keys of the administrative entries.\r\n\r\nTo mitigate this problem and reduce the number of possible errors, we should create an administrative entry in said structure that contains all extracted metadata, for example, an entry with the name \"extracted_metadata\", which contains a dictionary where the keys are the extractor names and the values are the extracted metadata.\r\n\r\n(And with python >= 3.7, we might use dataclasses instead of dictionaries for said structure) ", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4962/timeline", "performed_via_github_app": null}