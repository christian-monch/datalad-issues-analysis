{"url": "https://api.github.com/repos/datalad/datalad/issues/1506", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/1506/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/1506/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/1506/events", "html_url": "https://github.com/datalad/datalad/pull/1506", "id": 227317025, "node_id": "MDExOlB1bGxSZXF1ZXN0MTIwMjgxOTcx", "number": 1506, "title": "Uniform, efficient and explicit input path handling", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 289240596, "node_id": "MDU6TGFiZWwyODkyNDA1OTY=", "url": "https://api.github.com/repos/datalad/datalad/labels/performance", "name": "performance", "color": "f4b2d8", "default": false, "description": "Improve performance of an existing feature"}, {"id": 390153891, "node_id": "MDU6TGFiZWwzOTAxNTM4OTE=", "url": "https://api.github.com/repos/datalad/datalad/labels/UX", "name": "UX", "color": "0052cc", "default": false, "description": "user experience"}, {"id": 526935563, "node_id": "MDU6TGFiZWw1MjY5MzU1NjM=", "url": "https://api.github.com/repos/datalad/datalad/labels/feedback-desired", "name": "feedback-desired", "color": "fbca04", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2017-05-09T10:15:51Z", "updated_at": "2018-07-14T22:37:21Z", "closed_at": "2017-06-07T10:59:49Z", "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/1506", "html_url": "https://github.com/datalad/datalad/pull/1506", "diff_url": "https://github.com/datalad/datalad/pull/1506.diff", "patch_url": "https://github.com/datalad/datalad/pull/1506.patch"}, "body": "Things got better, but we are still suffering from some fuzzy semantics and scattered processing of input paths. This is an attempt to change that, and with it a number of related issues.\r\n\r\nThe principle goal is to concentrate any path handling in a single command.\r\n\r\n- [x] `Interface._prep()` RF to `annotate_paths` plumbing command (generator) and centralize the reporting logic for `unavailable_paths` in there. Except for `get` and `remove` all other commands could delegate reporting to it. Would compact client code quite a bit. `get` and `remove` could fish these out of the yielded results quite easily.\r\n- [x] add another simple helper that can turn validated results into an oldschool `content_by_ds` dictionary to ease phased RF\r\n- [x] reconsider exception/error handling #1200, but also see next\r\n- [x]  figure out what to do with the ValueError thrown by Interface._prep() if non-dataset paths are given. This should rather turn into an \"error\" result to get a result for each input argument.\r\n- [x] possible OPT for `get_paths_by_dataset()` #1505 \r\n- [x] explicitly identify paths that were given as input, in contrast to paths that were discovered (e.g. due to recursion)\r\n- [x] explicitly distinguish between paths pointing to a dataset vs. paths pointing into a dataset. For example, `ds.add(subds)` could mean add `subds` as a subdataset to `ds`, but it could also mean add everything in `subds` to `subds` and then add `subds` as a subdataset to `ds`. So far this is decided by secret negotiations in the back alley. This may require a change to our approach to path normalization (`get_normalized_path_arguments()`), which is presently done upfront, and therefore prevents us from using semantic markup like `subdir/.` or `subdir/` (like rsync) to indicate that we are talking about the content of a dir, rather than the dir itself.\r\n- [x] possible further OPT once actual use cases for `unavailable_paths` are analyzed (also see #1505, and below) \r\n- [x] avoid manual passed `path`s for log (formated) message, always annotate log automatically \r\n- [x] enable all commands that get input paths to also accepted \"annotated\" paths (dicts like our result dicts), so we can avoid rediscovering what something is (file, dir, dataset), and also avoid more expensive things like \"what is the superdataset\".\r\n- [x] converted `create` to fix #1518 with no additional custom test\r\n- [x] fixes: `ds.create(path)` must refuse to create at `path` if `ds` knows about a subdataset at this location already #1518\r\n- [x] fixes: `get_paths_by_dataset()` is MAJOR source of slowdown! #1505 \r\n- [x] fixes: save recursive saves untracked files in submodules #1419 (or anywhere)\r\n- [x] fixes: save subdspaths does nothing #1389 \r\n- [x] give `add` a little extra speed boost #1517 \r\n- [x] `subdatasets` needs mode to query only a subset of the subdatasets #1529\r\n- [x] fixes: remove refuses to remove #1530\r\n- [x] rewrite `get` to avoid unecessary dataset hierarchy traversal\r\n- [x] rewrite `clean` with path annotation\r\n- [x] rewrite `drop` with path annotation\r\n- [x] rewrite `uninstall` with path annotation\r\n- [x] removed obsolete `handle_dirty_datasets()`\r\n- [x] initial draft of a `diff` command #1217 \r\n- [x] generic `--since` functionality #1202 (this still needs investigating what exactly it is supposed to do and how it should be used. in any case, path annotation supports seomthing like this now)\r\n- [x] default error mode is 'continue' now\r\n- [x] cmdline interface no longer vommits `IncompleteResultsError`\r\n- optimize `annotate_paths()`", "closed_by": {"login": "bpoldrack", "id": 10498301, "node_id": "MDQ6VXNlcjEwNDk4MzAx", "avatar_url": "https://avatars.githubusercontent.com/u/10498301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpoldrack", "html_url": "https://github.com/bpoldrack", "followers_url": "https://api.github.com/users/bpoldrack/followers", "following_url": "https://api.github.com/users/bpoldrack/following{/other_user}", "gists_url": "https://api.github.com/users/bpoldrack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpoldrack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpoldrack/subscriptions", "organizations_url": "https://api.github.com/users/bpoldrack/orgs", "repos_url": "https://api.github.com/users/bpoldrack/repos", "events_url": "https://api.github.com/users/bpoldrack/events{/privacy}", "received_events_url": "https://api.github.com/users/bpoldrack/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/1506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/1506/timeline", "performed_via_github_app": null}