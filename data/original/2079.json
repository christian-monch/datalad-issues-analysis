{"url": "https://api.github.com/repos/datalad/datalad/issues/2079", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/2079/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/2079/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/2079/events", "html_url": "https://github.com/datalad/datalad/issues/2079", "id": 288975821, "node_id": "MDU6SXNzdWUyODg5NzU4MjE=", "number": 2079, "title": "Toward 0.10 release of master", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/datalad/datalad/milestones/48", "html_url": "https://github.com/datalad/datalad/milestone/48", "labels_url": "https://api.github.com/repos/datalad/datalad/milestones/48/labels", "id": 3040617, "node_id": "MDk6TWlsZXN0b25lMzA0MDYxNw==", "number": 48, "title": "Release 0.10.0", "description": "The release with new metadata aggregation/search support.\r\n\r\nShould include 0.9.2 fixes etc, i.e. have 0.9.x branch merged", "creator": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 51, "state": "closed", "created_at": "2018-01-16T22:43:30Z", "updated_at": "2018-06-13T16:50:07Z", "due_on": null, "closed_at": "2018-06-13T16:50:07Z"}, "comments": 17, "created_at": "2018-01-16T16:42:28Z", "updated_at": "2018-06-12T05:13:48Z", "closed_at": "2018-06-12T05:13:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### What is the problem?\r\n\r\n\"Contribute to master vs 0.9.x\" is a common point of discussion.  I think we should indeed strive to release master ASAP but IMHO here is one major issue which needs to be addressed first -- master should be usable and provide at least the same level of convenience and functionality as previous releases.  Unfortunately with the current state/view on things it was not the case on any of my attempts.  `search`, even when I aggregate all metadata for the entirety of the datasets.datalad.org was not usable\r\n\r\n- [x]  Problem 1: \"default\" index building on client takes prohibitively too long - now by default dataset level\r\n\r\ncontinue in #2032 \r\nWhenever previously initial search \"index\" was built within a few seconds, now it could take minutes since it would build index from all metadata provided by the superdataset.  @mih 's opinion is that it should be up to the super-dataset curator to decide at which level of detail he should provide meta-data (per file, per datasets etc).   I thought about it, and in my view, I think it should be for a client to decide, and by default we should build an index based only on datasets level.  It should be fast, and it should provide again similar experience to what we already had (see 3 below), so people could just install datalad, and do basic queries.  Then, whoever feels going to the next level, could say (probably by changing config setting) -- build the index using both dataset and file-level metadata.  This way from the same datasets.datalad.org we could accommodate both types of users and at different levels they decide to do so\r\n\r\n- [x]  Problem 2: need to autodetect/assign types of metadata parsers for the datasets.datalad.org - assigned manually to the majority if not all\r\n\r\ncontinue in https://github.com/datalad/datalad/issues/2084 \r\n\r\nIt is a part of the bigger effort to provide a new aggregated metadata for datasets.  As for autodetection --\r\n It is a minor thing I guess, but hadn't chance yet to do so. Sure thing could start just with current state and just use those already assigned (e.g. bids) and ignore other additionally available (nifti, dicom).  Unfortunately this would delay usability/practicality testing of the datalad on our full collection of datasets.  So I would like to see if that happen before we release so we could test it nicely\r\n\r\n- [x] Problem 3: we are switching from simple string matching to mightier whoosh - somewhat ongoing with blobmatching and rememberance of the bash in https://github.com/datalad/datalad/issues/2052#issuecomment-365717780\r\n\r\nI did try quite a few times to search, and kept running into problems (#2052, #2018, ...) for many of which \"ah -- it is smaug's fault\" was the answer. Some of those were  technical (nevertheless must be addressed) but others looked more like my lack of \"deep whoosh knowledge\" and I kept being referred to the whoosh documentation etc which I was recommended to learn to perform the basic search.  We can't do that to the users -- we should assure that at least basic searches work as easily as before, that we have good documentation to assure that it is easy on how to accomplish what could have been done before. E.g., to provide examples such as \r\n\r\n   Instead of  (snippet I advocated widely before)\r\n   `datalad search haxby | xargs datalad install`\r\n   command now use \r\n   `???`\r\n\r\nedit yoh (based on mih pointer): answer is in #2080 ... should get better visibility for mortals like me.  The rest of my problems are probably just technical issues/bugs which could be resolved\r\n\r\n- [ ] convert all (super)datasets into annex datasets so metadata (although still not huge) does not impair their .git/objects before final aggregate-metadata.  May be setup .datalad/metadata to contain text files straight in git, which would be ds- files which should be not that big -- this way people would get all dataset level metadata right away as before\r\n   - [ ] need manually create `.datalad/metadata/.gitattributes` to direct ds* into git and cn to annex\r\n          Yet actually to decide what should go where\r\n\r\n- [ ] aggregate-metadata \"for real\" using Python 3 (use --incremental and --update-mode)\r\n\r\n- [x] (postponed) adjust `ls` which is used on web frontend to generate web-view metadata to use new metadata (#2403)\r\n\r\nI would hate to release master into the wild before we address those issues above.  Potentially very powerful but unusable (too long, too difficult to specify, etc) search would repel new users, and possibly annoy a few of existing ones.  If you agree that those are indeed the problems to address, let's move them into dedicated issues and resolve them.", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/2079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/2079/timeline", "performed_via_github_app": null}