{"url": "https://api.github.com/repos/datalad/datalad/issues/3755", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/3755/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/3755/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/3755/events", "html_url": "https://github.com/datalad/datalad/issues/3755", "id": 503440945, "node_id": "MDU6SXNzdWU1MDM0NDA5NDU=", "number": 3755, "title": "create-sibling-github: Allow to specify {organization,login}/reponame", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390153891, "node_id": "MDU6TGFiZWwzOTAxNTM4OTE=", "url": "https://api.github.com/repos/datalad/datalad/labels/UX", "name": "UX", "color": "0052cc", "default": false, "description": "user experience"}, {"id": 2803374957, "node_id": "MDU6TGFiZWwyODAzMzc0OTU3", "url": "https://api.github.com/repos/datalad/datalad/labels/cmd-create-sibling-github", "name": "cmd-create-sibling-github", "color": "FEF2C0", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-07T13:07:27Z", "updated_at": "2021-09-22T17:47:28Z", "closed_at": "2021-09-22T17:47:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A report came from our tireless pilot users, who tried `create-sibling-github hislogin/repo` to get `hislogin-repo` generated on github instead of expected `repo` under his `github.com/login`.  I think it would be nice from UX perspective to allow for `reponame` specification to carry `organization/` or `login/` prefix.  The tricky part on our side would be necessity to figure out, through interaction with github, either it is a login or organization since subsequent codepath is a bit different between the two, so it is not just a matter of splitting into `github_organization, reponame` as I have blindly tried first with \r\n\r\n<details>\r\n<summary>this patch</summary> \r\n\r\n```patch\r\ndiff --git a/datalad/distribution/create_sibling_github.py b/datalad/distribution/create_sibling_github.py\r\nindex fc8d74125..6b37da58c 100644\r\n--- a/datalad/distribution/create_sibling_github.py\r\n+++ b/datalad/distribution/create_sibling_github.py\r\n@@ -86,7 +86,9 @@ class CreateSiblingGithub(Interface):\r\n             args=('reponame',),\r\n             metavar='REPONAME',\r\n             doc=\"\"\"Github repository name. When operating recursively,\r\n-            a suffix will be appended to this name for each subdataset\"\"\",\r\n+            a suffix will be appended to this name for each subdataset. Could\r\n+            be used to specify both organization and repository name if\r\n+            specified as 'org/name'\"\"\",\r\n             constraints=EnsureStr()),\r\n         recursive=recursion_flag,\r\n         recursion_limit=recursion_limit,\r\n@@ -154,6 +156,16 @@ class CreateSiblingGithub(Interface):\r\n         # unnecessary dependencies\r\n         from datalad.support.github_ import _make_github_repos\r\n \r\n+        # If user provides \"login/repo\" (as they do), split based on '/'\r\n+        if '/' in reponame and not github_organization:\r\n+            github_organization, reponame_ = reponame.split('/', 1)\r\n+            lgr.info(\r\n+                \"Split original '%s' into '%s' organization and '%s' repo name\",\r\n+                reponame, github_organization, reponame_\r\n+            )\r\n+            reponame = reponame_\r\n+            del reponame_\r\n+\r\n         # what to operate on\r\n         ds = require_dataset(\r\n             dataset, check_installed=True, purpose='create Github sibling')\r\n```\r\n</details>", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/3755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/3755/timeline", "performed_via_github_app": null}