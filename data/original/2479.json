{"url": "https://api.github.com/repos/datalad/datalad/issues/2479", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/2479/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/2479/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/2479/events", "html_url": "https://github.com/datalad/datalad/issues/2479", "id": 321235440, "node_id": "MDU6SXNzdWUzMjEyMzU0NDA=", "number": 2479, "title": "Returning a non-zero exit code in the cli, results in the python api", "user": {"login": "kyleam", "id": 1297788, "node_id": "MDQ6VXNlcjEyOTc3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleam", "html_url": "https://github.com/kyleam", "followers_url": "https://api.github.com/users/kyleam/followers", "following_url": "https://api.github.com/users/kyleam/following{/other_user}", "gists_url": "https://api.github.com/users/kyleam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleam/subscriptions", "organizations_url": "https://api.github.com/users/kyleam/orgs", "repos_url": "https://api.github.com/users/kyleam/repos", "events_url": "https://api.github.com/users/kyleam/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778594, "node_id": "MDU6TGFiZWw2Mzc3ODU5NA==", "url": "https://api.github.com/repos/datalad/datalad/labels/question", "name": "question", "color": "fbca04", "default": true, "description": "Issue asks a question rather than reporting a problem"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-05-08T15:28:03Z", "updated_at": "2019-10-05T09:04:43Z", "closed_at": "2019-10-05T09:04:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@yarikoptic and I wanted to make the `check_dates` extension have the following behavior:\r\n\r\n1.  When called via the CLI, dump \"hits\" (offending dates) to stdout as json records and exit with some particular **non-zero exit code** to indicate that there were hits.\r\n\r\n2.  When called via the Python api, return the hits.\r\n\r\nBut I couldn't figure out how to make that work.  To get a non-zero exit code, I could abuse a `CommandError`, which is handled specifically in datalad/cmdline.main.py:\r\n\r\n<https://github.com/datalad/datalad/blob/43e37edc6f00b6edf250f1edc0116b9bd62f3f87/datalad/cmdline/main.py#L400-L414>\r\n\r\nBut then calls via the python interface would fail with a `CommandError` exception when there are any hits.\r\n\r\nAm I overlooking an easy way to accomplish this using datalad's interface for commands?\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/2479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/2479/timeline", "performed_via_github_app": null}