{"url": "https://api.github.com/repos/datalad/datalad/issues/4530", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4530/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4530/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4530/events", "html_url": "https://github.com/datalad/datalad/issues/4530", "id": 618103355, "node_id": "MDU6SXNzdWU2MTgxMDMzNTU=", "number": 4530, "title": "Exploring `diff(annex=!None)`->`push` slowness", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 289240596, "node_id": "MDU6TGFiZWwyODkyNDA1OTY=", "url": "https://api.github.com/repos/datalad/datalad/labels/performance", "name": "performance", "color": "f4b2d8", "default": false, "description": "Improve performance of an existing feature"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-14T10:11:23Z", "updated_at": "2020-05-17T14:46:36Z", "closed_at": "2020-05-17T14:46:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have a dataset (64k files) that is impossible to push in any sane amount of time. All files actually come from a single 7z archive, none are checked out. So what `push` should do is to push a single key and make a `git push`. But what happens is nothing for ages.\r\n\r\nHere I am trying to figure out which parts of the process are slow --- hoping to fix them:\r\n\r\nThe first substantial slow part is this, part of (`get_annex_info()`, that is used to query\r\ninfo on files that are annexed, in turn part of `diff(annex='availability')`):\r\n\r\n```\r\n% time git annex findref -c annex.dotfiles=true -c annex.retry=3 --json --json-error-messages --copies 0 HEAD > /dev/null\r\ngit annex findref -c annex.dotfiles=true -c annex.retry=3 --json  --copies 0   78.67s user 7.25s system 104% cpu 1:22.34 total\r\n```\r\n\r\nI am using this code to explore:\r\n\r\n```\r\n% python -c \"from datalad.core.local.diff import diff_dataset; from datalad.api import Dataset; print(len(list(diff_dataset(Dataset('.'), None, 'HEAD', False, untracked='no', eval_file_type=False))))\"\r\n```\r\nand a few trivial indicators\r\n\r\n```diff\r\ndiff --git a/datalad/core/local/diff.py b/datalad/core/local/diff.py\r\nindex ab8793c62..49bde39f8 100644\r\n--- a/datalad/core/local/diff.py\r\n+++ b/datalad/core/local/diff.py\r\n@@ -305,6 +305,8 @@ def _diff_ds(ds, fr, to, constant_refs, recursion_level, origpaths, untracked,\r\n             for p, goinside in origpaths.items()\r\n             if ds.pathobj in p.parents or (p == ds.pathobj and goinside)\r\n         )\r\n+    import time\r\n+    print(time.time(),\"DIFFSTART\")\r\n     try:\r\n         lgr.debug(\"Diff %s from '%s' to '%s'\", ds, fr, to)\r\n         diff_state = repo.diffstatus(\r\n@@ -323,6 +325,7 @@ def _diff_ds(ds, fr, to, constant_refs, recursion_level, origpaths, untracked,\r\n         return\r\n \r\n     if annexinfo and hasattr(repo, 'get_content_annexinfo'):\r\n+        print(time.time(),\"DIFFANNEXSTART\", to)\r\n         # this will ammend `status`\r\n         repo.get_content_annexinfo(\r\n             paths=paths.keys() if paths is not None else paths,\r\n@@ -330,6 +333,7 @@ def _diff_ds(ds, fr, to, constant_refs, recursion_level, origpaths, untracked,\r\n             eval_availability=annexinfo in ('availability', 'all'),\r\n             ref=to)\r\n         if fr != to:\r\n+            print(time.time(),\"DIFFANNEXSTART\", fr)\r\n             repo.get_content_annexinfo(\r\n                 paths=paths.keys() if paths is not None else paths,\r\n                 init=diff_state,\r\n@@ -340,6 +344,8 @@ def _diff_ds(ds, fr, to, constant_refs, recursion_level, origpaths, untracked,\r\n     # potentially collect subdataset diff call specs for the end\r\n     # (if order == 'breadth-first')\r\n     subds_diffcalls = []\r\n+    print(time.time(),\"EVAL_ITEMS\")\r\n+\r\n     for path, props in diff_state.items():\r\n         pathinds = str(ds.pathobj / path.relative_to(repo_path))\r\n         yield dict(\r\n@@ -404,6 +410,8 @@ def _diff_ds(ds, fr, to, constant_refs, recursion_level, origpaths, untracked,\r\n                 raise RuntimeError(\r\n                     \"Unexpected subdataset state '{}'. That sucks!\".format(\r\n                         subds_state))\r\n+    print(time.time(),\"MORE DIFFDS\")\r\n     # deal with staged subdataset diffs\r\n     for call_args, call_kwargs in subds_diffcalls:\r\n         yield from _diff_ds(*call_args, **call_kwargs)\r\n+    print(time.time(),\"DONE\")\r\n```\r\n\r\nHere are a few cases:\r\n\r\nPlain diff is fast\r\n```\r\n(datalad3-dev) mih@meiner /tmp/niels (git)-[master] % python -c \"from datalad.core.local.diff import diff_dataset; from datalad.api import Dataset; print(len(list(diff_dataset(Dataset('.'), None, 'HEAD', False, untracked='no', eval_file_type=False))))\"\r\n1589455523.3681486 DIFFSTART\r\n1589455527.0652835 EVAL_ITEMS\r\n1589455530.1751022 MORE DIFFDS\r\n1589455530.175466 DONE\r\n69216\r\npython -c   9.37s user 0.68s system 98% cpu 10.247 total\r\n```\r\n\r\nBasic annex info is already slow\r\n```\r\n(datalad3-dev) mih@meiner /tmp/niels (git)-[master] % python -c \"from datalad.core.local.diff import diff_dataset; from datalad.api import Dataset; print(len(list(diff_dataset(Dataset('.'), None, 'HEAD', False, untracked='no', eval_file_type=False, annex='basic'))))\"\r\n1589455672.8778915 DIFFSTART\r\n1589455677.0275943 DIFFANNEXSTART HEAD\r\n1589455888.6724038 DIFFANNEXSTART None\r\n1589456106.4698653 EVAL_ITEMS\r\n1589456108.927051 MORE DIFFDS\r\n1589456108.9272103 DONE\r\n69216\r\npython -c   322.47s user 66.87s system 88% cpu 7:19.89 total\r\n```\r\n\r\nand what `push` uses is even slower\r\n```\r\n% python -c \"from datalad.core.local.diff import diff_dataset; from datalad.api import Dataset; print(len(list(diff_dataset(Dataset('.'), None, 'HEAD', False, untracked='no', eval_file_type=False, annex='availability'))))\"\r\n1589456277.6029913 DIFFSTART\r\n1589456279.776204 DIFFANNEXSTART HEAD\r\n1589460272.096561 DIFFANNEXSTART None\r\n1589465641.2677739 EVAL_ITEMS\r\n1589465642.419541 MORE DIFFDS\r\n1589465642.4195757 DONE\r\n69216\r\npython -c   6892.90s user 69.24s system 74% cpu 2:36:07.18 total\r\n```\r\n\r\nEspecially the multiple `repo.get_content_annexinfo()` calls look suspiciously greedy to me. It seems sensible to delay those to the latest possible stage, in order to be able to more surgically decide what info is actually needed.", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4530/timeline", "performed_via_github_app": null}