{"url": "https://api.github.com/repos/datalad/datalad/issues/5716", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5716/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5716/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5716/events", "html_url": "https://github.com/datalad/datalad/issues/5716", "id": 913417787, "node_id": "MDU6SXNzdWU5MTM0MTc3ODc=", "number": 5716, "title": "Plans for `exc_str` replacement", "user": {"login": "bpoldrack", "id": 10498301, "node_id": "MDQ6VXNlcjEwNDk4MzAx", "avatar_url": "https://avatars.githubusercontent.com/u/10498301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpoldrack", "html_url": "https://github.com/bpoldrack", "followers_url": "https://api.github.com/users/bpoldrack/followers", "following_url": "https://api.github.com/users/bpoldrack/following{/other_user}", "gists_url": "https://api.github.com/users/bpoldrack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpoldrack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpoldrack/subscriptions", "organizations_url": "https://api.github.com/users/bpoldrack/orgs", "repos_url": "https://api.github.com/users/bpoldrack/repos", "events_url": "https://api.github.com/users/bpoldrack/events{/privacy}", "received_events_url": "https://api.github.com/users/bpoldrack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-06-07T10:58:00Z", "updated_at": "2021-09-24T11:24:39Z", "closed_at": "2021-09-24T11:24:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Putting the idea for follow ups for PR #5691 here to have the discussion separated.\r\nIn that PR I leave `exc_str` as simple \"proxy\" shim, instead of replacing its calls.\r\n\r\nIMO replacing this (its calls) should be taken as an occasion to go through the places where we log exceptions and make sure we don't double log (log where an exception is \"handled\", not where it occurs (that's why we have partially both)- we have a traceback and don't need the original place for a dedicated log message.\r\nFurthermore I think `CapturedException` should get method `log(logger, level, msg)`, that actually does *two* things:\r\n\r\n- log the actual exception at a dedicated level (may be configurable) - probably below DEBUG\r\n- use `level` and `msg` for a second log message after the above that should not include the exception itself. That is for two reasons:\r\n    1. A message containing the exception will often look weird (at least ATM) with something like \"Bad thing happened:\" where nothing follows the colon with exception logging disabled.\r\n    2. From my POV a log message - particularly since logging is to some degree user output in our case - should focus on a humanly readable and understandable problem description, not a technical one. This is for people actually debugging and it's telling only, if one is somewhat fanilar with datalad's code base.\r\n\r\nThere are a few other spots, where `exc_str` is used with result dicts. I think, there should be a similar approach. Have a dedicated method for adding a result entry for the exception to a dict. This can be several key value pairs with different formats. It's then up to the result renderer to decide what to make use of.\r\n\r\nLast but not least: In both cases (results and logging) the ultimate formatting decision should be moved from the spots where we currently use `exc_str` to log formatter(s) and result renderer(s). I'm not a fan of yet another intermediate step ATM, so I wanted to keep the use of `exc_str` as a marker for what to go through.\r\n\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5716/timeline", "performed_via_github_app": null}