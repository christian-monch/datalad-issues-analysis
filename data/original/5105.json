{"url": "https://api.github.com/repos/datalad/datalad/issues/5105", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5105/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5105/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5105/events", "html_url": "https://github.com/datalad/datalad/issues/5105", "id": 731857116, "node_id": "MDU6SXNzdWU3MzE4NTcxMTY=", "number": 5105, "title": "idea: git-annex-merger bot", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 655634847, "node_id": "MDU6TGFiZWw2NTU2MzQ4NDc=", "url": "https://api.github.com/repos/datalad/datalad/labels/good-for-hackathon", "name": "good-for-hackathon", "color": "fbca04", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-10-28T23:17:31Z", "updated_at": "2020-10-29T03:59:46Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I have not looked how submissions/PRs for updates to CONP datasets happening or anyone else came up with this already, but @satra asked about how PRs for annexed content could be \"organized\".  I think having a bot which would do following would be of great help (thinking only about updates to the main tree/branches ATM, not pure \"update git annex availability information\" PRs)\r\n\r\n- listen on PRs, and if no changes to git-annexed files - do nothing, and if there are -- following:\r\n- analyze PR's branch and git-annex branch on the PR origin clone\r\n- add to PR a comment with summary over annexed-files (how many annexed files added/changed) and git-annex branch (how many new remotes would be added, how many new URLs for keys etc)\r\n- if PR is accepted/merged, it would `git annex merge && git push origin git-annex` thus introducing\r\n\r\ndangers: malicious or \"malagnant\" (buggy) `git-annex` branches (someone was messing with UUIDs, etc)\r\n- I wonder if it would be easy to \"pick up\" only relevant changes from `git-annex` branch:\r\n  - see which keys were affected by any commit in PR\r\n  - take those keys remote(s) only (not all possible known remotes)\r\n  - merge changes only for those keys (not the full git-annex branch).  I bet could be done by establishing some dedicated git-annex branch with keys directories and remotes.log etc filtered for only relevant content, and then using `git-annex merge`\r\n\r\nactually a \"full featured\" `copy-file` (https://github.com/datalad/datalad/issues/4995) could be used here to establish such \"only PR related git-annex branch\" by copying (and where needed merging information) files/keys into the target repository from the original clone.\r\n\r\nif it would be analyzing history of commits in the PR it could add to PR description checkboxes to select options\r\n- all commits content or only final (so it would not bother to pick up information on the keys which are not present in the final state of the PR)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5105/timeline", "performed_via_github_app": null}