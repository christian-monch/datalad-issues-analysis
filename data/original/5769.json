{"url": "https://api.github.com/repos/datalad/datalad/issues/5769", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5769/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5769/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5769/events", "html_url": "https://github.com/datalad/datalad/issues/5769", "id": 932351192, "node_id": "MDU6SXNzdWU5MzIzNTExOTI=", "number": 5769, "title": "Allow extensions to populate `datalad.interface.common_cfg.definitions`", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 545918236, "node_id": "MDU6TGFiZWw1NDU5MTgyMzY=", "url": "https://api.github.com/repos/datalad/datalad/labels/DX", "name": "DX", "color": "0052cc", "default": false, "description": "developer experience"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-06-29T08:15:25Z", "updated_at": "2021-06-29T08:15:25Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Two modes of operations come to my mind:\r\n\r\n### Do nothing and don't fight extensions\r\n\r\nOnce imported, extensions could \"monkey-patch\" this dictionary and announce additional config. This would have minimal impact on performance, as it is only happening when it become relevant. There are two major downsides: 1) the model would be to invite 3rd-party code mess with the internal of datalad-core (fragile), and 2) generic tools like [x_configuration](http://docs.datalad.org/projects/mihextras/en/latest/generated/datalad.api.x_configuration.html) will have a hard time to pick these up (not impossible, though).\r\n\r\n### Introduce update functionality that queries extensions (via entrypoint)\r\n\r\nThis will be slower, but could be implemented in a lazy-loading fashion (likely the simple dict needs to become a class). The big advantage is to have a formal interface for extensions to work with.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5769/timeline", "performed_via_github_app": null}