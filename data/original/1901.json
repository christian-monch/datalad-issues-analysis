{"url": "https://api.github.com/repos/datalad/datalad/issues/1901", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/1901/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/1901/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/1901/events", "html_url": "https://github.com/datalad/datalad/issues/1901", "id": 265543523, "node_id": "MDU6SXNzdWUyNjU1NDM1MjM=", "number": 1901, "title": "should aggregation be more robust to errors in files?", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-15T03:50:43Z", "updated_at": "2017-11-01T07:30:40Z", "closed_at": "2017-11-01T07:30:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### What is the problem?\r\n\r\nThe entire aggregation of metadata (the new version) would blow up if e.g. some file could not be loaded correctly.  I think,\r\n- it should be sufficient to issue a warning and skip that file.\r\n- the entire aggregation for a (sub)dataset should also be guarded to catch any exception thrown, and then if possible also provide the same mechanism as `--on-failure` done with other commands (or just issue a warning and proceed)\r\n\r\ncurrently:\r\n```shell\r\n(git)smaug:/mnt/btrfs/scrap/datalad/tmp/datasets/openfmri/ds000009[master]\r\n$> datalad --dbg -l debug aggregate-metadata -r\r\n[DEBUG  ] Determined class of decorated function: <class 'datalad.metadata.aggregate.AggregateMetaData'> \r\n[DEBUG  ] Resolved dataset for metadata aggregation: <Dataset path=/mnt/btrfs/scrap/datalad/tmp/datasets/openfmri/ds000009> \r\n[DEBUG  ] Determined class of decorated function: <class 'datalad.interface.annotate_paths.AnnotatePaths'> \r\n[DEBUG  ] Determined class of decorated function: <class 'datalad.distribution.subdatasets.Subdatasets'> \r\n[DEBUG  ] Resolved dataset for subdataset reporting/modification: <Dataset path=/mnt/btrfs/scrap/datalad/tmp/datasets/openfmri> \r\n[INFO   ] Aggregate metadata for dataset /mnt/btrfs/scrap/datalad/tmp/datasets/openfmri/ds000009 \r\n[DEBUG  ] Determined class of decorated function: <class 'datalad.distribution.subdatasets.Subdatasets'> \r\n[DEBUG  ] Resolved dataset for subdataset reporting/modification: <Dataset path=/mnt/btrfs/scrap/datalad/tmp/datasets/openfmri/ds000009> \r\n[DEBUG  ] Dump metadata of <Dataset path=/mnt/btrfs/scrap/datalad/tmp/datasets/openfmri/ds000009> (merge mode: init) into <Dataset path=/mnt/btrfs/scrap/datalad/tmp/datasets/openfmri/ds000009> \r\n[DEBUG  ] Metadata parser unusable: audio \r\n[DEBUG  ] Metadata parser unusable: exif \r\n[DEBUG  ] Metadata parser unusable: xmp \r\nTraceback (most recent call last):\r\n  File \"/home/yoh/proj/datalad/datalad/venvs/dev/bin/datalad\", line 8, in <module>\r\n    main()\r\n  File \"/home/yoh/proj/datalad/datalad/datalad/cmdline/main.py\", line 347, in main\r\n    ret = cmdlineargs.func(cmdlineargs)\r\n  File \"/home/yoh/proj/datalad/datalad/datalad/interface/base.py\", line 427, in call_from_parser\r\n    ret = list(ret)\r\n  File \"/home/yoh/proj/datalad/datalad/datalad/interface/utils.py\", line 382, in generator_func\r\n    result_renderer, result_xfm, _result_filter, **_kwargs):\r\n  File \"/home/yoh/proj/datalad/datalad/datalad/interface/utils.py\", line 449, in _process_results\r\n    for res in results:\r\n  File \"/home/yoh/proj/datalad/datalad/datalad/metadata/aggregate.py\", line 671, in __call__\r\n    to_save)\r\n  File \"/home/yoh/proj/datalad/datalad/datalad/metadata/aggregate.py\", line 199, in _extract_metadata\r\n    paths=relevant_paths)\r\n  File \"/home/yoh/proj/datalad/datalad/datalad/metadata/metadata.py\", line 639, in _get_metadata\r\n    for loc, meta in contentmeta_t or {}:\r\n  File \"/home/yoh/proj/datalad/datalad/datalad/metadata/parsers/base.py\", line 37, in <genexpr>\r\n    ((k, v) for k, v in self._get_content_metadata()) if content else None\r\n  File \"/home/yoh/proj/datalad/datalad/datalad/metadata/parsers/bids.py\", line 117, in _get_content_metadata\r\n    for r in yield_participant_info(participants_fname):\r\n  File \"/home/yoh/proj/datalad/datalad/datalad/metadata/parsers/bids.py\", line 130, in yield_participant_info\r\n    for row in csv.DictReader(tsvfile, dialect=dialect):\r\n  File \"/usr/lib/python2.7/csv.py\", line 108, in next\r\n    row = self.reader.next()\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2019' in position 72: ordinal not in range(128)\r\n()\r\n> /usr/lib/python2.7/csv.py(108)next()\r\n-> row = self.reader.next()\r\n(Pdb) \r\n\r\n```\r\nand\r\n```shell\r\n$> datalad --on-failure ignore aggregate-metadata -r      \r\n[INFO   ] Aggregate metadata for dataset /mnt/btrfs/scrap/datalad/tmp/datasets/openfmri/ds000009 \r\n[ERROR  ] 'ascii' codec can't encode character u'\\u2019' in position 72: ordinal not in range(128) [csv.py:next:108] (UnicodeEncodeError) \r\n(dev)2 12067 ->1\r\n```\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/1901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/1901/timeline", "performed_via_github_app": null}