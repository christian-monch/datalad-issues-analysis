{"url": "https://api.github.com/repos/datalad/datalad/issues/4661", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4661/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4661/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4661/events", "html_url": "https://github.com/datalad/datalad/issues/4661", "id": 645477637, "node_id": "MDU6SXNzdWU2NDU0Nzc2Mzc=", "number": 4661, "title": "Logging configurations are not picked up from a local gitconfig", "user": {"login": "adswa", "id": 29738718, "node_id": "MDQ6VXNlcjI5NzM4NzE4", "avatar_url": "https://avatars.githubusercontent.com/u/29738718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adswa", "html_url": "https://github.com/adswa", "followers_url": "https://api.github.com/users/adswa/followers", "following_url": "https://api.github.com/users/adswa/following{/other_user}", "gists_url": "https://api.github.com/users/adswa/gists{/gist_id}", "starred_url": "https://api.github.com/users/adswa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adswa/subscriptions", "organizations_url": "https://api.github.com/users/adswa/orgs", "repos_url": "https://api.github.com/users/adswa/repos", "events_url": "https://api.github.com/users/adswa/events{/privacy}", "received_events_url": "https://api.github.com/users/adswa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778595, "node_id": "MDU6TGFiZWw2Mzc3ODU5NQ==", "url": "https://api.github.com/repos/datalad/datalad/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": "Issue is unlikely to be addressed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-25T11:14:20Z", "updated_at": "2021-10-08T08:15:04Z", "closed_at": "2021-10-08T08:15:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It seems like locally set configuration variables are not picked up, but global ones are. I tried this with ``datalad.log.level`` and ``datalad.log.timestamp`` in ``.git/config`` and ``~/.gitconfig`` on ``0.13.0``.\r\n\r\nLocal configuration:\r\n```\r\n(handbook) \u256d\u2500adina@muninn /home/me/dl-101/DataLad-101 on master\r\n\u2570\u2500\u27a4 git config --local datalad.log.level debug\r\n(handbook) \u256d\u2500adina@muninn /home/me/dl-101/DataLad-101 on master\r\n\u2570\u2500\u27a4 cat .git/config\r\n[...]\r\n[datalad \"log\"]\r\n\tlevel = debug\r\n(handbook) \u256d\u2500adina@muninn /home/me/dl-101/DataLad-101 on master\r\n\u2570\u2500\u27a4 datalad status\r\nnothing to save, working tree clean\r\n```\r\n\r\nGlobal configuration:\r\n```\r\n(handbook) \u256d\u2500adina@muninn /home/me/dl-101/DataLad-101 on master\r\n\u2570\u2500\u27a4 git config --global datalad.log.level debug\r\n(handbook) \u256d\u2500adina@muninn /home/me/dl-101/DataLad-101 on master\r\n\u2570\u2500\u27a4 datalad status\r\n[DEBUG  ] parseParameters: Given \"exclude_special_remotes: bool, optional\r\n|   if True, don't return annex special remotes\", we split into [('exclude_special_remotes', \"exclude_special_remotes: bool, optional\\n  if True, don't return annex special remotes\")] \r\n[DEBUG  ] parseParameters: Given \"with_urls_only : bool, optional\r\n|   return only remotes which have urls\", we split into [('with_urls_only', 'with_urls_only : bool, optional\\n  return only remotes which have urls')] \r\n[DEBUG  ] Command line args 1st pass. Parsed: Namespace() Unparsed: ['status'] \r\n[DEBUG  ] Discovering plugins \r\n[DEBUG  ] Building doc for <class 'datalad.core.local.status.Status'> \r\n[DEBUG  ] Parsing known args among ['/home/adina/env/handbook/bin/datalad', 'status'] \r\n[DEBUG  ] Determined class of decorated function: <class 'datalad.core.local.status.Status'> \r\n[DEBUG  ] Resolved dataset for status reporting: /home/me/dl-101/DataLad-101 \r\n[DEBUG  ] query AnnexRepo(/home/me/dl-101/DataLad-101).diffstatus() for paths: None \r\n[DEBUG  ] AnnexRepo(/home/me/dl-101/DataLad-101).get_content_info(...) \r\n[DEBUG  ] Query repo: ['git', 'ls-files', '--stage', '-z', '-d', '-m', '--exclude-standard', '-o', '--directory', '--no-empty-directory'] \r\n[DEBUG  ] Done query repo: ['git', 'ls-files', '--stage', '-z', '-d', '-m', '--exclude-standard', '-o', '--directory', '--no-empty-directory'] \r\n[DEBUG  ] Done AnnexRepo(/home/me/dl-101/DataLad-101).get_content_info(...) \r\n[DEBUG  ] AnnexRepo(/home/me/dl-101/DataLad-101).get_content_info(...) \r\n[DEBUG  ] Query repo: ['git', 'ls-tree', 'HEAD', '-z', '-r', '--full-tree', '-l'] \r\n[DEBUG  ] Done query repo: ['git', 'ls-tree', 'HEAD', '-z', '-r', '--full-tree', '-l'] \r\n[DEBUG  ] Initiating a new process for BatchedCommand(cmd=['git', 'cat-file', '--batch'], output_proc=<function>, path='/home/me/dl-101/DataLad-101') \r\n[DEBUG  ] Closing stdin of <subprocess.Popen object at 0x7f948facbf60> and waiting process to finish \r\n[DEBUG  ] Process <subprocess.Popen object at 0x7f948facbf60> has finished \r\n[DEBUG  ] Done AnnexRepo(/home/me/dl-101/DataLad-101).get_content_info(...) \r\n[DEBUG  ] GitRepo(/home/me/dl-101/DataLad-101/midterm_project).get_content_info(...) \r\n[DEBUG  ] Query repo: ['git', 'ls-files', '--stage', '-z', '-d', '-m', '--exclude-standard', '-o', '--directory', '--no-empty-directory'] \r\n[DEBUG  ] Done query repo: ['git', 'ls-files', '--stage', '-z', '-d', '-m', '--exclude-standard', '-o', '--directory', '--no-empty-directory'] \r\n[DEBUG  ] Done GitRepo(/home/me/dl-101/DataLad-101/midterm_project).get_content_info(...) \r\n[DEBUG  ] GitRepo(/home/me/dl-101/DataLad-101/midterm_project).get_content_info(...) \r\n[DEBUG  ] Query repo: ['git', 'ls-tree', 'HEAD', '-z', '-r', '--full-tree', '-l'] \r\n[DEBUG  ] Done query repo: ['git', 'ls-tree', 'HEAD', '-z', '-r', '--full-tree', '-l'] \r\n[DEBUG  ] Done GitRepo(/home/me/dl-101/DataLad-101/midterm_project).get_content_info(...) \r\n[DEBUG  ] GitRepo(/home/me/dl-101/DataLad-101/midterm_project/input).get_content_info(...) \r\n[DEBUG  ] Query repo: ['git', 'ls-files', '--stage', '-z', '-d', '-m', '--exclude-standard', '-o', '--directory', '--no-empty-directory'] \r\n[DEBUG  ] Done query repo: ['git', 'ls-files', '--stage', '-z', '-d', '-m', '--exclude-standard', '-o', '--directory', '--no-empty-directory'] \r\n[DEBUG  ] Done GitRepo(/home/me/dl-101/DataLad-101/midterm_project/input).get_content_info(...) \r\n[DEBUG  ] GitRepo(/home/me/dl-101/DataLad-101/midterm_project/input).get_content_info(...) \r\n[DEBUG  ] Query repo: ['git', 'ls-tree', 'HEAD', '-z', '-r', '--full-tree', '-l'] \r\n[DEBUG  ] Done query repo: ['git', 'ls-tree', 'HEAD', '-z', '-r', '--full-tree', '-l'] \r\n[DEBUG  ] Done GitRepo(/home/me/dl-101/DataLad-101/midterm_project/input).get_content_info(...) \r\n[DEBUG  ] GitRepo(/home/me/dl-101/DataLad-101/recordings/longnow).get_content_info(...) \r\n[DEBUG  ] Query repo: ['git', 'ls-files', '--stage', '-z', '-d', '-m', '--exclude-standard', '-o', '--directory', '--no-empty-directory'] \r\n[DEBUG  ] Done query repo: ['git', 'ls-files', '--stage', '-z', '-d', '-m', '--exclude-standard', '-o', '--directory', '--no-empty-directory'] \r\n[DEBUG  ] Done GitRepo(/home/me/dl-101/DataLad-101/recordings/longnow).get_content_info(...) \r\n[DEBUG  ] GitRepo(/home/me/dl-101/DataLad-101/recordings/longnow).get_content_info(...) \r\n[DEBUG  ] Query repo: ['git', 'ls-tree', 'HEAD', '-z', '-r', '--full-tree', '-l'] \r\n[DEBUG  ] Done query repo: ['git', 'ls-tree', 'HEAD', '-z', '-r', '--full-tree', '-l'] \r\n[DEBUG  ] Done GitRepo(/home/me/dl-101/DataLad-101/recordings/longnow).get_content_info(...) \r\nnothing to save, working tree clean\r\n```\r\n\r\nAm I missing something?", "closed_by": {"login": "adswa", "id": 29738718, "node_id": "MDQ6VXNlcjI5NzM4NzE4", "avatar_url": "https://avatars.githubusercontent.com/u/29738718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adswa", "html_url": "https://github.com/adswa", "followers_url": "https://api.github.com/users/adswa/followers", "following_url": "https://api.github.com/users/adswa/following{/other_user}", "gists_url": "https://api.github.com/users/adswa/gists{/gist_id}", "starred_url": "https://api.github.com/users/adswa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adswa/subscriptions", "organizations_url": "https://api.github.com/users/adswa/orgs", "repos_url": "https://api.github.com/users/adswa/repos", "events_url": "https://api.github.com/users/adswa/events{/privacy}", "received_events_url": "https://api.github.com/users/adswa/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4661/timeline", "performed_via_github_app": null}