{"url": "https://api.github.com/repos/datalad/datalad/issues/2926", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/2926/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/2926/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/2926/events", "html_url": "https://github.com/datalad/datalad/issues/2926", "id": 370654123, "node_id": "MDU6SXNzdWUzNzA2NTQxMjM=", "number": 2926, "title": "Bring revolution home?", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-10-16T14:54:46Z", "updated_at": "2019-03-20T15:59:43Z", "closed_at": "2019-03-20T15:59:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "#### What is the problem?\r\nWhat is your plan @mih about the https://github.com/datalad/datalad-revolution ?  To keep it as a separate extension for eternity or bring pieces (or entirety) into datalad codebase for perspective future possibly API breaking release?  \r\nAs I expressed myself, reviewing those changes is not easy and thus largely is not done. As I stated before, IMHO having them even in `master` branch (aiming e.g. for 0.11 release), while possibly still carrying out bugfixing in 0.10.x branch would be IMHO more preferable long term.\r\n\r\nedits to outline steps to see this issue resolved:\r\n- [x] establish `rf-revolution1` branch to contain initial changes\r\n- [x] remove direct mode (#3036) - merge into `rf-revolution1`. WiP\r\n    - [ ] go through leftover '# TODO: RM DIRECT' to see if anything else could/should be removed/refactored\r\n    - [ ] add dedicated tests for handling situations when a repository in direct mode is encountered (directly by AnnexRepo or as a submodule) and assure a consistent/informative blow up\r\n- Workflow for changes propagation\r\n   - [ ] (`rf-revolution1-3rd` branch) bring in revolution code base into the core under 3rd/datalad_revolution (TODO: tools/injest_revolution_code to be reused to suck in the changes)\r\n   - [ ] (`rf-revolution1` branch, to keep merging `rf-revolution1-3rd`) `git mv 3rd/datalad_revolution/datalad_revolution datalad/revolution` (verify that tests pass, needs relative imports)\r\n   - [ ] move out pieces from `datalad/revolution/`  around the core, where needed prefixing with `rev_`\r\n        - [ ] move our `*repo.py` to `core_*repo.py`, while having revolution ones replace ours, while importing the `core_` ones\r\n- [ ] establish rel-0.11 branch to absorb relevant fixes (if possible - submit fixes against that branch when applicable)\r\n- [ ] finalize #3108 and merge into rf-revolution1\r\n- [ ] merge `rf-revolution1` into `master`\r\n- [ ] extend core *Repo classes with the API from revolution\r\n- [ ] investigate mechanism to by default disable \"experimental\" revolution API within core datalad (config setting `datalad.experimental.revolution` to be enabled by extensions before importing API etc?)\r\n- [ ] **compare intentions/usecases/convergence for the API [google doc API Use-cases convergence: 1st Revolution](https://docs.google.com/spreadsheets/d/1bi3AQK5yMKwTA_6FN1oCPnIGASy9VmN8LbARr15XMKE/edit?usp=sharing)**\r\n- [ ] ...\r\n- [ ] make sure no rev_ files, and no Rev classes are left\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/2926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/2926/timeline", "performed_via_github_app": null}