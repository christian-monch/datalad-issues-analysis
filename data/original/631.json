{"url": "https://api.github.com/repos/datalad/datalad/issues/631", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/631/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/631/events", "html_url": "https://github.com/datalad/datalad/issues/631", "id": 164832090, "node_id": "MDU6SXNzdWUxNjQ4MzIwOTA=", "number": 631, "title": "Resolving dataset for toplevel functions in a consistent way", "user": {"login": "bpoldrack", "id": 10498301, "node_id": "MDQ6VXNlcjEwNDk4MzAx", "avatar_url": "https://avatars.githubusercontent.com/u/10498301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpoldrack", "html_url": "https://github.com/bpoldrack", "followers_url": "https://api.github.com/users/bpoldrack/followers", "following_url": "https://api.github.com/users/bpoldrack/following{/other_user}", "gists_url": "https://api.github.com/users/bpoldrack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpoldrack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpoldrack/subscriptions", "organizations_url": "https://api.github.com/users/bpoldrack/orgs", "repos_url": "https://api.github.com/users/bpoldrack/repos", "events_url": "https://api.github.com/users/bpoldrack/events{/privacy}", "received_events_url": "https://api.github.com/users/bpoldrack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/datalad/datalad/milestones/30", "html_url": "https://github.com/datalad/datalad/milestone/30", "labels_url": "https://api.github.com/repos/datalad/datalad/milestones/30/labels", "id": 1992953, "node_id": "MDk6TWlsZXN0b25lMTk5Mjk1Mw==", "number": 30, "title": "Homogeneous path resolution", "description": "This was discussed multiple times. Last in #766.\r\n\r\nA simple solution is to resolve any path _before_ trying to resolve a dataset. This exposes whether a dataset was explicitely provided, and consequently whether relative paths should be interpreted relative to it, and not to CWD.\r\n\r\nExample patch:\r\n\r\nhttps://github.com/mih/datalad/commit/e23e976b093110433accdf5ffd0a263df686e9ff", "creator": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 9, "state": "closed", "created_at": "2016-09-09T09:30:39Z", "updated_at": "2016-10-20T16:50:09Z", "due_on": "2016-09-30T07:00:00Z", "closed_at": "2016-10-20T16:50:09Z"}, "comments": 3, "created_at": "2016-07-11T13:04:24Z", "updated_at": "2016-09-13T16:10:27Z", "closed_at": "2016-09-13T16:10:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is about API consistency and logic.\n\nMost `datalad` commands have a `dataset` parameter and `path` parameter(s). In case no `dataset` was given to operate on, former implementations used to try to derive the required `Dataset` instance from the `path` argument or CWD. While it is useful to derive needed subdatasets from passed paths, I think we should fail, if there is no dataset to start with. That way it is always clear, that any of these functions need to operate on a dataset and this is determined always the same way. For the cmdline, this means, that any datalad command will fail, if CWD is not inside a dataset and neither `-d` nor `-C` is used. Basically just like git itself.\nThe issue rises from things like this:\n\n```\n/no/dataset$> datalad add path/into/ds/file-to-add.dat\n```\n\nWe could do the magic to detect the dataset at `/no/dataset/path/into/ds`, but I don't think we should.\nNevertheless, once we are in a dataset, possibly needed subdatasets will still be derived from the paths.\n\nNote: `-d` might disappear from cmdline as we thought about elsewhere, but that doesn't change anything regarding this topic, I think.\n\nDo we agree on this, @yarikoptic , @hanke ? Any clarification required?\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/631/timeline", "performed_via_github_app": null}