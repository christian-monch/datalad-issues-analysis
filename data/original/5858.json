{"url": "https://api.github.com/repos/datalad/datalad/issues/5858", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5858/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5858/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5858/events", "html_url": "https://github.com/datalad/datalad/issues/5858", "id": 958343180, "node_id": "MDU6SXNzdWU5NTgzNDMxODA=", "number": 5858, "title": "drop: support \"do not drop if used elsewhere\"", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778592, "node_id": "MDU6TGFiZWw2Mzc3ODU5Mg==", "url": "https://api.github.com/repos/datalad/datalad/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": ""}, {"id": 2803278490, "node_id": "MDU6TGFiZWwyODAzMjc4NDkw", "url": "https://api.github.com/repos/datalad/datalad/labels/cmd-drop", "name": "cmd-drop", "color": "FEF2C0", "default": false, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-08-02T17:11:58Z", "updated_at": "2021-08-02T17:11:58Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "git annex [8.20210428-225-gb5f5475ed AKA 8.20210621~125](https://git.kitenet.net/index.cgi/git-annex.git/commit/?id=b5f5475ed6b8bdbf2292e71be84d32009da258db)\r\n  recently resolved [todo](https://git-annex.branchable.com/todo/option_to___96__drop_path__96___to_not_drop___34__all_copies__34__/) to allow to avoid dropping keys which are used in (some) other locations.\r\n\r\nSuch behavior could even argued to be desired to be a default one, or otherwise someone might drop some TBs of data which they still need.  At least it should be interfaced at the `drop` interface level (relates to #5832) .\r\n\r\n<details>\r\n<summary>demo script where I tried it out with annex 8.20210714+git68-g645b045e0-1~ndall+1</summary> \r\n\r\n```shell\r\n#!/bin/bash\r\n\r\nexport PS4='> '\r\nset -eu\r\ncd \"$(mktemp -d ${TMPDIR:-/tmp}/ann-XXXXXXX)\"\r\n\r\nset -x\r\n\r\ngit init \r\ngit annex init\r\n\r\nmkdir -p d{1,2,3}\r\necho dot > .dotfilename\r\necho 123 > d1/f1\r\ncp .dotfilename d1/same-as-dot\r\necho 124 > d1/unique\r\ncp d1/f1 d2/same-as-in-d1\r\necho 125 > d2/unique\r\n\r\ngit annex add --force-large * .dotfilename\r\ngit commit -m 'all initial' -a\r\n\r\ngit status\r\ngit annex list\r\ngit annex drop --force '--excludesamecontent=*' '--excludesamecontent=.*' d1\r\ngit annex list\r\n```\r\n</details>\r\n\r\nresulting in\r\n```\r\n> git annex drop --force '--excludesamecontent=*' '--excludesamecontent=.*' d1\r\ndrop d1/unique ok\r\n(recording state in git...)\r\n> git annex list\r\nhere\r\n|web\r\n||bittorrent\r\n|||\r\nX__ .dotfilename\r\nX__ d1/f1\r\nX__ d1/same-as-dot\r\n___ d1/unique\r\nX__ d2/same-as-in-d1\r\nX__ d2/unique\r\n```\r\ni.e. dropping only d1/unique which is not used anywhere else.  So it seems we can use ` '--excludesamecontent=*' '--excludesamecontent=.*' PATHs`\r\n\r\nnote: not sure if any interaction would happen with our splitting long command lines into multiple... do not remember if we are using batched command for `drop`.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5858/timeline", "performed_via_github_app": null}