{"url": "https://api.github.com/repos/datalad/datalad/issues/4238", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4238/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4238/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4238/events", "html_url": "https://github.com/datalad/datalad/issues/4238", "id": 574797920, "node_id": "MDU6SXNzdWU1NzQ3OTc5MjA=", "number": 4238, "title": "Release management", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-03T16:42:43Z", "updated_at": "2020-03-17T16:19:16Z", "closed_at": "2020-03-17T16:19:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here is what I would consider a sensible release management strategy that is suitable for the workforce we have and is compatible with my personal development pace. Please let me know what you think @yarikoptic @kyleam @bpoldrack @adswa \r\n\r\nFor clarity, I am using the example of an upcoming 0.13.0 release for everything below.\r\n\r\n1. When the time is ripe a `maint/0.13` branch is split from `master`. From this new branch a 0.13.0 release will be made eventually. This event imposes no constraints on further development in `master`. The timing of this event is either *subjective* (enough new stuff in `master`), or *objective* (a certain time time has passed since the last release). Only bug fixes are allowed into `maint/0.13`, ever. They must not be mixed with API changes, beautifications, or minor additions. It is important to maintain this rule to keep development focused on `master` and the \"pressure\" to release high.\r\n\r\n2. All developers now devote a reasonable fraction of their time to manual (i.e. additional) testing of the `maint/0.13` code. This period is kept reasonably short (e.g. one week, but no more than two) to ensure that the testing effort goes towards quality control of an impending release (otherwise efforts will diffuse and commitment vanish). Newly discovered issues are reported and tagged with a `rc-0.13.0` (release-critical) milestone whenever they reflect regressions with respect to the last release. A initial issue \"update changelog for 0.13\" is filed, and tagged accordingly. This milestone is **not** populated with existing issues (except for those with severity *critical*, or regressions with respect to the last release) that would also be nice to get fixed. They could have been fixed before the start of the 0.13 release process, but were not, which is enough evidence that a fix is not considered valuable enough to invest, or is not possible with the given resources. This is not to say that these issues should not get fixed, just that the lack of the fix does not impact a 0.13.0 release.\r\n\r\n3. All fixes merged via PR into `maint/0.13`. When new issues are discovered the `rc-0.13.0` milestone is continued to be populated, according to the criteria listed in (2). It may be necessary to untag originally release-critical issue. Reasons could be systemic problems that are not manageable at the moment, or developers conclude that the relative importance of an individual fix does not outweigh the need for a release.\r\n\r\n4. Whenever the `rc-0.13.0` milestone is empty after the test period in (2), `0.13.0`is tagged in `maint/0.13` and released immediately. There is no need for further deliberation. It will take as long as it takes to fix the release critical bugs.\r\n\r\n5. After a `0.13.0` release, the `maint/0.13` branch is kept and continued using the rules in (1). Strictly for fixes only. Further maintenance releases can be made at any time.\r\n\r\n6. Developers should consider proposing PRs for fixes to be merged in `maint/0.13`. However, this is not mandatory. As long as we have dozens of conceptual/systemic issues open, development focus should be on the next major release, not another maintenance release.", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4238/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 1}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4238/timeline", "performed_via_github_app": null}