{"url": "https://api.github.com/repos/datalad/datalad/issues/5800", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5800/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5800/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5800/events", "html_url": "https://github.com/datalad/datalad/issues/5800", "id": 948479469, "node_id": "MDU6SXNzdWU5NDg0Nzk0Njk=", "number": 5800, "title": "`archive` remote related crash", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778590, "node_id": "MDU6TGFiZWw2Mzc3ODU5MA==", "url": "https://api.github.com/repos/datalad/datalad/labels/severity-normal", "name": "severity-normal", "color": "ff8888", "default": false, "description": "standard severity"}, {"id": 2767256516, "node_id": "MDU6TGFiZWwyNzY3MjU2NTE2", "url": "https://api.github.com/repos/datalad/datalad/labels/cmd-get", "name": "cmd-get", "color": "FEF2C0", "default": false, "description": ""}, {"id": 3184376364, "node_id": "MDU6TGFiZWwzMTg0Mzc2MzY0", "url": "https://api.github.com/repos/datalad/datalad/labels/datalad/archive%20remotes", "name": "datalad/archive remotes", "color": "E8F2DF", "default": false, "description": "Issues related to these non-annexremote implementation"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-07-20T09:39:15Z", "updated_at": "2021-07-21T06:54:47Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n% datalad install ///indi/fcon1000\r\n% cd fcon1000\r\n% datalad get AnnArbor_a/sub04111/anat/mprage_anonymized.nii.gz\r\n[INFO   ] scanning for unlocked files (this may take some time)                                                            \r\ninstall(ok): /tmp/fcon1000/AnnArbor_a (dataset) [Installed subdataset in order to get /tmp/fcon1000/AnnArbor_a/sub04111/anat/mprage_anonymized.nii.gz]\r\n[ERROR  ] 'path' [get.py:__call__:953] (KeyError) \r\n\r\n% git -C AnnArbor_a annex get sub04111/anat/mprage_anonymized.nii.gz \r\nget sub04111/anat/mprage_anonymized.nii.gz (from datalad-archives...) \r\n[INFO] To obtain some keys we need to fetch an archive of size 1.6 GB \r\n\r\n  To obtain some keys we need to fetch an archive of size 1.6 GB\r\n\r\n  TRANSFER failed with no reason given\r\n\r\n  Unable to access these remotes: datalad-archives\r\n\r\n  Maybe add some of these git remotes (git remote add ...):\r\n        ccec1cce-6820-4a71-8041-7abd4d6603ac -- yoh@smaug:/mnt/datasets/datalad/crawl/indi/fcon1000/AnnArbor_a\r\nfailed\r\ngit-annex: get: 1 failed\r\n\r\n      % datalad --dbg get AnnArbor_a/sub04111/anat/mprage_anonymized.nii.gz\r\nTraceback (most recent call last):                                                                                         \r\n  File \"/home/mih/env/datalad-dev/bin/datalad\", line 33, in <module>\r\n    sys.exit(load_entry_point('datalad', 'console_scripts', 'datalad')())\r\n  File \"/home/mih/hacking/datalad/git/datalad/cmdline/main.py\", line 440, in main\r\n    ret = cmdlineargs.func(cmdlineargs)\r\n  File \"/home/mih/hacking/datalad/git/datalad/interface/base.py\", line 783, in call_from_parser\r\n    ret = list(ret)\r\n  File \"/home/mih/hacking/datalad/git/datalad/interface/utils.py\", line 396, in generator_func\r\n    for r in _process_results(\r\n  File \"/home/mih/hacking/datalad/git/datalad/interface/utils.py\", line 574, in _process_results\r\n    for res in results:\r\n  File \"/home/mih/hacking/datalad/git/datalad/distribution/get.py\", line 953, in __call__\r\n    if res['path'] not in content_by_ds:\r\nKeyError: 'path'\r\n\r\n> /home/mih/hacking/datalad/git/datalad/distribution/get.py(953)__call__()\r\n-> if res['path'] not in content_by_ds:\r\n(Pdb) p res\r\n{'type': 'file', 'logger': <Logger datalad.distribution.get (INFO)>, 'refds': '/tmp/fcon1000', 'status': 'error'}\r\n```\r\n\r\nI can replicate the crash with `master` and `maint`. Independent of whether the download failure is justified, the crash is not. The generated result is broken, not `action`, no `path`, no `message`, despite being an error.", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5800/timeline", "performed_via_github_app": null}