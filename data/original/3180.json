{"url": "https://api.github.com/repos/datalad/datalad/issues/3180", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/3180/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/3180/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/3180/events", "html_url": "https://github.com/datalad/datalad/pull/3180", "id": 414388089, "node_id": "MDExOlB1bGxSZXF1ZXN0MjU2MTEwMTQ5", "number": 3180, "title": "ENH/BF/RF: GitHub authentication", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/datalad/datalad/milestones/61", "html_url": "https://github.com/datalad/datalad/milestone/61", "labels_url": "https://api.github.com/repos/datalad/datalad/milestones/61/labels", "id": 4231652, "node_id": "MDk6TWlsZXN0b25lNDIzMTY1Mg==", "number": 61, "title": "Release 0.11.5", "description": "", "creator": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "closed", "created_at": "2019-04-15T15:34:28Z", "updated_at": "2019-06-26T14:04:55Z", "due_on": null, "closed_at": "2019-06-26T14:04:55Z"}, "comments": 16, "created_at": "2019-02-26T01:36:31Z", "updated_at": "2019-05-07T18:01:50Z", "closed_at": "2019-05-07T15:19:27Z", "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/3180", "html_url": "https://github.com/datalad/datalad/pull/3180", "diff_url": "https://github.com/datalad/datalad/pull/3180.diff", "patch_url": "https://github.com/datalad/datalad/pull/3180.patch"}, "body": "This pull request fixes #2004 , fixes #2005, and I also think it might fix #3126 if @effigies says so ;-)\r\n\r\nThis pull request proposes to do a more thorough pass over possibly available github authentication mechanisms to achieve the goal.  I have tried to maintain currently present \"non standard\" handling of authentication for github:\r\n\r\n- token - we do not store those in the credentials store, but rely on it/them being present in the (git) config.  But since multiple tokens could be defined (globally, and then within a dataset), we might need to consider multiple (I somehow get 3 values with 2 unique ones)\r\n- user/password could be provided in the command line (we don't do that for any other remote etc)\r\n\r\nchange in behavior\r\n- provided in cmdline user/password are not stored in the credential store (and thus also not deleted - so no dances with removing some credential if smth doesn't work)\r\n\r\nadditional changes\r\n- `.ui.question` has now `repeat` option (defaults to `None` to maintain previous behavior) to be able to force or disable repeated entry for a hidden value.  In my case I wanted to get rid of it -- entering 2FA token twice is really not called for\r\n- `.utils.unique` got option `reverse=False` which, if set to `True`, would return unique values while maintaining the order from the back (not from the front as originally)\r\n\r\noverall now for `create-sibling-github`:\r\n\r\n- multiple ways to authenticate are considered - we pretty much loop until we succeed by offering user to enter new user/password or until we really fail\r\n- unless both user and password are provided in command line, tokens are considered first (if user/password are provided -- no stored tokens are considered)\r\n- if user (no password) is provided, only the token(s) associated with that user will be considered\r\n- regular user/password credential is considered next, if fails, asked to re-enter\r\n- if it is detected that user/password authentication leads to 2FA error, we offer to generate token (with \"user\" and \"repo\" permissions) and store it in config (\"global\", \"local\", no \"dataset) (or not store at all - empty value)\r\n   - we only alert/error out if a token with our note (DataLad) already exists\r\n- if session is non-interactive, we don't do much really, and I guess with 2FA even if user/password are provided - we would simply fail. So token must be set via config first then\r\n\r\nIn addition to authentication related changes\r\n\r\n### TODOs\r\n- [x] Move all the `_` helper functions which now also `import github as gh` into `datalad.support.github_`. I kept that in-place for now with hope to still have some meaningful `diff`\r\n- [x] make it possible to avoid reentering the login name if it was specified (see U1 below)\r\n- [ ] consider reverting aforementioned change in behavior that credentials aren't stored if provided in the cmdline.  May be there should be `ui.question` to either do it or not and if not interactive - an INFO msg.\r\n- [x] Try to come up with at least some rudimentary test for all the authentication logic\r\n\r\nI would really appreciate any attempts to use it - once again, I have tried it only in a few scenarios and there were no and remain no tests for all the logic there.\r\n\r\n**U1\r\n\r\n```shell\r\n$> datalad create-sibling-github --github-login yarikoptic-test --name gh-yarikoptic-test shablona\r\nYou need to authenticate with 'yarikoptic-test@github' credentials. https://github.com/login provides information on how to gain access\r\nuser: \r\n```", "closed_by": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/3180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/3180/timeline", "performed_via_github_app": null}