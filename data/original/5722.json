{"url": "https://api.github.com/repos/datalad/datalad/issues/5722", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5722/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5722/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5722/events", "html_url": "https://github.com/datalad/datalad/pull/5722", "id": 915507443, "node_id": "MDExOlB1bGxSZXF1ZXN0NjY1MzE0ODQ1", "number": 5722, "title": "WiP Q&D AnnexRepo.add_ batched (by default) if more than a single file passed", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-06-08T21:04:44Z", "updated_at": "2021-06-09T08:40:46Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/5722", "html_url": "https://github.com/datalad/datalad/pull/5722", "diff_url": "https://github.com/datalad/datalad/pull/5722.diff", "patch_url": "https://github.com/datalad/datalad/pull/5722.patch"}, "body": "If ever finished, Closes #5721 \r\n\r\nIf to proceed\r\n- ideally some hero of the Runners, like @christian-monch  , would just RF/fold that BatchedAnnexes deep into the guts of `_call_annex*` so reduce duplication etc, but it shouldn't be the goal of this PR\r\n- [x] see if any positive effect on OSX with bleeding edge annex in relation to [recent regression on our tests on OSX](https://git-annex.branchable.com/bugs/significant_performance_regression_impacting_datal/#comment-4df4242f85746baef8afd32e0632c37c)\r\n   - yeap, seems to mitigate it well, see the git-annex issue above for fresh comments on that.\r\n- [x] no effect on benchmarks... if anything only `0.92  plugins.addurls.addurls1.time_addurls('*')` is happier \r\n- [ ] see what fails and either it could be addressed here or there is some roadblock\r\n- [ ] I think added `batch=None` logic handling is sound (taken from `get_file_key`), so I would just keep it but could be improved to just reuse a batched `add` if already one running.\r\n- [ ] interface that `total_nbytes` (I did not even look into what it is about)", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5722/timeline", "performed_via_github_app": null}