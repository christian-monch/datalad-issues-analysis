{"url": "https://api.github.com/repos/datalad/datalad/issues/2934", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/2934/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/2934/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/2934/events", "html_url": "https://github.com/datalad/datalad/issues/2934", "id": 371874544, "node_id": "MDU6SXNzdWUzNzE4NzQ1NDQ=", "number": 2934, "title": "`run` helper to fake the actual execution part?", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-19T09:21:23Z", "updated_at": "2018-11-01T03:58:29Z", "closed_at": "2018-11-01T03:58:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In https://github.com/datalad/datalad-htcondor we can compute results via execution on a cluster system. These results materialize back on localhost in the shape of a tarball (but that specific form is not relevant here). Other than the fact the execution happened remotely the Git record of this action should not differ (too much) from the plain `run` equivalent.\r\n\r\nFor example, when a singularity container based execution is performed, the results should be just as re-runnable locally, even if the original results were obtained from a cluster job.\r\n\r\nI was thinking that it would be nice to have the actual \"record\" part of `run` be RF'ed such that one can give the original arguments as if `run` was called normally, but inputs are only obtained when a dedicated additional flag is given, and outputs are unlocked, an external mechanism now drops in the results, and then `run` takes over again and makes the record as if `run` would have orchestrated the entire thing.\r\n\r\nOf course it doesn't actually have to be `run` that does all that, and there is no need to expose this functionality as a dedicated cmdline tool -- (two) python functions would be just fine.", "closed_by": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/2934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/2934/timeline", "performed_via_github_app": null}