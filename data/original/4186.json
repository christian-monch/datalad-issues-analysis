{"url": "https://api.github.com/repos/datalad/datalad/issues/4186", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4186/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4186/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4186/events", "html_url": "https://github.com/datalad/datalad/issues/4186", "id": 569468084, "node_id": "MDU6SXNzdWU1Njk0NjgwODQ=", "number": 4186, "title": "\"Export\" repository to non-git remotes", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 385404347, "node_id": "MDU6TGFiZWwzODU0MDQzNDc=", "url": "https://api.github.com/repos/datalad/datalad/labels/for%20our%20information", "name": "for our information", "color": "fbca04", "default": false, "description": "Announcement-type issues (possibly inconsequential)"}, {"id": 1782635375, "node_id": "MDU6TGFiZWwxNzgyNjM1Mzc1", "url": "https://api.github.com/repos/datalad/datalad/labels/severity-none", "name": "severity-none", "color": "ffffff", "default": false, "description": "inconsequential (or FOI) reports"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-23T09:37:42Z", "updated_at": "2020-02-25T06:08:07Z", "closed_at": "2020-02-25T06:08:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Exploration of possible formats to export repositories to non-git-compatible locations. Scenarios could be:\r\n\r\n- archive at Zenodo\r\n- collaborate via DropBox/GDrive #4183 \r\n- publish to figshare/... (but \"clonable\" with history info)\r\n\r\nAll examples use the DataLad code repo as a stand-in for a relatively rich history.\r\n\r\n### Candidate format: `fast-import`-compatible\r\n\r\nPros\r\n- plain-text format to describe VCS history\r\n- somewhat independent from Git\r\n- minimizes the dependency on particular software pieces and version, more suitable for \"long-term\" archive scenarios\r\n- minimizes storage demands due to effective compression\r\n\r\nCons\r\n- needs to be imported in a repository in order to perform \"remote operations\" (e.g. figure out which refs were updated on push)\r\n\r\n```\r\n% time git -C src fast-export --all --reencode=yes --signed-tags=verbatim > all.stream\r\ngit -C src fast-export --all --reencode=yes --signed-tags=verbatim >   2.35s user 0.38s system 99% cpu 2.733 total\r\n% time xz -c < all.stream > all.xz\r\nxz -c < all.stream > all.xz  95.44s user 0.24s system 99% cpu 1:35.85 total\r\n% time gzip -c < all.stream > all.gz\r\ngzip -c < all.stream > all.gz  14.82s user 0.14s system 99% cpu 15.035 total\r\n% ll all.*\r\n-rw-rw-r-- 1 mih mih  93M Feb 23 10:21 all.gz\r\n-rw-rw-r-- 1 mih mih 383M Feb 23 10:18 all.stream\r\n-rw-rw-r-- 1 mih mih 8.7M Feb 23 10:20 all.xz\r\n% time sh -c 'git -C empty init --bare && xzcat all.xz | (cd empty && git fast-import)' \r\n...\r\nsh -c   24.93s user 0.84s system 99% cpu 26.010 total\r\n% time sh -c 'git -C empty init --bare && zcat all.gz | (cd empty && git fast-import)'\r\n...\r\nsh -c   26.74s user 0.68s system 111% cpu 24.510 total\r\n```\r\n\r\n### Candidate format: bare git repo archive\r\n\r\nPros\r\n- fast\r\n- after fast unpacking, immediately usable format for arbitrary reporting and manipulation with the full range of Git tools\r\n\r\nCons\r\n- complex compound format, essentially requires Git to work with\r\n- utility of archived repositories is more dependent on availability of compatible Git software in the future\r\n- higher storage demand\r\n\r\n```\r\n% time git clone --mirror src clone\r\nCloning into bare repository 'clone'...\r\ndone.\r\ngit clone --mirror src clone  0.04s user 0.02s system 47% cpu 0.127 total\r\n% time git -C clone gc --aggressive\r\n...\r\ngit -C clone gc --aggressive  62.27s user 0.45s system 310% cpu 20.225 total\r\n% time 7z a clone_uncompressed.7z clone -mx0\r\n...\r\nArchive size: 15029079 bytes (15 MiB)\r\n7z a clone_uncompressed.7z clone -mx0  0.01s user 0.03s system 99% cpu 0.045 total\r\n\r\n% time 7z a clone.7z clone\r\n...\r\nArchive size: 12738529 bytes (13 MiB)\r\n7z a clone.7z clone  4.30s user 0.13s system 171% cpu 2.578 total\r\n\r\n# just 7z without an intermediate `git gc`\r\n% time 7z a clone.7z clone\r\n...\r\nArchive size: 34323804 bytes (33 MiB)\r\n7z a clone.7z clone  12.20s user 0.18s system 195% cpu 6.349 total\r\n```\r\n\r\n### Conclusion\r\n\r\n- both formats are viable\r\n- the text-based `fast-import` format is more suitable for long-term preservation\r\n- a bare repo archive is faster to work with, and more suitable for push/pull scenarios", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4186/timeline", "performed_via_github_app": null}