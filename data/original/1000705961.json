{"url": "https://api.github.com/repos/datalad/datalad/issues/5995", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5995/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5995/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5995/events", "html_url": "https://github.com/datalad/datalad/issues/5995", "id": 1000705961, "node_id": "I_kwDOANZqws47pY-p", "number": 5995, "title": "HTTPDownloader not yet working with redirected http-auth", "user": {"login": "bpoldrack", "id": 10498301, "node_id": "MDQ6VXNlcjEwNDk4MzAx", "avatar_url": "https://avatars.githubusercontent.com/u/10498301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpoldrack", "html_url": "https://github.com/bpoldrack", "followers_url": "https://api.github.com/users/bpoldrack/followers", "following_url": "https://api.github.com/users/bpoldrack/following{/other_user}", "gists_url": "https://api.github.com/users/bpoldrack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpoldrack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpoldrack/subscriptions", "organizations_url": "https://api.github.com/users/bpoldrack/orgs", "repos_url": "https://api.github.com/users/bpoldrack/repos", "events_url": "https://api.github.com/users/bpoldrack/events{/privacy}", "received_events_url": "https://api.github.com/users/bpoldrack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-09-20T08:33:03Z", "updated_at": "2021-09-21T16:21:33Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "While working on providing http-auth testing via enhanced docker image from https://github.com/datalad-tester/docker-ssh-target, I looked into `download_url` in order to combine the test setup with an actually meaningful test (and possibly necessary first fix).\r\n\r\nThe setup in the docker I have reflects the setup for RIA stores we use at INM-7: HTTP is redirected to HTTPS. Against that setup `download_url` works fine if pointed to the HTTPS address. It fails with the redirected HTTP address, though. That made me stumble upon several questionable aspects:\r\n\r\nThe downloader actually sends two requests to the same URL: A POST request to establish authentication and a subsequent GET request to actually download. Since with simple default apache serving files the response to the POST request already contains the content of the file, the GET request seems superfluous (or the other way around depending on how you look at it).\r\n\r\n- Leading to the first question in this regard: Under what circumstances is a dedicated authentication request actually needed? We use `requests.Session` object and it seems to me, that the authenticator should be assigned to the `Session` (instead of being passed to the request call) and we can simply go for an authenticated GET. Why is there a POST to begin with? Was that written with some kind of webservice in mind, that would actually require that? May be in context of the crawler? @yarikoptic any recollection? It doesn't seem to make sense to me, since this is happening within the http downloader processing a single URL.\r\n\r\n- That the redirected download fails is due to the fact, that we auto-follow a redirect for the initial POST request (which in this case is all we need and that succeeds), but we do not do that for the subsequent GET (which then therefore is what fails). `requests` does strip the credentials from redirected request, since it's considered a security hazard to auto-send credentials to a redirect. Now, this raises two questions: Should we really do that automatically for the POST (as we do right now)? If so, why not do it with the GET then? It's the exact same URL. If we trust the one request we can trust the other one, I think. If we shouldn't do it at all, then what could be our strategy to deal with such server setups? Asking for confirmation on every redirect? Would users even know whether or not that's fine? What could a config look like, that allows to authenticate against the redirected URL? Just the target URL that is whitelisted for being the target of such a redirect? Or does it make a difference where we are redirected from? (I don't think so).\r\n\r\n- Finally, when we follow the redirect for the initial POST, what we send to the new target suddenly becomes a GET. Why is that? It makes it even more weird to send this as mere authentication establishing request, only to now have the intended download request to be *completely* identical (with POST/GET being the only difference to begin with - that's now gone, too).\r\n\r\n\r\n\r\nIt seems to me, what we should do is:\r\n    - rip out the authentication request, just have an authenticated GET. If the `Session` object persists, we'd still have the same effect for subsequent downloads from the same host\r\n    - make following redirects conditional on config/user interaction if authentication is required (to be decided: What does the config look like?)\r\n\r\n\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5995/timeline", "performed_via_github_app": null}