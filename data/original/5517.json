{"url": "https://api.github.com/repos/datalad/datalad/issues/5517", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5517/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5517/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5517/events", "html_url": "https://github.com/datalad/datalad/pull/5517", "id": 835166097, "node_id": "MDExOlB1bGxSZXF1ZXN0NTk1ODYxNzcz", "number": 5517, "title": "NF: foreach", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3049454381, "node_id": "MDU6TGFiZWwzMDQ5NDU0Mzgx", "url": "https://api.github.com/repos/datalad/datalad/labels/minor", "name": "minor", "color": "f1a60e", "default": false, "description": "Increment the minor version when merged"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2021-03-18T19:19:06Z", "updated_at": "2021-10-12T21:05:36Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/5517", "html_url": "https://github.com/datalad/datalad/pull/5517", "diff_url": "https://github.com/datalad/datalad/pull/5517.diff", "patch_url": "https://github.com/datalad/datalad/pull/5517.patch"}, "body": "Closes #749 \r\n\r\n- amalgamation of `subdatasets` and `run`\r\n- supports parallelization (threads, so might be not as efficient for \"Python\" code) via `-J|--jobs` using the same ConsumerProducer construct as the rest\r\n- supports running external commands or eval'ing Python statements (the same placeholders passed in)\r\n- different from `subdatasets` in that it would also operate on the current (`-d`) refds unless `--subdatasets-only`:\r\n  - reason: while using `git submodules` as quick and dirty workaround I more often wanted to include the top dataset than not\r\n- different from `run` in that output is swallowed (and passed in yielded records + shortened in `message`) unless `-p|--passthrough` is given:  \r\n  - reason: especially in parallel mode dumping output to screen isn't very useful\r\n\r\nPotential future enhancements:\r\n- custom renderer, e.g. groupping outputs even if received in parallel (thus should not be printed in `throughput` mode)\r\n\r\nExamples: well -- go wild with anything you would like to throw at it... e.g. could be used as a temp \"parallelization\" helper for commands which do not yet have parallelization \"built-in\".  Use `--bottomup` where you need to go from the bottom, and should still be safe in that super-dataset is not considered until all subdatasets are handled.\r\n\r\nTODOs:\r\n- [x] seek and account for feedback\r\n   - [x] add support for `cmd`  to be a python function?\r\n- [x] decide on what to do about chdir'ing for python eval/exec since cannot do in parallel: see \"can't chpwd for Python eval/exec when parallelizing using threads\"\r\n- [ ] expand DOC\r\n- [x] address TODO for avoiding log progress if passthrough\r\n- [ ] address or remove other TODOs in the diff\r\n- [ ] add tests\r\n- [x] Address failures\r\n   - [x] \"I/O operation on closed file\" -- we can't do capture in parallel threads due to use of thread-unsafe swallow_outputs\r\n- [x] doc: add foreach to a toctree\r\n- [ ] thread safe output by the runner protocol in pass-through and parallel mode? (or should not bother?) see NB in #5641 \r\n- Changes required or desired for this functionality\r\n  - ~~#5640 (required to make --fulfilled to default to True)~~ - made it into non-bool `--state {present|absent|any}`\r\n  - #5642 - just desired\r\n\r\nFails\r\n\r\n<details>\r\n<summary>I/O operation on closed file. </summary> \r\n\r\n```shell\r\n$> datalad foreach -d ~/datalad/openneuro --fulfilled true --cmd-type exec  -J12 'import os; same=ds.path == os.getcwd(); print(f\"{same}  {ds.path}: {os.getcwd()}\")'\r\nforeach(ok): /home/yoh/datalad/openneuro (dataset) [{'stdout': 'True  /home/yoh/datalad/openneuro: /home/yoh/datalad/openneuro\\n', 'stderr': ''}]                                                                    \r\n[ERROR  ] I/O operation on closed file. [dialog.py:message:78] (ValueError)                                                                                                                                          \r\nforeach:  17%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f \r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>can't chpwd for Python eval/exec when parallelizing using threads</summary> \r\n\r\n```shell\r\n(git)lena:~datalad/datalad-master[nf-foreach]git\r\n$> datalad foreach -d ~/datalad/openneuro --fulfilled true --cmd-type exec -J12 --s-o pass-through 'import os, random, time; time.sleep(random.randint(0, 10)/10.); same=ds.path == os.getcwd(); print(f\"{same}  {ds.path}: {os.getcwd()}\")' | cat\r\nTrue  /home/yoh/datalad/openneuro: /home/yoh/datalad/openneuro\r\nforeach(ok): /home/yoh/datalad/openneuro (dataset)\r\nTrue  /home/yoh/datalad/openneuro/ds000006: /home/yoh/datalad/openneuro/ds000006\r\nforeach(ok): /home/yoh/datalad/openneuro/ds000006 (dataset)\r\nFalse  /home/yoh/datalad/openneuro/ds000003: /home/yoh/datalad/openneuro/ds000009\r\nforeach(ok): /home/yoh/datalad/openneuro/ds000003 (dataset)\r\nFalse  /home/yoh/datalad/openneuro/ds000105: /home/yoh/proj/datalad/datalad-master\r\nforeach(ok): /home/yoh/datalad/openneuro/ds000105 (dataset)\r\nFalse  /home/yoh/datalad/openneuro/ds000009: /home/yoh/datalad/openneuro/ds000008\r\nforeach(ok): /home/yoh/datalad/openneuro/ds000009 (dataset)\r\nFalse  /home/yoh/datalad/openneuro/ds000002: /home/yoh/datalad/openneuro/ds003027\r\nFalse  /home/yoh/datalad/openneuro/ds003027: /home/yoh/datalad/openneuro/ds000005\r\nforeach(ok): /home/yoh/datalad/openneuro/ds000002 (dataset)\r\nforeach(ok): /home/yoh/datalad/openneuro/ds003027 (dataset)\r\nFalse  /home/yoh/datalad/openneuro/ds000005: /home/yoh/datalad/openneuro/ds000007\r\nFalse  /home/yoh/datalad/openneuro/ds000008: /home/yoh/proj/datalad/datalad-master\r\nforeach(ok): /home/yoh/datalad/openneuro/ds000005 (dataset)\r\nforeach(ok): /home/yoh/datalad/openneuro/ds000008 (dataset)\r\nFalse  /home/yoh/datalad/openneuro/ds001785: /home/yoh/datalad/openneuro/ds000001\r\nforeach(ok): /home/yoh/datalad/openneuro/ds001785 (dataset)\r\nFalse  /home/yoh/datalad/openneuro/ds000001: /home/yoh/datalad/openneuro/ds000105\r\nFalse  /home/yoh/datalad/openneuro/ds000007: /home/yoh/datalad/openneuro/ds000002\r\nforeach(ok): /home/yoh/datalad/openneuro/ds000001 (dataset)\r\nforeach(ok): /home/yoh/datalad/openneuro/ds000007 (dataset)\r\n```\r\n</details>\r\n- [ ] fix up test in -deprecated where `published` was moved\r\n\r\n<details>\r\n<summary>relevant diff </summary> \r\n\r\n```shell\r\n$> git diff master...HEAD -- datalad/distribution/tests/test_publish.py\r\ndiff --git a/datalad/distribution/tests/test_publish.py b/datalad/distribution/tests/test_publish.py\r\nindex b6dfecc98..6949bbc58 100644\r\n--- a/datalad/distribution/tests/test_publish.py\r\n+++ b/datalad/distribution/tests/test_publish.py\r\n@@ -88,7 +88,7 @@ def test_invalid_call(origin, tdir):\r\n     dummy = Dataset(tdir).create()\r\n     dummy_sub = dummy.create('sub')\r\n     dummy_sub.uninstall()\r\n-    assert_in('sub', dummy.subdatasets(fulfilled=False, result_xfm='relpaths'))\r\n+    assert_in('sub', dummy.subdatasets(state='absent', result_xfm='relpaths'))\r\n     # now an explicit call to publish the unavailable subdataset\r\n     assert_result_count(\r\n         dummy.publish('sub', on_failure='ignore'),\r\n\r\n```\r\n</details>", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5517/timeline", "performed_via_github_app": null}