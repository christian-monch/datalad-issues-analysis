{"url": "https://api.github.com/repos/datalad/datalad/issues/4801", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4801/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4801/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4801/events", "html_url": "https://github.com/datalad/datalad/issues/4801", "id": 673381698, "node_id": "MDU6SXNzdWU2NzMzODE2OTg=", "number": 4801, "title": "GitRepo.get_hexsha() can be extremely slow (6min)", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778590, "node_id": "MDU6TGFiZWw2Mzc3ODU5MA==", "url": "https://api.github.com/repos/datalad/datalad/labels/severity-normal", "name": "severity-normal", "color": "ff8888", "default": false, "description": "standard severity"}, {"id": 289240596, "node_id": "MDU6TGFiZWwyODkyNDA1OTY=", "url": "https://api.github.com/repos/datalad/datalad/labels/performance", "name": "performance", "color": "f4b2d8", "default": false, "description": "Improve performance of an existing feature"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-05T09:07:31Z", "updated_at": "2020-08-06T21:21:30Z", "closed_at": "2020-08-06T21:21:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "TL;DR: Should we switch from `git-show` to `git-log` for `GitRepo.format_commit()`. Or is there a way to further limit processing in `git-show` beyond `--no-patch`.\r\n\r\nI discovered this via a `datalad status` call, which I thought would be hanging.\r\n\r\n<details>\r\n<summary>Here is the log level 1 output</summary>\r\n\r\n```\r\n% dl -l 1 status -e commit --untracked no -t raw\r\n[DEBUG  ] Command line args 1st pass. Parsed: Namespace() Unparsed: ['status', '-e', 'commit', '--untracked', 'no', '-t', 'raw']                                                          [DEBUG  ] Discovering plugins                                                                [Level 5] Importing module datalad.core.local.status\r\n[DEBUG  ] Building doc for <class 'datalad.core.local.status.Status'>                        [Level 5] Finished setup_parser                   \r\n[DEBUG  ] Parsing known args among ['/usr/bin/datalad', '-l', '1', 'status', '-e', 'commit',\r\n'--untracked', 'no', '-t', 'raw']                                      \r\n[Level 5] Running: ['git', '--git-dir=', 'config', '-z', '-l', '--show-origin']             \r\n[Level 8] Finished running ['git', '--git-dir=', 'config', '-z', '-l', '--show-origin'] with\r\nstatus 0                                                                                     \r\n[Level 2] Entered eval_func for <function Status.__call__ at 0x7f119481f378>                \r\n[DEBUG  ] Determined class of decorated function: <class 'datalad.core.local.status.Status'>\r\n[Level 2] Returning generator_func from eval_func for <class 'datalad.core.local.status.Statu\r\ns'>\r\n[Level 5] Parsed ri /data/project/enki/processed into fields {'path': '/data/project/enki/pro\r\ncessed', 'scheme': '', 'username': '', 'password': '', 'hostname': '', 'port': '', 'query': '\r\n', 'fragment': ''}\r\n[Level 5] Detected file ri\r\n[DEBUG  ] Resolved dataset for status reporting: /data/project/enki/processed\r\n[Level 5] Detected <class 'datalad.support.annexrepo.AnnexRepo'> at /data/project/enki/processed\r\n[Level 5] Running: ['git', '--git-dir=', 'config', '-z', '-l', '--show-origin']\r\n[Level 8] Finished running ['git', '--git-dir=', 'config', '-z', '-l', '--show-origin'] with status 0\r\n[Level 5] Found 1 previous connections\r\n[Level 5] Running: ['git', 'config', '-z', '-l', '--show-origin', '--file', '/data/project/enki/processed/.datalad/config']\r\n[Level 8] Finished running ['git', 'config', '-z', '-l', '--show-origin', '--file', '/data/project/enki/processed/.datalad/config'] with status 0\r\n[Level 5] Running: ['git', 'config', '-z', '-l', '--show-origin']\r\n[Level 8] Finished running ['git', 'config', '-z', '-l', '--show-origin'] with status 0\r\n[Level 5] Parsed ri ssh://bulk1.htc.inm7.de/ds/enki/srv/669/7c1b8-b617-11ea-b713-b4969157768c\r\n into fields {'path': '/ds/enki/srv/669/7c1b8-b617-11ea-b713-b4969157768c', 'scheme': 'ssh',\r\n'username': '', 'password': '', 'hostname': 'bulk1.htc.inm7.de', 'port': '', 'query': '', 'fr\r\nagment': ''}\r\n[Level 5] Detected url ri                                                           [22/9047]\r\n[Level 5] Parsed ri git@jugit.fz-juelich.de:inm7/datasets/enki-processed.git into fields {'pa\r\nth': 'git@jugit.fz-juelich.de:inm7/datasets/enki-processed.git', 'scheme': '', 'username': ''\r\n, 'password': '', 'hostname': '', 'port': '', 'query': '', 'fragment': ''}\r\n[Level 5] Detected ssh ri\r\n[DEBUG  ] query AnnexRepo(/data/project/enki/processed).diffstatus() for paths: None\r\n[Level 5] Running: ['git', 'show', '-z', '--no-patch', '--format=%H', '--']\r\n[Level 8] Finished running ['git', 'show', '-z', '--no-patch', '--format=%H', '--'] with status 0\r\n[DEBUG  ] AnnexRepo(/data/project/enki/processed).get_content_info(...)\r\n[DEBUG  ] Query repo: ['git', 'ls-files', '--stage', '-z', '-d', '-m', '--exclude-standard']\r\n[Level 5] Running: ['git', 'ls-files', '--stage', '-z', '-d', '-m', '--exclude-standard']\r\n[Level 8] Finished running ['git', 'ls-files', '--stage', '-z', '-d', '-m', '--exclude-standard'] with status 0\r\n[DEBUG  ] Done query repo: ['git', 'ls-files', '--stage', '-z', '-d', '-m', '--exclude-standard']\r\n[DEBUG  ] Done AnnexRepo(/data/project/enki/processed).get_content_info(...)\r\n[Level 5] Running: ['git', 'ls-files', '-z', '-m']\r\n[Level 8] Finished running ['git', 'ls-files', '-z', '-m'] with status 0\r\n[DEBUG  ] AnnexRepo(/data/project/enki/processed).get_content_info(...)\r\n[DEBUG  ] Query repo: ['git', 'ls-tree', 'HEAD', '-z', '-r', '--full-tree', '-l']\r\n[Level 5] Running: ['git', 'ls-tree', 'HEAD', '-z', '-r', '--full-tree', '-l']\r\n[Level 8] Finished running ['git', 'ls-tree', 'HEAD', '-z', '-r', '--full-tree', '-l'] with status 0\r\n[DEBUG  ] Done query repo: ['git', 'ls-tree', 'HEAD', '-z', '-r', '--full-tree', '-l']\r\n[DEBUG  ] Done AnnexRepo(/data/project/enki/processed).get_content_info(...)\r\n[Level 5] Parsed ri /data/project/enki/processed/code/pipelines into fields {'path': '/data/p\r\nroject/enki/processed/code/pipelines', 'scheme': '', 'username': '', 'password': '', 'hostnam\r\ne': '', 'port': '', 'query': '', 'fragment': ''}\r\n[Level 5] Detected file ri\r\n[Level 5] Running: ['git', 'show', '-z', '--no-patch', '--format=%H', '--']\r\n[Level 8] Finished running ['git', 'show', '-z', '--no-patch', '--format=%H', '--'] with status 0\r\n[Level 5] Parsed ri /data/project/enki/processed/fmriprep into fields {'path': '/data/project\r\n/enki/processed/fmriprep', 'scheme': '', 'username': '', 'password': '', 'hostname': '', 'por\r\nt': '', 'query': '', 'fragment': ''}\r\n[Level 5] Detected file ri\r\n[Level 5] Running: ['git', 'show', '-z', '--no-patch', '--format=%H', '--']\r\n[Level 8] Finished running ['git', 'show', '-z', '--no-patch', '--format=%H', '--'] with status 0\r\n[Level 5] Parsed ri /data/project/enki/processed/freesurfer into fields {'path': '/data/proje\r\nct/enki/processed/freesurfer', 'scheme': '', 'username': '', 'password': '', 'hostname': '',\r\n'port': '', 'query': '', 'fragment': ''}\r\n[Level 5] Detected file ri\r\n[Level 5] Running: ['git', 'show', '-z', '--no-patch', '--format=%H', '--']\r\n\r\n... and now it hangs\r\n```\r\n\r\n</details>\r\n\r\nEssentially `[Level 5] Running: ['git', 'show', '-z', '--no-patch', '--format=%H', '--'] ` does not seem to return.\r\n\r\n<details>\r\n<summary>Traceback when killed while hanging (runner is waiting for the process to end, it seems)</summary>\r\n\r\n```\r\nInterrupted by user while doing magic: KeyboardInterrupt() [selectors.py:select:415] [2/9657]\r\nTraceback (most recent call last):            \r\n  File \"/usr/bin/datalad\", line 8, in <module>                                              \r\n    main()\r\n  File \"/usr/lib/python3/dist-packages/datalad/cmdline/main.py\", line 521, in main\r\n    ret = cmdlineargs.func(cmdlineargs)\r\n  File \"/usr/lib/python3/dist-packages/datalad/interface/base.py\", line 786, in call_from_par\r\nser\r\n    ret = list(ret)\r\n  File \"/usr/lib/python3/dist-packages/datalad/interface/utils.py\", line 413, in generator_fu\r\nnc\r\n    allkwargs):\r\n  File \"/usr/lib/python3/dist-packages/datalad/interface/utils.py\", line 552, in _process_res\r\nults\r\n    for res in results:\r\n  File \"/usr/lib/python3/dist-packages/datalad/core/local/status.py\", line 419, in __call__\r\n    content_info_cache):\r\n  File \"/usr/lib/python3/dist-packages/datalad/core/local/status.py\", line 121, in _yield_sta\r\ntus\r\n    _cache=cache)\r\n  File \"/usr/lib/python3/dist-packages/datalad/support/gitrepo.py\", line 3736, in diffstatus\r\n    subrepo_commit = subrepo.get_hexsha()\r\n  File \"/usr/lib/python3/dist-packages/datalad/support/gitrepo.py\", line 1747, in get_hexsha\r\n    commitish)\r\n  File \"/usr/lib/python3/dist-packages/datalad/support/gitrepo.py\", line 1718, in format_comm\r\nit\r\n    '', cmd, expect_stderr=True, expect_fail=True)\r\n  File \"/usr/lib/python3/dist-packages/datalad/support/gitrepo.py\", line 328, in newfunc\r\n    result = func(self, files_new, *args, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/datalad/support/gitrepo.py\", line 2058, in _git_custom\r\n_command\r\n    expect_fail=expect_fail)\r\n  File \"/usr/lib/python3/dist-packages/datalad/cmd.py\", line 143, in run_gitcommand_on_file_l\r\nist_chunks\r\n    results.append(func(cmd, *args, **kwargs))\r\n  File \"/usr/lib/python3/dist-packages/datalad/cmd.py\", line 1141, in run\r\n    *args, **kwargs)\r\n  File \"/usr/lib/python3/dist-packages/datalad/cmd.py\", line 982, in run\r\n    raise exc_info[1]\r\n  File \"/usr/lib/python3/dist-packages/datalad/cmd.py\", line 930, in run\r\n    out = proc.communicate()\r\n  File \"/usr/lib/python3.7/subprocess.py\", line 939, in communicate\r\n    stdout, stderr = self._communicate(input, endtime, timeout)\r\n  File \"/usr/lib/python3.7/subprocess.py\", line 1681, in _communicate\r\n    ready = selector.select(timeout)\r\n  File \"/usr/lib/python3.7/selectors.py\", line 415, in select\r\n    fd_event_list = self._selector.poll(timeout)\r\nKeyboardInterrupt\r\n\r\n```\r\n\r\n</details>\r\n\r\n`strace` of the `git-show` process is not informative (nothing seems to be going on)\r\n\r\n```\r\n% strace -p 8068\r\nstrace: Process 8068 attached\r\nstrace: [ Process PID=8068 runs in x32 mode. ]                                              \r\n```\r\n\r\nbut htop reports that process to be running at 100% CPU with 14.5G resident memory size (for 5min now).\r\n\r\n```\r\ndatalad 0.13.1\r\ngit version 2.24.0\r\ngit-annex version: 8.20200330 | 7.20190819+git2-g908476a9b-1~ndall+1\r\n```\r\n\r\nUpdate: It did not actually hang, but ran for 6min. I think that it might not be running in the repo that I thought it should run in (we might want to add a runner's CWD to the logging output).\r\n\r\nUpdate2: Indeed, the CWD of git-show point to a subdataset, and as visible in the traceback above this call is triggered by a `GitRepo.get_hexsha()` call.\r\n\r\nNow in this particular call it is asking for the hexsha of HEAD (`commitish=None`). I can get this in less than 10ms vs 6min with `git-show`:\r\n\r\n```\r\n% time git log -1 --format=%H | cat\r\n4c3df804a89bd2417e0d51dddb38a6129c1993c5\r\ngit log -1 --format=%H  0.00s user 0.00s system 83% cpu 0.009 total\r\n```\r\n\r\nThe nature of the last commit is a giant octopus-merge of 1000 branches. it seems that `git-show` is doing a lot more inspection. I have not (yet) determined a way to have `git-show` do less.", "closed_by": {"login": "kyleam", "id": 1297788, "node_id": "MDQ6VXNlcjEyOTc3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleam", "html_url": "https://github.com/kyleam", "followers_url": "https://api.github.com/users/kyleam/followers", "following_url": "https://api.github.com/users/kyleam/following{/other_user}", "gists_url": "https://api.github.com/users/kyleam/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleam/subscriptions", "organizations_url": "https://api.github.com/users/kyleam/orgs", "repos_url": "https://api.github.com/users/kyleam/repos", "events_url": "https://api.github.com/users/kyleam/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleam/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4801/timeline", "performed_via_github_app": null}