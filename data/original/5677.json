{"url": "https://api.github.com/repos/datalad/datalad/issues/5677", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5677/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5677/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5677/events", "html_url": "https://github.com/datalad/datalad/issues/5677", "id": 896379090, "node_id": "MDU6SXNzdWU4OTYzNzkwOTA=", "number": 5677, "title": "Support credential query via config manager", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778592, "node_id": "MDU6TGFiZWw2Mzc3ODU5Mg==", "url": "https://api.github.com/repos/datalad/datalad/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/datalad/datalad/milestones/86", "html_url": "https://github.com/datalad/datalad/milestone/86", "labels_url": "https://api.github.com/repos/datalad/datalad/milestones/86/labels", "id": 6382960, "node_id": "MDk6TWlsZXN0b25lNjM4Mjk2MA==", "number": 86, "title": "0.15.0", "description": "", "creator": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 22, "state": "open", "created_at": "2021-02-02T14:46:01Z", "updated_at": "2021-09-10T17:50:04Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2021-05-20T07:11:50Z", "updated_at": "2021-05-25T19:32:59Z", "closed_at": "2021-05-25T19:32:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "ATM we have a custom way to provide credentials when a keystore is not an option or desirable for whatever reason. However, this method is not without flaws. Summary: https://github.com/datalad/datalad/issues/4981\r\n\r\nThis issue also argues to query ConfigManager instead of a direct ENV variable to gain a substantial amount of flexibility, e.g. specify via ENV var, or commandline arg (`-c ...`), or from config files already read at system/user/dataset level. Such a setup would also make override credentials accessible to convenience tools like http://docs.datalad.org/projects/mihextras/en/latest/generated/man/datalad-x-configuration.html\r\n\r\nThis issue is aiming to collect all loose ends and make this move happen.\r\n\r\n### Status quo\r\nThe ultimate ENV var query is presently made here: https://github.com/datalad/datalad/blob/8defef58239d9c588992eee4878fe2873b920734/datalad/support/keyring_.py#L50\r\n\r\nIt is lacking a meaningful markup of the ENV var to clearly indicate a credential component (see https://github.com/datalad/datalad/pull/4135)\r\n\r\nImportantly, it precedes the an actual keyring query.\r\n\r\nThe function is actually called by https://github.com/datalad/datalad/blob/8defef58239d9c588992eee4878fe2873b920734/datalad/downloaders/credentials.py#L39\r\n\r\nmore precisely in three methods\r\n\r\nhttps://github.com/datalad/datalad/blob/8defef58239d9c588992eee4878fe2873b920734/datalad/downloaders/credentials.py#L90\r\n\r\nhttps://github.com/datalad/datalad/blob/8defef58239d9c588992eee4878fe2873b920734/datalad/downloaders/credentials.py#L154\r\n\r\nhttps://github.com/datalad/datalad/blob/8defef58239d9c588992eee4878fe2873b920734/datalad/downloaders/credentials.py#L177\r\n\r\nI would argue that this class and its methods are a more appropriate layer to query for credentials, rather than `keyring_`.\r\n\r\n### ENV var composition\r\n\r\nATM a query ENV var is built with the rule `'DATALAD_%s_%s' % (name, field)).replace('-', '_')`, where `name` is essentially user-provided and unpredictable (see [handbook](http://handbook.datalad.org/en/latest/beyond_basics/101-146-providers.html?highlight=credential%20%3D%20#example-data-access-to-a-server-that-requires-basic-http-authentication)) and `field` is defined by the credential type. -core defines at least the following, but there may be more:\r\n- `user`\r\n- `password`\r\n- `token`\r\n- `key_id`\r\n- `secret_id`\r\n- `session`\r\n- `expiration`\r\n\r\nFollowing the spirit of https://github.com/datalad/datalad/pull/4135 we could introduce configuration variables of the pattern\r\n\r\n`datalad.credential.<name>.<field>`\r\n\r\nThis would nicely map onto the git config syntax. `name` can contain any character except newline and the null byte (a reasonable constraint for a user provided value). The `field` must only contain alphanum and `-`, again reasonable for a developer-made choice, and requires minimal modification from the status quo `-` <-> `_`.\r\n\r\nWith a switch to query `ConfigManager` it will no longer be necessary to support any `name` specification via ENV var, because alternatives exist. However, any specification rule (and name mapping) will be uniform across all ENV var use in datalad.\r\n\r\n### Plan\r\n\r\n- [x] Switch to ConfigManager instead of direct `os.environ` query\r\n- [x] Consult `ConfigManager` in `Credential` not `Keyring`\r\n- [x] Support `datalad.credential.<name>.<field>` config settings (map field names via `_` -> `-`;, do not map `name` in any way, other than what `ConfigManager` does for all variables)", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5677/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5677/timeline", "performed_via_github_app": null}