{"url": "https://api.github.com/repos/datalad/datalad/issues/5062", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5062/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5062/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5062/events", "html_url": "https://github.com/datalad/datalad/issues/5062", "id": 726457637, "node_id": "MDU6SXNzdWU3MjY0NTc2Mzc=", "number": 5062, "title": "RF AnnexRepo: extend/unify init_remote and enable_remote", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778592, "node_id": "MDU6TGFiZWw2Mzc3ODU5Mg==", "url": "https://api.github.com/repos/datalad/datalad/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": ""}, {"id": 180416763, "node_id": "MDU6TGFiZWwxODA0MTY3NjM=", "url": "https://api.github.com/repos/datalad/datalad/labels/good%20first%20issue", "name": "good first issue", "color": "fbca04", "default": true, "description": ""}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-10-21T12:59:49Z", "updated_at": "2020-10-21T15:05:03Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "`datalad/distributed/tests/ria_utils.py` already has\r\n\r\n```python\r\ndef initremote(repo, name, encryption=None, config=None):\r\n    cfg = dict(config) if config else {}\r\n    cfg['encryption'] = encryption if encryption else 'none'\r\n    args = ['{}={}'.format(k, v) for k, v in cfg.items()]\r\n    repo.init_remote(name, args)\r\n\r\n\r\ndef initexternalremote(repo, name, type, encryption=None, config=None):\r\n    config = dict(\r\n        config if config else {},\r\n        type='external',\r\n        externaltype=type,\r\n    )\r\n    return initremote(repo, name, encryption=encryption, config=config)\r\n```\r\nso IMHO we should just tune our existing `init_remote` and `enable_remote` to accept options given as a dict (and do above tune up), and `init_remote` get a kwargs `encryption=None`, `external=False`.  That would simplify use of `init_remote` and remove custom  (albeit generic) code in `datalad/distributed/tests/ria_utils.py`", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5062/timeline", "performed_via_github_app": null}