{"url": "https://api.github.com/repos/datalad/datalad/issues/5596", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5596/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5596/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5596/events", "html_url": "https://github.com/datalad/datalad/issues/5596", "id": 865026174, "node_id": "MDU6SXNzdWU4NjUwMjYxNzQ=", "number": 5596, "title": "Need for checking/acting upon empty git config identity", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 390153891, "node_id": "MDU6TGFiZWwzOTAxNTM4OTE=", "url": "https://api.github.com/repos/datalad/datalad/labels/UX", "name": "UX", "color": "0052cc", "default": false, "description": "user experience"}, {"id": 545918236, "node_id": "MDU6TGFiZWw1NDU5MTgyMzY=", "url": "https://api.github.com/repos/datalad/datalad/labels/DX", "name": "DX", "color": "0052cc", "default": false, "description": "developer experience"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-04-22T14:34:53Z", "updated_at": "2021-07-21T08:39:28Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I feel we had discussion about this before, but failed to find it and there was a new \"incident\".\r\n\r\n<details>\r\n<summary>Seemingly due to newer git-annex, but failed to reproduce locally</summary> \r\n\r\n```shell\r\n$> grep -e '\\(datalad\\|git\\).*/linux' ci-{good,bad}.txt\r\nci-good.txt:2021-03-29T11:27:57.7345255Z Included Software: https://github.com/actions/virtual-environments/blob/ubuntu20/20210318.0/images/linux/Ubuntu2004-README.md\r\nci-good.txt:2021-03-29T11:28:28.2998717Z   datalad            conda-forge/linux-64::datalad-0.14.0-py37h89c1867_0\r\nci-good.txt:2021-03-29T11:28:28.3011058Z   git                conda-forge/linux-64::git-2.30.2-pl5320h24fefe6_1\r\nci-good.txt:2021-03-29T11:28:28.3012277Z   git-annex          conda-forge/linux-64::git-annex-8.20210310-alldep_h27987b5_100\r\nci-bad.txt:2021-04-02T13:49:42.2590084Z Included Software: https://github.com/actions/virtual-environments/blob/ubuntu20/20210330.1/images/linux/Ubuntu2004-README.md\r\nci-bad.txt:2021-04-02T13:50:17.2045526Z   datalad            conda-forge/linux-64::datalad-0.14.0-py37h89c1867_0\r\nci-bad.txt:2021-04-02T13:50:17.2056306Z   git                conda-forge/linux-64::git-2.30.2-pl5320h24fefe6_1\r\nci-bad.txt:2021-04-02T13:50:17.2057550Z   git-annex          conda-forge/linux-64::git-annex-8.20210330-alldep_h27987b5_100\r\n```\r\n</details>\r\n\r\ntests of spikeextractors which use datalad's `install` within tests started to error out.\r\n\r\ngood: https://github.com/SpikeInterface/spikeextractors/actions/runs/697673470\r\nbad: https://github.com/SpikeInterface/spikeextractors/actions/runs/711826829\r\n\r\nThe dump of all our git fetch progress logs flood, pytest tracebacks and then our summary at the end \r\n```\r\n...\r\n2021-04-02T13:56:53.4486821Z E                          '/home/runner/work/spikeextractors/spikeextractors/ephy_testing_data/openephysbinary/v0.4.4.1_with_video_tracking/settings.xml']),\r\n2021-04-02T13:56:53.4488421Z E             'path': '/home/runner/work/spikeextractors/spikeextractors/ephy_testing_data/openephysbinary/v0.4.4.1_with_video_tracking',\r\n2021-04-02T13:56:53.4489961Z E             'refds': '/home/runner/work/spikeextractors/spikeextractors/ephy_testing_data',\r\n2021-04-02T13:56:53.4490813Z E             'status': 'impossible',\r\n2021-04-02T13:56:53.4491411Z E             'type': 'directory'}]\r\n2021-04-02T13:56:53.4491685Z\r\n2021-04-02T13:56:53.4492664Z /usr/share/miniconda/lib/python3.7/site-packages/datalad/interface/utils.py:457: IncompleteResultsError\r\n2021-04-02T13:56:53.4493839Z ----------------------------- Captured stdout call -----------------------------\r\n2021-04-02T13:56:53.4494279Z\r\n2021-04-02T13:56:53.4494481Z\r\n2021-04-02T13:56:53.4494666Z\r\n2021-04-02T13:56:53.4495130Z  TESTING OpenEphysRecording...\r\n2021-04-02T13:56:53.4496002Z ----------------------------- Captured stderr call -----------------------------\r\n2021-04-02T13:56:53.4498796Z [ERROR] git-annex: user error (git [\"--git-dir=.git\",\"--work-tree=.\",\"--literal-pathspecs\",\"-c\",\"annex.dotfiles=true\",\"-c\",\"annex.retry=3\",\"commit-tree\",\"759e28d0f8129e5b959370a1d74bf4bd7cbbe44e\",\"--no-gpg-sign\",\"-p\",\"refs/heads/git-annex\"] exited 128) [get(/home/runner/work/spikeextractors/spikeextractors/ephy_testing_data/openephysbinary/v0.4.4.1_with_video_tracking/experiment1/recording1/continuous/Rhythm_FPGA-100.0/continuous.dat)]\r\n2021-04-02T13:56:53.4503119Z [ERROR] git-annex: user error (git [\"--git-dir=.git\",\"--work-tree=.\",\"--literal-pathspecs\",\"-c\",\"annex.dotfiles=true\",\"-c\",\"annex.retry=3\",\"commit-tree\",\"759e28d0f8129e5b959370a1d74bf4bd7cbbe44e\",\"--no-gpg-sign\",\"-p\",\"refs/heads/git-annex\"] exited 128) [get(/home/runner/work/spikeextractors/spikeextractors/ephy_testing_data/openephysbinary/v0.4.4.1_with_video_tracking/experiment1/recording1/continuous/Rhythm_FPGA-100.0/timestamps.npy)]\r\n2021-04-02T13:56:53.4507757Z [ERROR] git-annex: user error (git [\"--git-dir=.git\",\"--work-tree=.\",\"--literal-pathspecs\",\"-c\",\"annex.dotfiles=true\",\"-c\",\"annex.retry=3\",\"commit-tree\",\"759e28d0f8129e5b959370a1d74bf4bd7cbbe44e\",\"--no-gpg-sign\",\"-p\",\"refs/heads/git-annex\"] exited 128) [get(/home/runner/work/spikeextractors/spikeextractors/ephy_testing_data/openephysbinary/v0.4.4.1_with_video_tracking/experiment1/recording1/events/Message_Center-904.0/TEXT_group_1/channels.npy)]\r\n```\r\nlead me on a notable time investment to try to reproduce/troubleshoot , confusion (there might be some extra issue since that 759e28d0f8129e5b959370a1d74bf4bd7cbbe44e is not within the dataset of interest AFAIK), only then to spot somewhere on the top\r\n\r\n```\r\n2021-04-02T13:56:53.2671022Z ----------------------------- Captured stderr call -----------------------------\r\n2021-04-02T13:56:53.2671980Z [INFO] Cloning dataset to Dataset(/home/runner/work/spikeextractors/spikeextractors/ephy_testing_data)\r\n2021-04-02T13:56:53.2673739Z [INFO] Attempting to clone from https://gin.g-node.org/NeuralEnsemble/ephy_testing_data to /home/runner/work/spikeextractors/spikeextractors/ephy_testing_data\r\n2021-04-02T13:56:53.2674886Z [INFO] Start enumerating objects\r\n2021-04-02T13:56:53.2675408Z [INFO] Start counting objects\r\n2021-04-02T13:56:53.2675898Z [INFO] Start compressing objects\r\n2021-04-02T13:56:53.2676399Z [INFO] Start receiving objects\r\n2021-04-02T13:56:53.2676895Z [INFO] Start resolving deltas\r\n2021-04-02T13:56:53.2677748Z [INFO] Completed clone attempts for Dataset(/home/runner/work/spikeextractors/spikeextractors/ephy_testing_data)\r\n2021-04-02T13:56:53.2678707Z [INFO] Scanning for unlocked files (this may take some time)\r\n2021-04-02T13:56:53.2679264Z [INFO] Author identity unknown\r\n2021-04-02T13:56:53.2679632Z |\r\n2021-04-02T13:56:53.2680015Z | *** Please tell me who you are.\r\n2021-04-02T13:56:53.2680376Z |\r\n2021-04-02T13:56:53.2680649Z | Run\r\n2021-04-02T13:56:53.2680937Z |\r\n2021-04-02T13:56:53.2681598Z |   git config --global user.email \"you@example.com\"\r\n2021-04-02T13:56:53.2682367Z |   git config --global user.name \"Your Name\"\r\n2021-04-02T13:56:53.2682794Z |\r\n2021-04-02T13:56:53.2683344Z | to set your account's default identity.\r\n2021-04-02T13:56:53.2684119Z | Omit --global to set the identity only in this repository.\r\n2021-04-02T13:56:53.2684868Z |\r\n2021-04-02T13:56:53.2686394Z | fatal: empty ident name (for <runner@fv-az91-839.ee1hidbmnleedhigf2zey52ukb.gx.internal.cloudapp.net>) not allowed\r\n2021-04-02T13:56:53.2689949Z [INFO] git-annex: user error (git [\"--git-dir=.git\",\"--work-tree=.\",\"--literal-pathspecs\",\"-c\",\"annex.dotfiles=true\",\"-c\",\"annex.retry=3\",\"commit-tree\",\"759e28d0f8129e5b959370a1d74bf4bd7cbbe44e\",\"--no-gpg-sign\",\"-p\",\"refs/heads/git-annex\"] exited 128)\r\n2021-04-02T13:56:53.2691775Z ------------------------------ Captured log call -------------------------------\r\n```\r\naddressing which seems had fixed the issue!  and most likely was always there but not fatal (i.e. name was somehow picked up by git)\r\n\r\nSo I think we should address this one way or another.  I see two possible choices\r\n\r\n- `C1`: In spirit of #5591 we just error out if these to become essential config variables are not set.\r\n  - pros: removes any ambiguity, early detection of deficient setup\r\n  - cons: inconvenience to datalad consumer users/CIs where there is really no pragmatic need for setting up git\r\n- `C2`: transparently allow consumer mode of operation (all the `read_only` actions we annotated) after some loud WARNING, by defining our own bogus `GIT_USER_NAME=\"DataLad User\"` and `GIT_USER_EMAIL=datalad-user@example.com` while running `git/annex` commands.  It would be somewhat inline with how git does it -- but it would prevent that `fatal: empty ident name`\r\n  - pros: consumer mode of operation would still work nicely in any env\r\n  - cons: overloads default behavior/message by git (could be taken as pros actually), we unlikely want to check config per repo - so would work only globally\r\n\r\nmay be something else or a variant of the above, WDYT?\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5596/timeline", "performed_via_github_app": null}