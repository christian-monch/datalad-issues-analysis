{"url": "https://api.github.com/repos/datalad/datalad/issues/3827", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/3827/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/3827/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/3827/events", "html_url": "https://github.com/datalad/datalad/issues/3827", "id": 511268298, "node_id": "MDU6SXNzdWU1MTEyNjgyOTg=", "number": 3827, "title": "Add ability to generate submodule clone URLs based on submodule properties", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 440544386, "node_id": "MDU6TGFiZWw0NDA1NDQzODY=", "url": "https://api.github.com/repos/datalad/datalad/labels/fix-implemented", "name": "fix-implemented", "color": "0e8a16", "default": false, "description": "A fix is available, but has not been merged or released, yet."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-23T11:45:25Z", "updated_at": "2019-10-28T16:06:03Z", "closed_at": "2019-10-28T16:06:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "ATM DataLad already supports the generation of additional candidate clone URLs besides the one hardcoded in `.gitmodules` https://github.com/datalad/datalad/blob/004daa2216c8451a6ad84eec527123c1481242c9/datalad/distribution/get.py#L80\r\n\r\nIt can be instrumental to not have to record a URL, or at least be able to overwrite a URL record without having to actually modify a dataset -- especially when dealing with large numbers of datasets. Having a configurable mechanism would also aid longevity, as data**set** availability can be made more robust.\r\n\r\nThis somewhat relates to https://github.com/datalad/datalad/issues/947 where a global dataset catalog could be queried for the location of a particular dataset that is needed as a subdataset, even if the included submodule URL is no longer valid.\r\n\r\nAs of https://github.com/datalad/datalad/commit/16dc4937595542ebb2b8d26a1220eb93e5828bba we include the DataLad dataset ID in the submodule record. Consequently, while a submodule record of a locally created dataset hierarchy can be rather useless looking like this:\r\n\r\n```\r\n% cat .gitmodules\r\n[submodule \"sub\"]\r\n        path = sub\r\n        url = ./sub\r\n        branch = master\r\n        datalad-id = 740aa162-f3d5-11e9-9625-f0d5bf7b5561\r\n```\r\n\r\nThe dataset ID offers the possibility for further investigation.\r\n\r\n### Proposal\r\n\r\nI want to enhance the candidate URL generation with a configuration-based templating mechanism that can use any known submodule property to format a URL. Let's say I have a tree of bare repos on a server that are structured based on their datalad ID. I could have:\r\n\r\n```\r\ndatalad.get.subdataset_url_candidate = 'store.example.com:/data/{id:.3}/{id[3]}{id[4]}{id[5]}{id[6]}{id[7]}{id[8]}{id[9]}{id[10]}{id[11]}{id[12]}{id[13]}{id[14]}{id[15]}{id[16]}{id[17]}{id[18]}{id[19]}{id[20]}{id[21]}{id[22]}{id[23]}{id[24]}{id[25]}{id[26]}{id[27]}{id[28]}{id[29]}{id[30]}{id[31]}{id[32]}{id[33]}{id[34]}{id[35]}\r\n```\r\n\r\nwhich resolves to `store.example.com:/data/740/aa162-f3d5-11e9-9625-f0d5bf7b5561` when sent through `templ.format(**submod_props)` (datalad id, broken into its first three bytes and the rest; admittely obscure, but what counts is that it is possible).\r\n\r\nThe same mechanism can later be used to enable query of a particular redirector, e.g.\r\n\r\n```\r\ndatalad.get.subdataset_url_candidate = http://dx.datalad.org/{id}\r\n```\r\n\r\nand of course multiple queries can be configured:\r\n\r\n```\r\n# local name based catalog (stupid idea, but hey...)\r\ndatalad.get.subdataset_url_candidate = /data/{name}\r\n# global redirector\r\ndatalad.get.subdataset_url_candidate = http://dx.datalad.org/{id}\r\n```\r\n\r\nAs already the case, candidate URLs are tried in order and the first one to succeed terminates the process.\r\n\r\nIt would make sense to RF the current hard-coded behavior out, and also expose the currently tried URL variants `.../.git`, `....git` though this mechanism. This could be achieved by adding the configured remote URL of the superdataset to the list of submodule properties.\r\n", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/3827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/3827/timeline", "performed_via_github_app": null}