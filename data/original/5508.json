{"url": "https://api.github.com/repos/datalad/datalad/issues/5508", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5508/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5508/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5508/events", "html_url": "https://github.com/datalad/datalad/issues/5508", "id": 834370381, "node_id": "MDU6SXNzdWU4MzQzNzAzODE=", "number": 5508, "title": "Datalad get fails on unauthorized", "user": {"login": "joeyzhou98", "id": 35869923, "node_id": "MDQ6VXNlcjM1ODY5OTIz", "avatar_url": "https://avatars.githubusercontent.com/u/35869923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeyzhou98", "html_url": "https://github.com/joeyzhou98", "followers_url": "https://api.github.com/users/joeyzhou98/followers", "following_url": "https://api.github.com/users/joeyzhou98/following{/other_user}", "gists_url": "https://api.github.com/users/joeyzhou98/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeyzhou98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeyzhou98/subscriptions", "organizations_url": "https://api.github.com/users/joeyzhou98/orgs", "repos_url": "https://api.github.com/users/joeyzhou98/repos", "events_url": "https://api.github.com/users/joeyzhou98/events{/privacy}", "received_events_url": "https://api.github.com/users/joeyzhou98/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2021-03-18T04:08:32Z", "updated_at": "2021-05-20T15:17:36Z", "closed_at": "2021-03-19T22:00:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### What is the problem?\r\n`datalad get` on a [file](https://files.osf.io/v1/resources/37emg/providers/osfstorage/5e8524691ab24301dae037a9) that requires bearer token authentication in the header simply fails without giving the user a chance to enter their crendentials/token. How would a user retrieve that file, given that they have the right token/credentials for it?\r\n```\r\n(venv) joey@Joeys-MacBook-Pro private-osf-test % git annex whereis test.txt\r\nwhereis test.txt (2 copies) \r\n        00000000-0000-0000-0000-000000000001 -- web\r\n        f7bd307e-abfb-4045-83e3-a326262d54d9 -- joey@ip-192-168-0-13.ec2.internal:~/Documents/CONP/test\r\n\r\n  web: https://files.osf.io/v1/resources/37emg/providers/osfstorage/5e8524691ab24301dae037a9\r\nok\r\n(venv) joey@Joeys-MacBook-Pro private-osf-test % datalad get test.txt\r\n[ERROR  ] download failed: Unauthorized                                                                                                                                                                        \r\n| download failed\r\n| download failed: Unauthorized\r\n| download failed\r\n| download failed: Unauthorized\r\n| download failed [get(/Users/joey/Documents/CONP/private-osf-test/test.txt)] \r\nget(error): test.txt (file) [download failed: Unauthorized\r\ndownload failed\r\ndownload failed: Unauthorized\r\ndownload failed\r\ndownload failed: Unauthorized\r\ndownload failed]\r\n(venv) joey@Joeys-MacBook-Pro private-osf-test % \r\n```\r\n#### What steps will reproduce the problem?\r\n1) Create a new local datalad dataset\r\n```\r\n(venv) joey@Joeys-MacBook-Pro CONP % datalad create test2\r\n[INFO   ] Creating a new annex repo at /Users/joey/Documents/CONP/test2 \r\n[INFO   ] Scanning for unlocked files (this may take some time) \r\ncreate(ok): /Users/joey/Documents/CONP/test2 (dataset)\r\n(venv) joey@Joeys-MacBook-Pro CONP % cd test2\r\n```\r\n2) Try to `datalad download-url` the private file, create new provider with bearer token authentication type and enter this token when prompted: `xfQJd9LJgzVubFhnQoLFqrgRe3WvNRh7aDVFKGLdyxL9W44U8zNZSUoUiHTu2fFgwYoj6F`\r\n```\r\n(venv) joey@Joeys-MacBook-Pro test2 % datalad download-url https://files.osf.io/v1/resources/37emg/providers/osfstorage/5e8524691ab24301dae037a9 \r\n[INFO   ] Downloading 'https://files.osf.io/v1/resources/37emg/providers/osfstorage/5e8524691ab24301dae037a9' into '/Users/joey/Documents/CONP/test2/' \r\nAuthenticated access to https://files.osf.io/v1/resources/37emg/providers/osfstorage/5e8524691ab24301dae037a9 has failed.\r\nWould you like to setup a new provider configuration to access url? (choices: [yes], no): \r\n\r\nNew provider name\r\nUnique name to identify 'provider' for https://files.osf.io/v1/resources/37emg/providers/osfstorage/5e8524691ab24301dae037a9 [files.osf.io]: osftest \r\n\r\nNew provider regular expression\r\nA (Python) regular expression to specify for which URLs this provider should be used [https://files\\.osf\\.io/v1/resources/37emg/providers/osfstorage/5e8524691ab24301dae037a9]: .*osf\\.io.*\r\n\r\nAuthentication type\r\nWhat authentication type to use (choices: aws-s3, bearer_token, bearer_token_anon, html_form, http_auth, http_basic_auth, http_digest_auth, loris-token, nda-s3, none, xnat): bearer_token\r\n\r\nCredential\r\nWhat type of credential should be used? (choices: aws-s3, loris-token, nda-s3, [token], user_password): \r\n\r\nSave provider configuration file\r\nFollowing configuration will be written to /Users/joey/Library/Application Support/datalad/providers/osftest.cfg:\r\n# Provider configuration file created to initially access\r\n# https://files.osf.io/v1/resources/37emg/providers/osfstorage/5e8524691ab24301dae037a9\r\n\r\n[provider:osftest]\r\nurl_re = .*osf\\.io.*\r\nauthentication_type = bearer_token\r\n# Note that you might need to specify additional fields specific to the\r\n# authenticator.  Fow now \"look into the docs/source\" of <class 'datalad.downloaders.http.HTTPBearerTokenAuthenticator'>\r\n# bearer_token_\r\ncredential = osftest\r\n\r\n[credential:osftest]\r\n# If known, specify URL or email to how/where to request credentials\r\n# url = ???\r\ntype = token\r\n (choices: [yes], no): \r\n\r\nYou need to authenticate with 'osftest' credentials.\r\ntoken: \r\n[INFO   ] http session: Authenticating into session for https://files.osf.io/v1/resources/37emg/providers/osfstorage/5e8524691ab24301dae037a9 \r\ndownload_url(ok): /Users/joey/Documents/CONP/test2/test.txt (file)                                                                                                                                             \r\nadd(ok): test.txt (file)                                                                                                                                                                                       \r\nsave(ok): . (dataset)                                                                                                                                                                                          \r\naction summary:                                                                                                                                                                                                \r\n  add (ok: 1)\r\n  download_url (ok: 1)\r\n  save (ok: 1)\r\n```\r\n3) Create github sibling and publish to your github\r\n```\r\n(venv) joey@Joeys-MacBook-Pro test2 % datalad create-sibling-github osf-test-private\r\nYou need to authenticate with 'github' credentials. https://github.com/settings/tokens provides information on how to gain access\r\ntoken: \r\n.: github(-) [https://github.com/joeyzhou98/osf-test-private.git (git)]\r\n'https://github.com/joeyzhou98/osf-test-private.git' configured as sibling 'github' for Dataset(/Users/joey/Documents/CONP/test2)\r\n(venv) joey@Joeys-MacBook-Pro test2 % datalad publish --to github\r\n[INFO   ] Publishing Dataset(/Users/joey/Documents/CONP/test2) to github \r\npublish(ok): . (dataset) [pushed to github: ['[new branch]', '[new branch]']]\r\n```\r\n4) For some reason, `git-annex` is the default branch so switch default branch to `master` in the newly created repo\r\n![image](https://user-images.githubusercontent.com/35869923/111570951-41871b80-877c-11eb-890c-ec03da327f79.png)\r\n5) On another directory/machine `datalad install -r` the new dataset repo\r\n```\r\n(venv) joey@Joeys-MacBook-Pro osf-test-private % cd ..\r\n(venv) joey@Joeys-MacBook-Pro CONP % datalad install -r https://github.com/joeyzhou98/osf-test-private.git\r\n[INFO   ] Installing Dataset(/Users/joey/Documents/CONP/osf-test-private) to get /Users/joey/Documents/CONP/osf-test-private recursively \r\n(venv) joey@Joeys-MacBook-Pro CONP % cd osf-test-private\r\n(venv) joey@Joeys-MacBook-Pro osf-test-private % ls\r\ntest.txt\r\n```\r\n6) Check that the file url is correct using `git annex whereis` (optional) and `datalad get` the new file. Notice you can't and you aren't prompted to enter credentials like when using `datalad download-url`\r\n```\r\n(venv) joey@Joeys-MacBook-Pro osf-test-private % git annex whereis test.txt\r\nwhereis test.txt (2 copies) \r\n        00000000-0000-0000-0000-000000000001 -- web\r\n        75f789b4-80c6-4536-bb1f-942dcc818a60 -- joey@ip-192-168-0-13.ec2.internal:~/Documents/CONP/test2\r\n\r\n  web: https://files.osf.io/v1/resources/37emg/providers/osfstorage/5e8524691ab24301dae037a9\r\nok\r\n(venv) joey@Joeys-MacBook-Pro osf-test-private % datalad get test.txt\r\n[ERROR  ] download failed: Unauthorized                                                                                                                                                                        \r\n| download failed\r\n| download failed: Unauthorized\r\n| download failed\r\n| download failed: Unauthorized\r\n| download failed [get(/Users/joey/Documents/CONP/osf-test-private/test.txt)] \r\nget(error): test.txt (file) [download failed: Unauthorized\r\ndownload failed\r\ndownload failed: Unauthorized\r\ndownload failed\r\ndownload failed: Unauthorized\r\ndownload failed]\r\n```\r\n\r\n#### What version of DataLad are you using (run `datalad --version`)? On what operating system (consider running `datalad wtf`)?\r\n```\r\n(venv) joey@Joeys-MacBook-Pro osf-test-private % datalad wtf   \r\n# WTF\r\n## configuration <SENSITIVE, report disabled by configuration>\r\n## credentials \r\n  - keyring: \r\n    - active_backends: \r\n      - macOS Keyring\r\n      - PlaintextKeyring with no encyption v.1.0 at /Users/joey/.local/share/python_keyring/keyring_pass.cfg\r\n    - config_file: /Users/joey/.config/python_keyring/keyringrc.cfg\r\n    - data_root: /Users/joey/.local/share/python_keyring\r\n## datalad \r\n  - full_version: 0.14.0\r\n  - version: 0.14.0\r\n## dataset \r\n  - id: 81267ad4-7747-47f0-8509-0d5a6a7999d1\r\n  - metadata: <SENSITIVE, report disabled by configuration>\r\n  - path: /Users/joey/Documents/CONP/osf-test-private\r\n  - repo: AnnexRepo\r\n## dependencies \r\n  - annexremote: 1.5.0\r\n  - appdirs: 1.4.4\r\n  - boto: 2.49.0\r\n  - cmd:annex: 8.20200720.1\r\n  - cmd:bundled-git: UNKNOWN\r\n  - cmd:git: 2.24.3\r\n  - cmd:system-git: 2.24.3\r\n  - cmd:system-ssh: 8.1p1\r\n  - git: 3.1.14\r\n  - gitdb: 4.0.5\r\n  - humanize: 3.2.0\r\n  - iso8601: 0.1.14\r\n  - keyring: 22.3.0\r\n  - keyrings.alt: 4.0.2\r\n  - msgpack: 1.0.2\r\n  - requests: 2.25.1\r\n  - wrapt: 1.12.1\r\n## environment \r\n  - LC_CTYPE: en_CA.UTF-8\r\n  - PATH: /Users/joey/Documents/CONP/conp-dataset/venv/bin:/Users/joey/.poetry/bin:/Users/joey/opt/anaconda3/bin:/usr/local/opt/mysql@5.6/bin:/Users/joey/.pyenv/bin:/usr/local/Cellar/pyenv-virtualenv/1.1.5/shims:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\r\n## extensions \r\n## git-annex \r\n  - build flags: \r\n    - Assistant\r\n    - Webapp\r\n    - Pairing\r\n    - S3\r\n    - WebDAV\r\n    - FsEvents\r\n    - TorrentParser\r\n    - MagicMime\r\n    - Feeds\r\n    - Testsuite\r\n  - dependency versions: \r\n    - aws-0.22\r\n    - bloomfilter-2.0.1.0\r\n    - cryptonite-0.27\r\n    - DAV-1.3.4\r\n    - feed-1.3.0.1\r\n    - ghc-8.6.5\r\n    - http-client-0.7.1\r\n    - persistent-sqlite-2.10.6.2\r\n    - torrent-10000.1.1\r\n    - uuid-1.3.13\r\n    - yesod-1.6.0.2\r\n  - key/value backends: \r\n    - SHA256E\r\n    - SHA256\r\n    - SHA512E\r\n    - SHA512\r\n    - SHA224E\r\n    - SHA224\r\n    - SHA384E\r\n    - SHA384\r\n    - SHA3_256E\r\n    - SHA3_256\r\n    - SHA3_512E\r\n    - SHA3_512\r\n    - SHA3_224E\r\n    - SHA3_224\r\n    - SHA3_384E\r\n    - SHA3_384\r\n    - SKEIN256E\r\n    - SKEIN256\r\n    - SKEIN512E\r\n    - SKEIN512\r\n    - BLAKE2B256E\r\n    - BLAKE2B256\r\n    - BLAKE2B512E\r\n    - BLAKE2B512\r\n    - BLAKE2B160E\r\n    - BLAKE2B160\r\n    - BLAKE2B224E\r\n    - BLAKE2B224\r\n    - BLAKE2B384E\r\n    - BLAKE2B384\r\n    - BLAKE2BP512E\r\n    - BLAKE2BP512\r\n    - BLAKE2S256E\r\n    - BLAKE2S256\r\n    - BLAKE2S160E\r\n    - BLAKE2S160\r\n    - BLAKE2S224E\r\n    - BLAKE2S224\r\n    - BLAKE2SP256E\r\n    - BLAKE2SP256\r\n    - BLAKE2SP224E\r\n    - BLAKE2SP224\r\n    - SHA1E\r\n    - SHA1\r\n    - MD5E\r\n    - MD5\r\n    - WORM\r\n    - URL\r\n  - local repository version: 8\r\n  - operating system: darwin x86_64\r\n  - remote types: \r\n    - git\r\n    - gcrypt\r\n    - p2p\r\n    - S3\r\n    - bup\r\n    - directory\r\n    - rsync\r\n    - web\r\n    - bittorrent\r\n    - webdav\r\n    - adb\r\n    - tahoe\r\n    - glacier\r\n    - ddar\r\n    - git-lfs\r\n    - hook\r\n    - external\r\n  - supported repository versions: \r\n    - 8\r\n  - upgrade supported from repository versions: \r\n    - 0\r\n    - 1\r\n    - 2\r\n    - 3\r\n    - 4\r\n    - 5\r\n    - 6\r\n    - 7\r\n  - version: 8.20200720.1\r\n## location \r\n  - path: /Users/joey/Documents/CONP/osf-test-private\r\n  - type: dataset\r\n## metadata_extractors \r\n  - annex (datalad 0.14.0): \r\n    - distribution: datalad 0.14.0\r\n    - load_error: None\r\n    - module: datalad.metadata.extractors.annex\r\n    - version: None\r\n  - audio (datalad 0.14.0): \r\n    - distribution: datalad 0.14.0\r\n    - load_error: No module named 'mutagen' [audio.py:<module>:17]\r\n    - module: datalad.metadata.extractors.audio\r\n  - datacite (datalad 0.14.0): \r\n    - distribution: datalad 0.14.0\r\n    - load_error: None\r\n    - module: datalad.metadata.extractors.datacite\r\n    - version: None\r\n  - datalad_core (datalad 0.14.0): \r\n    - distribution: datalad 0.14.0\r\n    - load_error: None\r\n    - module: datalad.metadata.extractors.datalad_core\r\n    - version: None\r\n  - datalad_rfc822 (datalad 0.14.0): \r\n    - distribution: datalad 0.14.0\r\n    - load_error: None\r\n    - module: datalad.metadata.extractors.datalad_rfc822\r\n    - version: None\r\n  - exif (datalad 0.14.0): \r\n    - distribution: datalad 0.14.0\r\n    - load_error: No module named 'exifread' [exif.py:<module>:16]\r\n    - module: datalad.metadata.extractors.exif\r\n  - frictionless_datapackage (datalad 0.14.0): \r\n    - distribution: datalad 0.14.0\r\n    - load_error: None\r\n    - module: datalad.metadata.extractors.frictionless_datapackage\r\n    - version: None\r\n  - image (datalad 0.14.0): \r\n    - distribution: datalad 0.14.0\r\n    - load_error: No module named 'PIL' [image.py:<module>:16]\r\n    - module: datalad.metadata.extractors.image\r\n  - xmp (datalad 0.14.0): \r\n    - distribution: datalad 0.14.0\r\n    - load_error: No module named 'libxmp' [xmp.py:<module>:20]\r\n    - module: datalad.metadata.extractors.xmp\r\n## metadata_indexers \r\n## python \r\n  - implementation: CPython\r\n  - version: 3.7.3\r\n## system \r\n  - distribution:  10.15.7/x86_64\r\n  - encoding: \r\n    - default: utf-8\r\n    - filesystem: utf-8\r\n    - locale.prefered: UTF-8\r\n  - max_path_length: 299\r\n  - name: Darwin\r\n  - release: 19.6.0\r\n  - type: posix\r\n  - version: Darwin Kernel Version 19.6.0: Mon Aug 31 22:12:52 PDT 2020; root:xnu-6153.141.2~1/RELEASE_X86_64\r\n```\r\n#### Is there anything else that would be useful to know in this context?\r\nI've tried to create a new provider to make it authenticate with a token when using `datalad get` like described [here](https://handbook.datalad.org/en/latest/beyond_basics/101-146-providers.html), but it doesn't seem like providers work for the `get` command, only for the `download-url` command\r\n\r\n#### Have you had any success using DataLad before? (to assess your expertise/prior luck.  We would welcome your testimonial additions to https://github.com/datalad/datalad/wiki/Testimonials as well)\r\nYes, I regularly use datalad and use its Python interface to script and integrate platforms like Zenodo and OSF", "closed_by": {"login": "joeyzhou98", "id": 35869923, "node_id": "MDQ6VXNlcjM1ODY5OTIz", "avatar_url": "https://avatars.githubusercontent.com/u/35869923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeyzhou98", "html_url": "https://github.com/joeyzhou98", "followers_url": "https://api.github.com/users/joeyzhou98/followers", "following_url": "https://api.github.com/users/joeyzhou98/following{/other_user}", "gists_url": "https://api.github.com/users/joeyzhou98/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeyzhou98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeyzhou98/subscriptions", "organizations_url": "https://api.github.com/users/joeyzhou98/orgs", "repos_url": "https://api.github.com/users/joeyzhou98/repos", "events_url": "https://api.github.com/users/joeyzhou98/events{/privacy}", "received_events_url": "https://api.github.com/users/joeyzhou98/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5508/timeline", "performed_via_github_app": null}