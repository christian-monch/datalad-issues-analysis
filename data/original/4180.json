{"url": "https://api.github.com/repos/datalad/datalad/issues/4180", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4180/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4180/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4180/events", "html_url": "https://github.com/datalad/datalad/issues/4180", "id": 568919389, "node_id": "MDU6SXNzdWU1Njg5MTkzODk=", "number": 4180, "title": "Approach `get()` parallelization", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 379953235, "node_id": "MDU6TGFiZWwzNzk5NTMyMzU=", "url": "https://api.github.com/repos/datalad/datalad/labels/do-in-parallel", "name": "do-in-parallel", "color": "ffda63", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-21T12:11:36Z", "updated_at": "2020-05-17T20:29:55Z", "closed_at": "2020-05-17T20:29:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "After #4172 we can approach #450. Here is what I know so far:\r\n\r\nThis is a basic sketch of an implementation:\r\n\r\n```\r\n# go with joblib, it is simple\r\nfrom joblib import Parallel, delayed\r\n\r\n# at the core this is what our functions do, yield dicts\r\ndef install_ds(path):\r\n    yield dict(\r\n        path=path,\r\n    )\r\n\r\n# joblib doesn't work with generators as jobs\r\n# we need to unwind them\r\ndef unwind(fx, *args, **kwargs):\r\n    return list(fx(*args, **kwargs))\r\n\r\npaths = [1, 2, 3, 4, 5]\r\n\r\n# use a \"central\" context manager to control the workers,\r\n# avoid over-subscription of CPU and re-use workers\r\nwith Parallel(n_jobs=2) as parallel:\r\n    res = parallel(\r\n        delayed(unwind)(install_ds, p)\r\n        for p in paths\r\n    )\r\n# inspect results and act on them\r\nprint('RES', res)\r\n```\r\n\r\nIssues\r\n- [ ] `Parallel(n_jobs=2, prefer='threads')`  core-dumps for me, hence we would be limited to multiprocessing (might not be an issue)\r\n- [ ] jobs should not \"reach up\" into a superdataset to avoid concurrency issues, but sadly this is not how we wrote it. RF required.", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4180/timeline", "performed_via_github_app": null}