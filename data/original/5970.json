{"url": "https://api.github.com/repos/datalad/datalad/issues/5970", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/5970/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/5970/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/5970/events", "html_url": "https://github.com/datalad/datalad/issues/5970", "id": 991470591, "node_id": "MDU6SXNzdWU5OTE0NzA1OTE=", "number": 5970, "title": "RF to use e.g. pathvalidate and not rely on side effects?", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-09-08T19:45:55Z", "updated_at": "2021-09-08T19:52:15Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Follow up to #5968 switching for using a side-effect of `.exists` to the side-effects of `.resolve`.   I do not see any description in `.resolve` doc that it would provide any similar guarantee/check in the future... \r\n\r\nFWIW this [SO](https://stackoverflow.com/questions/9532499/check-whether-a-path-is-valid-in-python-without-creating-a-file-at-the-paths-ta) post lead me to https://pypi.org/project/pathvalidate/  (not in debian - filed an RFP for now, [in conda-forge](https://anaconda.org/conda-forge/pathvalidate)), which seems to work on sample cases I have tried, and that exception error might provide user valuable information, thus improve UX:\r\n\r\n```\r\n>>> pathvalidate.validate_file_path('con')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\DataLad\\miniconda3\\envs\\datalad\\lib\\site-packages\\pathvalidate\\_filepath.py\", line 333, in validate_file_path\r\n    validate_filepath(file_path, platform, max_path_len)\r\n  File \"C:\\Users\\DataLad\\miniconda3\\envs\\datalad\\lib\\site-packages\\pathvalidate\\_filepath.py\", line 326, in validate_filepath\r\n    FilePathValidator(\r\n  File \"C:\\Users\\DataLad\\miniconda3\\envs\\datalad\\lib\\site-packages\\pathvalidate\\_filepath.py\", line 199, in validate\r\n    self.__fname_validator._validate_reserved_keywords(entry)\r\n  File \"C:\\Users\\DataLad\\miniconda3\\envs\\datalad\\lib\\site-packages\\pathvalidate\\_base.py\", line 128, in _validate_reserved_keywords\r\n    raise ReservedNameError(\r\npathvalidate.error.ReservedNameError: 'con' is a reserved name, reason=RESERVED_NAME, target-platform=universal, reusable_name=False\r\n>>> pathvalidate.validate_file_path('C:/Users/appveyor/ssh:/mars:Zoidberg')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\DataLad\\miniconda3\\envs\\datalad\\lib\\site-packages\\pathvalidate\\_filepath.py\", line 333, in validate_file_path\r\n    validate_filepath(file_path, platform, max_path_len)\r\n  File \"C:\\Users\\DataLad\\miniconda3\\envs\\datalad\\lib\\site-packages\\pathvalidate\\_filepath.py\", line 326, in validate_filepath\r\n    FilePathValidator(\r\n  File \"C:\\Users\\DataLad\\miniconda3\\envs\\datalad\\lib\\site-packages\\pathvalidate\\_filepath.py\", line 172, in validate\r\n    self.validate_abspath(value)\r\n  File \"C:\\Users\\DataLad\\miniconda3\\envs\\datalad\\lib\\site-packages\\pathvalidate\\_filepath.py\", line 243, in validate_abspath\r\n    raise err_object\r\npathvalidate.error.ValidationError: reason=MALFORMED_ABS_PATH, target-platform=universal, description=an invalid absolute file path (C:/Users/appveyor/ssh:/mars:Zoidberg) for the platform (universal). to avoid the error, specify an appropriate platform correspond with the path format, or 'auto'.\r\n>>> pathvalidate.validate_file_path('con1')\r\n>>>\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "closed_by": null, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/5970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/5970/timeline", "performed_via_github_app": null}