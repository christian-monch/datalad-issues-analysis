{"url": "https://api.github.com/repos/datalad/datalad/issues/2087", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/2087/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/2087/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/2087/events", "html_url": "https://github.com/datalad/datalad/pull/2087", "id": 289981573, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY1MTczMDE2", "number": 2087, "title": "Degrade git-annex metadata from having the last word to a mere metadata source among many", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 63778594, "node_id": "MDU6TGFiZWw2Mzc3ODU5NA==", "url": "https://api.github.com/repos/datalad/datalad/labels/question", "name": "question", "color": "fbca04", "default": true, "description": "Issue asks a question rather than reporting a problem"}, {"id": 374318336, "node_id": "MDU6TGFiZWwzNzQzMTgzMzY=", "url": "https://api.github.com/repos/datalad/datalad/labels/conference%20agenda%20item", "name": "conference agenda item", "color": "fbca04", "default": false, "description": "Scheduled to be discussed in a developer meeting"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-19T13:50:10Z", "updated_at": "2018-07-15T03:52:12Z", "closed_at": "2018-01-28T10:47:28Z", "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/2087", "html_url": "https://github.com/datalad/datalad/pull/2087", "diff_url": "https://github.com/datalad/datalad/pull/2087.diff", "patch_url": "https://github.com/datalad/datalad/pull/2087.patch"}, "body": "#### What is the problem?\r\n\r\ngit-annex has simplistic metadata capabilities in contrast to other metadata sources\r\n  - constraints of key name composition\r\n  - stored directly in git, hence bloats the repo if things change or are heavy\r\n  - only considers annexed files\r\n\r\nHowever, the current `master` git-annex metadata is queried as a special metadata source that is used to override/fix metadata aggregated from other sources (with the above limitations). Moreover, this actually brings @yarikoptic to tears when he aggregates the main superdataset, as git-annex is asked to reports its knowledge about any annexed files in any dataset, regardless of whether there was any change -- simply because all datasets are locally present. The same happens on index generation: when a dataset is locally present, git annex gets re-querried to check if there have been any metadata changes since the last aggregation -- this makes search index generation seemingly very slow when subdatasets are locally present.\r\n\r\nGiven all the above, I propose to treat git-annex metadata as just another metadata source, implement a parser for it (pretty much done already in the code base), and aggregate it like anything else. When metadata is requested, simply report locally aggregated metadata, do not query git annex again.\r\n\r\nThis will achieve two things:\r\n- makes things substantially faster when using/querying metadata (apart from aggregation)\r\n- does not impose git-annex' limits on keys and what it can store metadata for on other parts of datalad.\r\n\r\nImplementing a layer capable of amending any arbitrary metadata can be done in the future, once the need arises.", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/2087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/2087/timeline", "performed_via_github_app": null}