{"url": "https://api.github.com/repos/datalad/datalad/issues/4068", "repository_url": "https://api.github.com/repos/datalad/datalad", "labels_url": "https://api.github.com/repos/datalad/datalad/issues/4068/labels{/name}", "comments_url": "https://api.github.com/repos/datalad/datalad/issues/4068/comments", "events_url": "https://api.github.com/repos/datalad/datalad/issues/4068/events", "html_url": "https://github.com/datalad/datalad/pull/4068", "id": 553507268, "node_id": "MDExOlB1bGxSZXF1ZXN0MzY1ODI2NTU3", "number": 4068, "title": "NF: Command abstractions", "user": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 192403870, "node_id": "MDU6TGFiZWwxOTI0MDM4NzA=", "url": "https://api.github.com/repos/datalad/datalad/labels/external-tools", "name": "external-tools", "color": "0052cc", "default": false, "description": ""}, {"id": 526935563, "node_id": "MDU6TGFiZWw1MjY5MzU1NjM=", "url": "https://api.github.com/repos/datalad/datalad/labels/feedback-desired", "name": "feedback-desired", "color": "fbca04", "default": false, "description": ""}, {"id": 545918236, "node_id": "MDU6TGFiZWw1NDU5MTgyMzY=", "url": "https://api.github.com/repos/datalad/datalad/labels/DX", "name": "DX", "color": "0052cc", "default": false, "description": "developer experience"}, {"id": 1453907298, "node_id": "MDU6TGFiZWwxNDUzOTA3Mjk4", "url": "https://api.github.com/repos/datalad/datalad/labels/stale-PR-closed-without-merge", "name": "stale-PR-closed-without-merge", "color": "ffffff", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-01-22T12:24:50Z", "updated_at": "2020-10-04T11:10:49Z", "closed_at": "2020-10-04T11:10:49Z", "author_association": "MEMBER", "active_lock_reason": null, "pull_request": {"url": "https://api.github.com/repos/datalad/datalad/pulls/4068", "html_url": "https://github.com/datalad/datalad/pull/4068", "diff_url": "https://github.com/datalad/datalad/pull/4068.diff", "patch_url": "https://github.com/datalad/datalad/pull/4068.patch"}, "body": "ATM This is more thinking out loud than a concrete implementation. The idea\r\nis this:\r\n\r\nLet's collect basic operation into classes that can take care of doing\r\nthe right thing under different conditions in order to achieve this.\r\nAt the moment, we have the Runner to help with that, but the actual\r\nnature of the operations done are scattered throughout the code.\r\n\r\nThis limits us, and, for example, is something that contributes to the\r\nfact that something like `create_sibling()` can only work with\r\nPOSIX-like system, via SSH connections. Moving the local and remote\r\noperation it performs into helper classes that can be specialized for any\r\ntarget scenario, would help simplify the implementation of that command,\r\nwhile simultaneously make it more flexible, e.g. it could discover\r\nthat the target sibling is at a local path, and internally pick a local\r\noperations helper and achieve the desired result without having to go\r\nthrough SSH. #4066\r\n\r\nLikewise, any, now hardcoded, command execution could be centrally\r\nswitched to a variant that is optimized for the local platform\r\n(look for `LocalOperations` in the diff).\r\n\r\nAnother angle for mid-term improvements would be that less code talks\r\ndirectly to a Runner. Having specialized methods for particular\r\noperations would enable us to optimize the execution to meet our needs\r\nbetter.\r\n\r\nI envision no limit to the scope of supported operations. For example,\r\nsomething like `enable_post_update_hook(path)` would be perfectly\r\nin-scope. But even `edit_textfile_interactively(path)` is easily within\r\nthe range of possibilities. It would be important, though, that the\r\nclasses remain cheap to instantiate.\r\n\r\nIt is also fine, if not all operations are implemented for all potential\r\ntarget scenarios immediately. However, the API of an operation would\r\nneed to be carefully crafted to avoid overfitting any particular\r\nenvironment or use case.\r\n\r\nWe should also consider a similar approach for interfacing with Git\r\ncommands, in particular those that report paths -- which are reported in\r\nPOSIX conventions, but were/are inappropriately treated as native paths,\r\nleading to failure on Windows. However, it is less clear to me how to\r\nconsolidate this with our current approach (ie.  GitRepo.call_git...()).\r\n\r\nIn conclusion, I'd argue that having such an abstraction layer would\r\nbenefit old code by making it more flexible with little effect, and aid\r\nthe design of new code that could be written with the fact in mind that\r\nlow-level operations are taken care off in a platform-appropriate\r\nfashion, but also that they have to be implemented in a\r\nplatform-appropriate fashion, and where this can be done.\r\n\r\n[skip ci]", "closed_by": {"login": "mih", "id": 136479, "node_id": "MDQ6VXNlcjEzNjQ3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/136479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mih", "html_url": "https://github.com/mih", "followers_url": "https://api.github.com/users/mih/followers", "following_url": "https://api.github.com/users/mih/following{/other_user}", "gists_url": "https://api.github.com/users/mih/gists{/gist_id}", "starred_url": "https://api.github.com/users/mih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mih/subscriptions", "organizations_url": "https://api.github.com/users/mih/orgs", "repos_url": "https://api.github.com/users/mih/repos", "events_url": "https://api.github.com/users/mih/events{/privacy}", "received_events_url": "https://api.github.com/users/mih/received_events", "type": "User", "site_admin": false}, "reactions": {"url": "https://api.github.com/repos/datalad/datalad/issues/4068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/datalad/datalad/issues/4068/timeline", "performed_via_github_app": null}